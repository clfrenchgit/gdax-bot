(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    759353,      14325]
NotebookOptionsPosition[    751757,      14077]
NotebookOutlinePosition[    752163,      14094]
CellTagsIndexPosition[    752120,      14091]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Predictive Analytics in Finance", "Title",
 CellChangeTimes->{
  3.6281937293704443`*^9, {3.6281937658121085`*^9, 3.6281937792593317`*^9}, {
   3.63475742518462*^9, 3.634757434997037*^9}, {3.636110051473488*^9, 
   3.6361100642343106`*^9}, {3.63756328258428*^9, 3.6375632933170986`*^9}},
 FontFamily->"Gill Sans MT",
 FontSize->48],

Cell["Patterns detection for outcome prediction", "Subtitle",
 CellChangeTimes->{{3.6281937837677402`*^9, 3.628193798603366*^9}, {
  3.6281968630773573`*^9, 3.6281968635921583`*^9}, {3.634757446775058*^9, 
  3.634757463435887*^9}, {3.636110077697134*^9, 3.636110087337951*^9}, {
  3.6375633889452667`*^9, 3.6375634069008985`*^9}, {3.6381236382079964`*^9, 
  3.6381236402516003`*^9}},
 FontFamily->"Gill Sans MT",
 FontSize->28,
 FontColor->RGBColor[0., 0., 0.5019607843137255]],

Cell[TextData[{
 StyleBox["Igor Hlivka",
  FontWeight->"Bold"],
 "\n",
 StyleBox["Quant Solutions Group",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.628193807183381*^9, 3.628193811598189*^9}, {
  3.634757467975495*^9, 3.6347574780063124`*^9}, {3.6350261344747753`*^9, 
  3.6350261807912564`*^9}}],

Cell["April 2015", "Text",
 CellChangeTimes->{{3.635026213722914*^9, 3.635026218137722*^9}, {
  3.637563410629305*^9, 3.6375634121737075`*^9}}],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.634910186213419*^9, 3.6349101964314375`*^9}, 
   3.635074099313525*^9}],

Cell[TextData[{
 "Classification and clustering which we discussed in previous installments \
naturally extends into another field of data mining - ",
 StyleBox["prediction",
  FontWeight->"Bold"],
 ".  It is well-known that there will be limited benefit of massive amount of \
data collection if the data cannot be analysed, decomposed into signals and \
used to predict future behaviour. Therefore, data analysis in statistics and \
econometrics can be broken down into four major categories:  (i) ",
 StyleBox["prediction",
  FontSlant->"Italic"],
 ", (ii) ",
 StyleBox["summarisation",
  FontSlant->"Italic"],
 ", (iii) ",
 StyleBox["estimation",
  FontSlant->"Italic"],
 ", and (iv) ",
 StyleBox["hypothesis testing",
  FontSlant->"Italic"],
 ". Machine learning , as we have stated previously,  focuses primarily  at \
data organisation and prediction. However, closely related  field is also \
data summarisation  where pattern finding in the data - covered by the \
classification - is of primary interest. Machine learning is therefore about \
developing high-performance computer systems that can provide useful \
predictions in the presence of challenging computational constraints. This \
whole area of data processing is today routinely described as ",
 StyleBox["data science",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", which is  primarily looks at both prediction and summarisation, but also \
extends into data manipulation, visualization, and other similar tasks.\n\nIn \
pure statistical terms, the prediction problem reduces to finding ",
 StyleBox["conditional distribution",
  FontSlant->"Italic"],
 " of some variable ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]]],
 " given some other variables  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["x", "1"], ",", 
      SubscriptBox["x", "2"]}]}]}], TraditionalForm]]],
 ",...",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "n"], TraditionalForm]]],
 "). In data science methodology, variables ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", " "}], TraditionalForm]]],
 "are called \[OpenCurlyQuote]predictors\[CloseCurlyQuote] or \
\[OpenCurlyQuote]features\[CloseCurlyQuote]. The prediction point ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]]],
 " is generally the highest value (mean) of the calibrated conditional \
distribution.\n"
}], "Text",
 CellChangeTimes->{{3.634910477445932*^9, 3.6349105773953075`*^9}, {
   3.634910632276204*^9, 3.634910694005512*^9}, {3.6349107508364124`*^9, 
   3.634910889551856*^9}, {3.634910931016729*^9, 3.634911003588056*^9}, {
   3.6349110386569176`*^9, 3.6349110560041485`*^9}, {3.6349110892010064`*^9, 
   3.63491121641923*^9}, {3.6349112674625196`*^9, 3.6349113478494606`*^9}, {
   3.6350638235268965`*^9, 3.6350638645494537`*^9}, {3.6350736568375473`*^9, 
   3.635073951490865*^9}, {3.6350741087515416`*^9, 3.6350741332279844`*^9}, {
   3.636110221763387*^9, 3.6361104631270113`*^9}, {3.6361105194587097`*^9, 
   3.6361105292555275`*^9}, {3.636110574168006*^9, 3.6361106210616884`*^9}, {
   3.6361106613721595`*^9, 3.6361106643205643`*^9}, 3.636110738644151*^9, 
   3.6361107768486185`*^9, {3.6361108166130877`*^9, 3.6361108641775713`*^9}, {
   3.6361109183096666`*^9, 3.636110921273672*^9}, {3.636110963393746*^9, 
   3.6361111179588175`*^9}, {3.63619423072022*^9, 3.6361942401102333`*^9}, 
   3.6362003101568174`*^9, 3.637564099248621*^9, {3.6375641603819284`*^9, 
   3.637564169585944*^9}, {3.6375642165576267`*^9, 3.6375642175716286`*^9}, {
   3.6375642596605024`*^9, 3.637564261532506*^9}, {3.6375643269278207`*^9, 
   3.6375643289246244`*^9}, {3.6375643855059233`*^9, 
   3.6375643912155333`*^9}, {3.6375644469700317`*^9, 3.637564449356836*^9}, {
   3.6375645601378307`*^9, 3.637564646530782*^9}, {3.6375647451541557`*^9, 
   3.6375648147302775`*^9}, {3.6375648549627485`*^9, 
   3.6375649174720583`*^9}, {3.6375649524005194`*^9, 
   3.6375649579697294`*^9}, {3.63756564046449*^9, 3.637565743949072*^9}, {
   3.6375674164233894`*^9, 3.6375674198709955`*^9}, {3.6376094927655034`*^9, 
   3.6376094950119076`*^9}, {3.6376095521080074`*^9, 
   3.6376095833392625`*^9}, {3.6376096191685257`*^9, 3.637609624176134*^9}, {
   3.637609655422989*^9, 3.6376096839710393`*^9}, {3.6376097254047117`*^9, 
   3.637609748664353*^9}, {3.637758004605089*^9, 3.6377580073194942`*^9}, {
   3.6381236817632732`*^9, 3.638123684680478*^9}, {3.6381237547246013`*^9, 
   3.638123826359927*^9}, {3.6381238642211933`*^9, 3.6381238953432484`*^9}, 
   3.638130175109702*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Prediction basics", "Section",
 CellChangeTimes->{{3.634911372856305*^9, 3.6349113763351107`*^9}, 
   3.6350638736494665`*^9, {3.63611124467784*^9, 3.6361112488586473`*^9}, {
   3.636112677693766*^9, 3.636112678224167*^9}, {3.637858380661564*^9, 
   3.637858385871973*^9}}],

Cell[TextData[{
 "Much of applied econometrics, economics and finance is concerned with \
detecting and summarising relationships in the data. The most common tool is \
(linear) regression analysis. Machine learning offers richer set of tools \
that can usefully summarise various sorts of nonlinear relationships in the \
data. We will focus on these regression-like tools because they are the most \
natural for economic and financial applications.\n\nThe objective of \
prediction is to find some function that gives a good estimate of ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]]],
 " as function of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 ". In machine learning context the data we work with are generally \
considered independent and identically distributed. They may be \
\[OpenCurlyQuote]fat\[CloseCurlyQuote] which implies more predictors relative \
to observations or \[OpenCurlyQuote]tall\[CloseCurlyQuote] which indicated \
many observations relative to predictors. \n\nWhen we build prediction \
routines, we start with some observation of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", " ", "and", "  ", "x"}], TraditionalForm]]],
 " and then want to  obtain the predicted point for the new value ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " .\[CloseCurlyQuote]Good\[CloseCurlyQuote] prediction involves  finding a \
function that minimises some error estimation. Sum of squared residuals, mean \
residual value are generally the most frequently used tools in this context. \
Tradition all method to solve this problem is regression - typically linear \
or logistic However, machine learning offers better options especially when \
there is a lot of data available.  These include trees, nearest neighbors, \
random forests or neural networks.  "
}], "Text",
 CellChangeTimes->{{3.6349113962095456`*^9, 3.6349114222303915`*^9}, {
   3.6361113092775536`*^9, 3.63611135294203*^9}, {3.6361114054673223`*^9, 
   3.636111419928548*^9}, {3.636111456120611*^9, 3.636111468912634*^9}, {
   3.6361115352127504`*^9, 3.636111558753192*^9}, {3.6361115956784563`*^9, 
   3.6361116719781904`*^9}, {3.636111711165459*^9, 3.636111741070712*^9}, {
   3.6361118008500166`*^9, 3.6361118298192673`*^9}, {3.6361119071018033`*^9, 
   3.636111919925026*^9}, {3.6361120565188656`*^9, 3.6361120863305182`*^9}, {
   3.636194345940381*^9, 3.6361943465103817`*^9}, {3.636194896155161*^9, 
   3.636194899035165*^9}, {3.6362003330968494`*^9, 3.636200353506878*^9}, {
   3.6378584105980167`*^9, 3.6378584461996794`*^9}, {3.637858582294318*^9, 
   3.6378586141651745`*^9}, {3.637858696075406*^9, 3.6378587052482224`*^9}, {
   3.6378591997729616`*^9, 3.637859296009531*^9}, 3.637859359376842*^9, {
   3.637859480448655*^9, 3.6378595448923683`*^9}, {3.63785958602964*^9, 
   3.637859589227646*^9}, {3.6378596596305695`*^9, 3.6378598860181675`*^9}, {
   3.637859932307457*^9, 3.6378600275768247`*^9}, {3.63786008197412*^9, 
   3.637860103595758*^9}, {3.6378602217035656`*^9, 3.6378602605788336`*^9}, {
   3.637860324897747*^9, 3.637860454253174*^9}, {3.637860852553074*^9, 
   3.637860853083474*^9}, {3.6378609793656964`*^9, 3.6378609812844996`*^9}, {
   3.638123956292555*^9, 3.6381239771965923`*^9}, 3.638124098408805*^9, {
   3.638130189305727*^9, 3.6381301947033367`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Working with predictions", "Section",
 CellChangeTimes->{{3.6361128074859943`*^9, 3.6361128102159986`*^9}, {
  3.6378610084285474`*^9, 3.637861014746558*^9}}],

Cell["\<\
Objective of prediction routines is to find good out-of-sample estimation to \
the data. This task is not always trivial and regressions are generally known \
to be \[OpenCurlyQuote]weak\[CloseCurlyQuote] around out-of-sample \
predictions. This is generally known as \[OpenCurlyQuote]overfitting\
\[CloseCurlyQuote] problem. Machine learning addresses this problem through:\
\>", "Text",
 CellChangeTimes->{{3.637861090172691*^9, 3.6378611369103727`*^9}, {
   3.637861217219314*^9, 3.6378612708054085`*^9}, {3.6378613013502617`*^9, 
   3.637861304111467*^9}, {3.637861351129949*^9, 3.6378614815305786`*^9}, 
   3.638130205030555*^9}],

Cell[CellGroupData[{

Cell["Regularisation - preference is given to simpler models", "Item",
 CellChangeTimes->{{3.637861490484994*^9, 3.6378615180190425`*^9}}],

Cell["Dataset division into (i) training and (ii) testing sets", "Item",
 CellChangeTimes->{{3.637861490484994*^9, 3.63786149948621*^9}, {
  3.637861577767147*^9, 3.63786160205639*^9}}],

Cell["Cross-validation of the dataset and the model", "Item",
 CellChangeTimes->{{3.637861490484994*^9, 3.63786149948621*^9}, {
  3.637861577767147*^9, 3.63786160205639*^9}, {3.6378617156089897`*^9, 
  3.637861732316619*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Prediction relation to other data mining techniques", "Section",
 CellChangeTimes->{{3.6281939037631507`*^9, 3.628193911297964*^9}, {
  3.6348162861485443`*^9, 3.6348162890657496`*^9}, {3.6349158667736692`*^9, 
  3.6349158697532744`*^9}, {3.636118387044318*^9, 3.6361183976835375`*^9}, {
  3.6378621161728935`*^9, 3.6378621316013203`*^9}}],

Cell["\<\
Irrespective of the method structure, there is a common confusion between \
explanatory and predictive models. In a predictive model only the model\
\[CloseCurlyQuote]s accuracy is important and the structure of the model is \
relatively unimportant, as long as it is robust. In general, models become \
more robust as the number of predictors declines, and hence there is a \
greater tendency towards parsimony in predictive models, often using variable \
selection algorithms.

However, if a model is developed for explanatory purposes, the identity and \
weights of the predictors is the most important part of the model because \
these are used to infer the nature of the relationship between the class and \
the values of the predictor variables.

The contribution made by the predictors is obviously most important in an \
explanatory, rather than a predictive, model. In predictive models the role \
of predictors is less important than the accuracy of the prediction. \
Consequently, the use of variable selection routines that produce a more \
parsimonious model are generally more acceptable in predictive models.\
\>", "Text",
 CellChangeTimes->{
  3.6378621630353756`*^9, {3.637862206029051*^9, 3.6378622244526834`*^9}, {
   3.6378623924035783`*^9, 3.6378624050552006`*^9}, {3.6378624376124573`*^9, 
   3.6378624390476604`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Prediction in Finance", "Section",
 CellChangeTimes->{{3.6378629671085877`*^9, 3.637862976546604*^9}}],

Cell["\<\
The advantages offered by machine learning are well suited for the data \
analysis in finance, particularly when the larger datasets are available. For \
years, the regression technique was dominant in economics and finance on the \
premise of limited amount of data. However,nowadays, in data-rich era, there \
is no reason not to start applying machine learning methods more frequently \
in economic and financial industries with data separation or the use of \
validation sets.\
\>", "Text",
 CellChangeTimes->{{3.6378630035034513`*^9, 3.6378630512239356`*^9}, {
  3.637863082907591*^9, 3.6378631018304243`*^9}, {3.637863333865232*^9, 
  3.637863397170143*^9}, {3.6378634390874166`*^9, 3.637863601906515*^9}, {
  3.6381302218473845`*^9, 3.638130229584998*^9}}],

Cell[CellGroupData[{

Cell["Problem definition", "Subsection",
 CellChangeTimes->{{3.634917061738584*^9, 3.6349170661689916`*^9}, {
  3.6361191018063736`*^9, 3.6361191182176027`*^9}, {3.6378637699032097`*^9, 
  3.6378637747236185`*^9}}],

Cell["\<\
Let\[CloseCurlyQuote]s define the following problem: we have available set of \
actively traded and liquid CDS rates ( 5 years of daily rates) that we would \
like to use for prediction of lesser liquid CDS. These types of problem \
frequently occur in the credit or equity markets where liquidity factor \
drives certain instruments into specific categories.\
\>", "Text",
 CellChangeTimes->{{3.634917084155823*^9, 3.6349171129222736`*^9}, {
  3.636119149854458*^9, 3.63611921359617*^9}, {3.6378638973554335`*^9, 
  3.637864103556596*^9}, {3.638124222429023*^9, 3.63812423784185*^9}, {
  3.638126346545354*^9, 3.638126347481355*^9}, {3.638129633153741*^9, 
  3.638129634042942*^9}, {3.6381302544358416`*^9, 3.638130271939072*^9}, {
  3.6381305679791927`*^9, 3.6381305698823957`*^9}}],

Cell[CellGroupData[{

Cell["3 CDS will serve as features\t\t", "Item",
 CellChangeTimes->{{3.6361192190873795`*^9, 3.6361193180539536`*^9}, {
   3.636119505653883*^9, 3.6361195114258933`*^9}, 3.636200724797398*^9, {
   3.6378641266758366`*^9, 3.637864158203492*^9}, {3.638122156358783*^9, 
   3.638122157918786*^9}}],

Cell["\<\
We split the data into three sets: (i) training, (ii) testing and (iii) \
validation\
\>", "Item",
 CellChangeTimes->{{3.6361192190873795`*^9, 3.63611935003401*^9}, {
  3.6361194467169795`*^9, 3.6361194467169795`*^9}, {3.63786418542554*^9, 
  3.637864230166418*^9}}],

Cell["\<\
We apply several predictive routines to obtain the future value in the \
out-of-sample domain\
\>", "Item",
 CellChangeTimes->{{3.6361192190873795`*^9, 3.63611935003401*^9}, {
   3.6361194467169795`*^9, 3.6361194625354075`*^9}, {3.637864245126845*^9, 
   3.6378643051089497`*^9}, 3.6381302812366886`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data generation", "Subsection",
 CellChangeTimes->{{3.637864325404586*^9, 3.637864341878215*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vols", "=", 
   RowBox[{"{", 
    RowBox[{"0.01", ",", "0.008", ",", "0.011", ",", "0.008"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"crl", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "0.35", "0.45", "0.36"},
      {"0.35", "1", "0.43", "0.32"},
      {"0.45", "0.43", "1", "0.46"},
      {"0.36", "0.32", "0.46", "1"}
     }], "\[NoBreak]", ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"cm", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"vols", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "*", 
     RowBox[{"vols", "[", 
      RowBox[{"[", "j", "]"}], "]"}], "*", 
     RowBox[{"crl", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "vols", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", 
      RowBox[{"Length", "[", "vols", "]"}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.636813417739087*^9, 3.6368136319430637`*^9}, {
   3.6368315067897587`*^9, 3.636831527225795*^9}, {3.6368315830738926`*^9, 
   3.636831585398297*^9}, {3.6380809447635994`*^9, 3.6380809575088215`*^9}, {
   3.6380815144142*^9, 3.6380815212158117`*^9}, {3.6381278591488247`*^9, 
   3.638127869772444*^9}, {3.638128411826596*^9, 3.6381284201258106`*^9}, 
   3.6381284852559247`*^9, {3.638128918047485*^9, 3.63812892093349*^9}, {
   3.6381291680067244`*^9, 3.6381291780531416`*^9}, {3.638130663856961*^9, 
   3.6381306692389703`*^9}, {3.6381308372668657`*^9, 3.638130855768498*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.0001`", ",", "0.000028`", ",", "0.0000495`", ",", 
     "0.000028800000000000002`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.000028`", ",", "0.000064`", ",", "0.00003784`", ",", "0.00002048`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0000495`", ",", "0.00003784`", ",", "0.00012099999999999999`", ",", 
     "0.00004048`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.000028800000000000002`", ",", "0.00002048`", ",", "0.00004048`", ",", 
     "0.000064`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6378644166179457`*^9, {3.6379554168834333`*^9, 3.637955444667082*^9}, 
   3.6380361232658396`*^9, 3.6380381508346663`*^9, 3.6380808230209856`*^9, {
   3.6380809239219627`*^9, 3.6380809623448305`*^9}, {3.6380815097185917`*^9, 
   3.6380815238990164`*^9}, 3.6381278719408474`*^9, 3.6381284230898156`*^9, 
   3.6381284899515333`*^9, 3.6381289245214963`*^9, 3.638129179862745*^9, 
   3.6381306722809753`*^9, 3.6381308584517026`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{"{", 
    RowBox[{"0.55", ",", "0.72", ",", "1.25", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mn", "=", 
   RowBox[{"MultinormalDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", "cm"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Accumulate", "[", 
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{"RandomVariate", "[", 
       RowBox[{"mn", ",", "1500"}], "]"}], ",", "init"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "data", "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<cds 1\>\"", ",", "\"\<cds 2\>\"", ",", "\"\<cds 3\>\"", ",", " ", 
      "\"\<cds 4\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<CDS of observed series\>\"", ",", "15"}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6368119940483866`*^9, 3.636812056089696*^9}, {
   3.6368120960881653`*^9, 3.6368121187082057`*^9}, {3.636812191404333*^9, 
   3.636812245474028*^9}, {3.636812296064917*^9, 3.6368123623494334`*^9}, 
   3.6368124096175165`*^9, {3.6368125525293674`*^9, 3.636812553527769*^9}, {
   3.636812715846054*^9, 3.6368127233028674`*^9}, {3.636812760150132*^9, 
   3.636812849460289*^9}, {3.6368130751468854`*^9, 3.6368131041005363`*^9}, {
   3.636813680209548*^9, 3.6368137715009084`*^9}, {3.636822740988816*^9, 
   3.6368227419248176`*^9}, 3.6368314855269213`*^9, {3.6368316519324136`*^9, 
   3.636831658219225*^9}, {3.6368317229125385`*^9, 3.6368317677314167`*^9}, {
   3.6378644749620485`*^9, 3.6378645775790286`*^9}, {3.6379555063027906`*^9, 
   3.637955507862793*^9}, {3.6380815290002255`*^9, 3.638081541729848*^9}, {
   3.6381243149527855`*^9, 3.638124330287612*^9}, {3.6381244499866223`*^9, 
   3.638124453964629*^9}, {3.638124543789587*^9, 3.638124549436797*^9}, {
   3.638124628996937*^9, 3.6381246378577523`*^9}, {3.638124709040677*^9, 
   3.638124723595503*^9}, {3.6381248157448645`*^9, 3.638124816306466*^9}, {
   3.638124896740207*^9, 3.6381249161466413`*^9}, {3.638125003366394*^9, 
   3.638125014957215*^9}, {3.63812510337817*^9, 3.6381251515666547`*^9}, {
   3.638125269799262*^9, 3.638125439964361*^9}, {3.6381254953444586`*^9, 
   3.638125506436078*^9}, {3.638125604747451*^9, 3.6381256354483047`*^9}, {
   3.638125716989648*^9, 3.6381257397032876`*^9}, {3.6381258137410173`*^9, 
   3.6381258569218936`*^9}, {3.6381259121781907`*^9, 
   3.6381259291978207`*^9}, {3.6381259970735397`*^9, 3.638126026463991*^9}, {
   3.6381260959309134`*^9, 3.6381261115777407`*^9}, {3.638126244801975*^9, 
   3.6381262608544035`*^9}, {3.6381263619737806`*^9, 
   3.6381263890522428`*^9}, {3.6381264691271834`*^9, 3.638126469860385*^9}, {
   3.638126548796523*^9, 3.638126579918578*^9}, {3.6381266476070967`*^9, 
   3.638126651148303*^9}, {3.638126718712022*^9, 3.6381267287584395`*^9}, {
   3.63812678044133*^9, 3.638126811500985*^9}, {3.6381269975313115`*^9, 
   3.6381270316329713`*^9}, {3.6381272320153236`*^9, 
   3.6381272958038354`*^9}, {3.638127368016362*^9, 3.638127436328882*^9}, {
   3.6381274995213933`*^9, 3.6381275188186274`*^9}, {3.6381307791879635`*^9, 
   3.638130801418002*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
5f8knH/iFhRB+4dWyfO/hw+woPtQbUkYOepk+BLKr51JqFZf92rzc3Y/qCcJ
vxK6RkwYRfV/MpZ/uRI+5X/1fzJmd8+vqJhA9X8yVtocHdM2hvyfjNDsSgMu
3Q9TT0b1hk/ft9D9O+1kOA/edzOU7h/pJqP58f1fmlcp/ydjSVJB3otplP+T
sa7yYE8b3XczTsb29T/WLie5aTLON6Kjdjbl/2QUuS03+0r3tWyT8T5y9NAm
c8YuyTg29GHhrGTGXsnIX1hhtoru1wUl43TYj97WI3R/Khl+CYeiJu9gnJgM
Ycrbzd10v4ubjCnOc4wb9jLOSoaVz8zx7+n53GRsKJdeeJD+fiY/Gctyks6H
BTIuTMbfVVvWHFjDuCQZq6wVG8sS6X5wMu7kqj03OMC4Khlfdh02n0N/P1WX
DPM4b43jdB+8KRmqe5uL+tP979Zk7Lg6wyl/POO2ZBgo+GgNmsa4MxmyGVU1
gS/ZfeWeZCgdVQ7XK6T73ylwG9Vsm3+dsayEpR/udaT70kopsPVfMSi5j7Fq
Cl7xF6mkzqb7aim4nC/4tZ7+HkY7BcHF+0vfqzPWTYHNbDOZjGmMDVIwMH2F
78a/dL88BRkJ5zyqFJjcOAW8fltzBBMZm6Yg/XK27x36eybLFOy5O/vqH7of
bZuCFYHWCs/esve5pMA7p/CXF/09mVcKHhRL7+9nSf5PQavMsp+adB+bk4Lu
RdUzjOoZJ6ZAtaY6wGMLY24KfijalumRP7NS8POX49Jcut+em4KeOVfNuk+Q
/yX25Qp+tv1h41mYgkbhubv9LzIuSYH03/rh/n/pfnoK/GV2t5pPJ/+nYFnY
uOqDtUxel4IBe8daS9P996YURJY/qC2yIP+noGRSeqAe3V9vS0Hg7fdTRuex
9p0pmKp0MsnEgfwveb+F1+/B88n/qYjULw2fMYr8nyqpb/KtvIYyVkrFgUfp
7RFFrcz/qfAQbD1k68VYPRWrtDb8jh7CWDsVbrplsy8rtzD/p2LEH1GswmjG
Bqko/LehLyDhBfN/KgLPBtnxU5jcOBU9i0vdE24yNk3FkHi/QRvk2PstUxHW
aDV+22zGtqmYls7Z+DmCPe+SCtm8t4dGKTD2SsXHxm9+zhymLygVoa/C1/bZ
MzknFeNaV7zLWsw4MRXLVb5b51Uz5qZisPknyze3GGelQq7A65JpOOPcVLTm
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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw9XHlczc/3TrayhiiEJISkiELlQVIUKUsSWpRou+173fbtVncvhBCiEKLs
oZIshZC17CGJUCH97vf1m/Pxj9fT3JnzPnPmrLOMd/axcZWXk5N70VtO7n//
//+/1gX9Hh/gGPf7sID9AT92KR6+0YewAnTcbiUn9SashEMFBm2vdr5nWBkq
6R822gyjdlUM/VlRGcohrIbJMetb3JcSVseESz8t+aMIa+Chd9aUS100nibG
L4tIKbhMeBKUeziNDJxFv9eC/XJTZ/kIap8K73CbS5s/vWNYGzNvNR//20JY
B1euRC7/3YN+r4u48Mp+fScR1sP84JxrOoMJz0TXkceje88nPAsbBA/bH3bQ
ePrY/m55e4/nhGdj8+U3/2r4hOfA+N+G/JEFhA2gcf6dyeQ6wob4HPRyXB8D
Gn8uPk7Rd7z1g9rnYbfN6Bavb4Tno6eIP+PSNcJG+Hfwb/IjBepvDIXj8no9
i6jdBGtW/D08sYzwAtgn9upl6UMYaOJ0WblsYZgL2M4OCD/z+i1rXwiv9dO1
bm2g9oUY7P/BdtZE6r8IgYFzz2XnU/siiNfG1bX8pvbFSNv00yP0CLUvhoUB
h7cvltpN8WPhBGErzQ/XFA97Pum37By1L8H32UEHjy5i/HGXINK8J6fahvg1
w563hWM/b6d2MzhX/F0+K4ralyKxJsl0UTy1L4VdWYen53/ryRxfF4ubg5TZ
euKaQ2n1vtXBvWh9WSDBPCDrOa1PrgVyTDacDOxP7csQH1/l/O8Tjb8M8zfo
LP79lsZfjnlduy6PGE39l8Mz8bDKeKInZ4nuslWWTyZRuyXkXab9zr5E/a2g
dUHEa6mn8a1Q3/7m9Xb6vdwK6E9918+E9IW7ArPH7Zm/rI76r8SvQY0bV0dT
+0pU9GnJFM+kdmvsXcy9ckiNYVjDN9/+m2sxycMaRxoe/plkyHCZNSwTOSWv
TpF8VsGlPMBKbRr1X4VHk0f1nW5K9Fah1wb5l81eDJetwt/rV8tc7Im+Dcwe
zb67qoz622BCk6fk32Hqb4MbvGUb5c9Rfxt4W3s+sTWn/rZ4orB609Ni6m+L
vc4ak7teU39beGXNaFu0nc1XmS1cr82Z6uVI87caw0z+6a+MZhir0dK7zxu/
eJLHalx7om1cMYf6r8aMAEVHpxHUfw3sRT/mzVpI/ddA9Y6jPO8H0V8DkYf5
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
kSf9j8DUMIOqJy+J/whcP3Vy6eVTxH8EJj6599enk/iPwPmaVHMVJ9a/NQJr
0zeZVu0i/Y9Ec7WtzbOzpP+ReDKxR89D/9UjIxHl0CgwI3ukG4ldX36aCDNo
/UfiouqBHSVjaf1HwsueY8D9TfxHYkvi6AXPppL+R+Kcg9Nc9cfEv4y+nu/N
OfnEfyQSZswfU9bF1l9uJPpK59ZzdzBcFIlFghjNSZ4Ml0WiadiFBTlnGK6N
xJV+X7dbmNP6j4ST2vVbeX60/iMx8+fJXrNFtP6j8OWVQV4Bh9Z/FL49/uGb
J6b1H4W1/OemyusZ1o1Cnz2jjQKpP6Lg1ffWRqUTDFtH4W/j6BTpHoYdo2Cc
NGvo6VSGOVG4ntYxtTqBYW4UrlZALYDPMD8KswpOVTueJf6jUPop0mVAEPEf
BcVc6e8edsR/FCTcd6NW5hH/UYi7NvTsCTfiPwpzumfnjeh+zfiPgm3+Ou8F
vxmWi8YIs8rpphOI/2h8bpu3ItmI+I/GmV+D6jo1if9o1GNW5Hgl4j8a/oJ7
QdU72HjW0fDSbmjpcmTYMRp7V6w3KQ5kmBONpw0dwz6NYZgbjagv2TNHd71i
/Efj+3DXwHdrWXtuNNLP+04pnMFwUTTEEr1XU3oyXBYNG7NHzcafWP/aaCz7
sfXp+5MMN0ajdET9SPc6hluj8fKO94lvNxmW48Ky2Ghg5UGGFbhosRrV0Ebj
KXGx7dU8YeRZhlW5aHgmeZF9h2F1LvroX28vbGdYiwu5GYFpa4ey79PlouLX
92+mFgwbctF1t+ZVNPELLmImyBf172bYnIugP7otmstoPrl4tnjD29w1DNtx
sSLyl9d4Hs0vF55Rd+sej2PY/X+/d5LKXWHjcbj4prC3N59wCBcR7vzzn4lf
LhcfHJwnl3gznMyFhyPfTj2I5CH7nlfr+l7JZjibC+dGxakdrxjO5SLjiV3Q
zRsM53PRqzQis9GW4SIu9L3sjky4xXApF9PCbK/NJn7LuBCOiz0ZMIB9fxUX
x7NWCo1HM1zLhU5DqHpvA4bruZhTrfhBP5HhRi766pzXWXuC4SYuqvfzfyxX
IX3nwuluw3oerfcOLq4MKF8XOZj0PwYzlvy2XjeXYYUY9A14bqV0iP1eKQa9
b8+as6KQYdUY3L7peWxWPsPqMfh8evMZJ1XWXysGUwc9+fl5G+lLDIKmlDuX
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
woBrZ/Y0n+p9iQjg6f7NpPMUHYko1pQ+XmBO+79J2BN/8vv4VQwrJGGOSa5t
z2NUD09Cv5Jcp+IPDKsmIbU90bDTm/aHk7CsQG1n2RSGtZIw7V/3oqABtF+Q
hKDEtVN20fcYJuHq7DuX31N9HknQbjKpPZNI8k9CzYcmveSJJP8kKNb83TOQ
6u12SdgVsxuWdL7CMQm9/qholQ9n9Nxl/PydJwocQ/sNSXC9qfw6I5DhkCRc
2rbrSi9n2n9IwvaY8lvOxgwnJ2FoR/CZhV60H52EwwdNbf/NYDg7CQbK4a7G
f0j+SXgTNW/mQZJ3fhK+Rtb49OWR/JNwf5q8QJ/quaVJMHZt6L/gDul/Eoyi
OK0FZL+qkmCo37Zfx5L0Pwm/2reEp1E9uz4Jl63dN0ZT/bwxCaIz9t5HKkj/
kzDT4qf/QqqXtyYhvuPZfqsI0v8k7K5/ezz9Mel/MnSGH87hNZD+J6Nxqe6W
E79I/5NxMbNhzPJu0v9krBA/7Tan823qyVjmcWB8n4Gk/8n4NNJ/whVfqpcl
47DJWp9z/mT/kzFnmPyBX3SeGLL+/1pHmdF5P/NkNL2q6HOT9NU6GYlevk66
9D12yTix333UGjpv6ZiMV3fOHfmVRvY/GcNEJ91byT9zkuF3pDPThuiFJEPj
+K+T96eQ/iej692RGK1+ZP+TkaIhP+0K+TN+Mma/TlVX+s/+J6OnJLFhzD2y
/8n4M0d96QSqr+Yn4/6ops8iih+KZO2K/XpWUX20VIa7PUfrk38tS4byrLcz
DWm8qmTc6mzT1D5N9cxkrArtOOpE/ro+GZ4LN83w3E31zWSYfX7t5ahH/j8Z
pj/Gf9M0pfgvGdwGnYkraLyOZDwy0upQp3hKLgUX1Gt/HG2k+C8Fhcftijvp
fKdSCoxPqPsMovOyqilQv1v49hTV39VT8Kvwhtldd/L/KXj88c864Rby/yl4
6fx7zHlVhg1ToKIx/55pG8V/KUgwvb+p/inl/yk4dt2yxmI1xf8pWO8wCiEu
DNul4OrgG3IVVK90TMGUN5mKv05R/J+Cz/urOzoofuakYMYp/11pfxgOScH+
xO5r9w5T/TEFHcmq9gcXUvyXgq2PtxTM30nyT8FIm39nnPYznJ2Cy3EnemdH
kvxTIPy953cL1ePzZfPjv7h66H/1+hRcTDhyLc2A5J+CD++1/DcHkfxTsC7+
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
b70bNL8BWei8vqL9s+6HBf8HvllR+g==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
pJWMVTmbAlczXqyTjOvr+67sz/irXjJMjN9l536i/5eM3Z33ttlNe9gwGT0j
Ss9U/qL/l4zs87diDj2k/5eMlWs6xboxHmqRjNHbJvbvxXiXdTKmtNUat1+H
/Cdj+cdW7q0Z33NOxoajbXfMozzPZMQNW/dBg/63bzIcp35NPaNO/pMxJFg1
6Srj2aJkmGaaPdNmvFScjCXnHc4sWkz7X6mfvp3Rwg60/5Oh2DkoyIjx19xk
9O3ZbdcOxvsKkmH3wejB4yX0/5PR7sTXTv+YP34sGVZJptN8FtH/T4Zq+wPJ
P6Po/yn1vdRyqn4P+v/JuPHnXodB2vT/k6EReWnHaND/T0b//GNpp5nfW5uM
kvZvA+vq6f8lQ8V1rVXxJ/p/ydjh5nrwYQX9vxR8/BN4QpX5yWop+Joan7iC
+cFaKbgeMKvqDN9XJwUHBqhuyN5J/lMQ36/sxTQF+Vf+fk6lvQbjnYYpGJrU
vrA8jPynQMXweaXEnPynYH6/icVDmb9skYL0fB/Xlcwvtk7Bc5c7u+NGMP6T
AisN24DhRuQ/BW1O3pu4k+PhmYL+c+ZkL3Em/ylYXBWSYEn/LTQFcYGnnf9z
I/8p0H1/b7KxiPyn4PK/3ndVQsl/CnqKrL8ELyP/KXhYXqmTxHz93BT47FrU
bTj1K0jBcMdlFm6M7xalwDdodJyUzz+WgglaLjeH83mlKfD/ezl0Kv3VshRc
rQ55ZdKJ/KegQLcuvy3z16tSMObimrN/bMl/CrK1A5IvUt/aFITqTzx7nvGT
uhQsW+TWu2MT/yk42VX3xeKm/O9UTHZ5tWTuffr/qTDsUWrrf4P8pyI7WCdx
0iX6/6lYdWfwbelh+v+pQN/DaYl36f+nYuvenP77Gb8wTIWP3pS1H1fQ/0/F
irXFt9OX0v9PxcJZKwfOZrtFKv5sUG/n6UH/PxUPy4o2wpH+fyqaaaycuoC/
d07FXw1N1WnB9P9ToWkTXpPSFP9JhcWZ5w0ncxn/ScWBeQvamlUy/pMK/4+a
vUxrGP9Rvm+dg0NHrndJKhI395w2pyf5T8Xq1732XvrN+E8qpJIZM/JUyH8q
RFXfzg7keBcp3zf4ypt1Gxj/SUX/jkuuW3P8SpXP/x7SU+emgMtSoaK3Ze9x
V8Z/UtHq0lzbXuxflYpJCW2s1Bj/qEmFR6fEU5OeM/6TirHbPNJasn6gTsln
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
YX7Y9ix0e1i8NZz5YAVZeGgzbdtVkYALlePXZ3TJMEvmV2XB5d2Z7zf5fc1D
Wbg0t9e4ln2Zb5WFCMt9uzdT3sksJE5wH7ib3/cszULV3Jp551rw/Fe+n2/y
nwLWg5ZlwetzpVEiv8dZngWd7trdWzO+XJGF64fXWR/i9z7uZiElNOvt9qZ6
nSxs7SAd3pvfe6nOwkKJ2ZlHEQKuUfK9beSgNvx+ycssRLlaDT/J/Kla5fzQ
nlPSguP3PgvGR6dZvma+al0Wvv/36OxM1js1ZOHfTsen5sx3alTO78NTPsyj
ffQ7C7+fpdh9bcr/VmBxTmPoYH6ftoUCiNqxtorjoaaAx8Fu1pWs326rQIn7
qmfG5EdLgY0FE+T65F9bAdUPR7Qus55IR4Gh+aOMHLbQ/lcgo7aveXfWc+kp
+89796gZ53M/BX6dbrS7wO+ZGCjwMGvfDBn3t6EK7JQcbmfP9W6owNz0N53H
cjyNFfB6HjH0EuvRTRTwvjf1gcturn8Fxqu/+psi5/pXoMjIss8sfp9nugLp
DQPWmzCfzUKBkW9/N7Oh/2ClQOrvP1Yr+H0WawUqqr/2nM/1bKPAsjZ5g12J
7ZXv9/zC2gf8vZMCBaXnFr1tzvWvwDrLz5eb8f7BTYG6Ns36fWS+pacCdqef
fZzM+jBvBeY4ta4omcH1r8BnwxOT1bh/BCrfN/mSlmgt8x0V6LjGpXE75Uco
YDP25NnEJcx/VCBqxY/KfH6/NE4BteS7kmX8vohYAafoMYt3cb9NVWDRnNdz
6yVc/wrcvTbx5BzOX7kCcaKrV6bmc/0rULZfy7yez9uowL5L5gWF5CNXgS2v
vj2cyu8FbFegQ861tMk7uf4VkPX5MCjkENe/AodvpU4ayu8PFCkwU8dtxvFx
PP8VcO2cvXCnHc9/BT4mlgT2MeX5r8Cd0wZTTvB7BqUKDB54sMyV9vIFBT7c
3vFhhA3PfwX8omslh/g9hHIFAp4lx2oW8fxXIERftvwm7am7CpyseNi5RyLP
fwUqbUeO0KW9Ua3ABitx8xk3eP4rcLz/uKSZ/F7DSwV0i+5q7vKj/a9As4H5
Vabvaf8rYDhl08vmXQR7pE6B8vsTp9b8oP2vHO/TlgqtzkJ7owKtC0oXLnlK
+1+Bhm9v3u6gvamSDfHPSUmSPbT/s6Gx6eONctqDatnQnPer/H0+7X8lnm3V
0I72r1Y2jqqgzfZs2v/ZWHw40OHIKdr/2Up+pUs/VND+z0a/mSoVfai/XjYK
/u1/HX6L9n82phyqNE6hPWiQjUbLJ93+0v4dmo3uR8YvCqW9b5iNg78DDO4v
of2fjQfDPh/c5Ez7PxseIYeXdSeemA2TYaP0/xEjGwu/3A6czu/JTM9Gs7mX
ivd0ov2fDfP0rRcOM9/YKhu5gw5vqb/P9Z+NwSHyh8b8/rFNNob2Hxp1md9P
ts9GesauFs3fcP1nw6r7Jedz7Wj/Z6N2Y0Qr0QDa/0p9/+YN3d2f9n82/jsR
dukZ57d3Nr4l7LZpT/vbVznegTWSTNq7gdk4M6F+zdvgb1P+D5XKZoc=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
NoL8PxOcUSPvjbpB+mfi6AtVq7xHpH8mLD/qiBb2kf6ZeJB3YVh6F+mfCdvT
fhu06D6VQSZYb+avl6P7McjEnWM5/mcOkP6ZmPUwaPL9FtI/E6lqF+PS6Pl2
mVBTU5Rqo/shDpm4ZD3mkdID0j8T0248PXegmfTPROfVu0UfaH4Jy4R629i0
OppfWJnYUmxf1BbD4JRMzFFXuD+O9OJk4m0i8vhFDM7NhM99C/uzhPMzcXvB
e74ktb9Y3F/D9D+e2kP6Z0Jzbtx0fgHpn4mFMu7TwnJI/0wE7bVKd6P7XXWZ
+HJd7W6EiPTPRP/Mh35H+aR/JhKKy/7Mpva2ivvLpmpYOd1P68iEwdBpvn8P
M7grE0vfj7NfQvfDejNhM7x192L6vUQW+q5ZBeTTfSPZLAgcWjZ8oPtnClmo
1w4XfaX7YEpZSA+oL26g+0tqWTBwutAzcTPpnwW9mc51l7aQ/lkYWpYt/Xwm
6Z+F/O57Wo9Gkv5ZuHhi20mFTaR/FsY5bNQbvJz0z8IyybOfPtJ9VrssbPff
VG/mSPpnYdX8utmXnEn/LIw/c/TYN7r/5peFWSvdlRSsSP8seBtHeEnQ81lZ
0DKVwCpD0j8LSSou3kVLSP8suNV6b+6dTvpnoSKx9Mw1el5+FmqNwtxYdN+w
OAs+yv3lHLr/VpaFU4uPq46g+2OVWXDetSTxpxHpnwX+5KBlt1aQ/lnQ+WI3
csNE0l/cH+m1xocmkf5Z2Kyz7bDzLNI/Cwt6HzepmZD+WbC07HY21if9s/DJ
WsrPl/q/Nwtn1Yrv8RaT/tkIDrI6WWVJ+mejcuSnZXk6pH82uoNjVt2dT/pn
49443YLFdF9PLRsT194ZUriQ9M/GlXm5bsZ0X1k3G7U393g9+4/0z8ZQj0cC
+xK6b5eNsbUXvj+j++Wm2dit17jhOY0Py2wUJ2y/vZXuL9tlI1XJ2/ZIE/N7
h2zcOnZ2ZMprBrtnI+mE1BHvoaS/+PlLjm3rpvuiYdmISijtfkH9wcqG9IXH
AQtWk/7ZSAyX6L1E+nCysW/opsGRY0j/bGydZj/Hh+7X5mfDLMRz+2y6r1uc
jT/WZ1vWUvvLsnHn8OLySDXSPxsWJzbverqI9Bfza69cWfedaX9dNgZ/Ptkp
Tc9rzMbsCbfOlxD/5mwsVYtTf53D/L41G2kpn159us7gjmy4ftP5nE6/78rG
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
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0., 1501.}, {0, 1.4428748064273798`}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> FormBox[
       StyleBox["\"CDS of observed series\"", 15, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {{0., 1501.}, {0, 1.4428748064273798`}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"cds 1\"", "\"cds 2\"", "\"cds 3\"", "\"cds 4\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.637864543617769*^9, 3.637864583507039*^9}, 
   3.6378648043566265`*^9, {3.6379554246678467`*^9, 3.6379554358218665`*^9}, 
   3.6379555145708046`*^9, 3.6380361307109537`*^9, 3.6380381539078712`*^9, 
   3.638080829494997*^9, 3.6380809279467697`*^9, {3.6380809662292376`*^9, 
   3.638080974232051*^9}, 3.638081329288675*^9, {3.6380814400956697`*^9, 
   3.638081460438105*^9}, {3.6380815328222322`*^9, 3.638081547377058*^9}, 
   3.6380816684488707`*^9, 3.6380866449418344`*^9, 3.638124332456016*^9, 
   3.638124457396635*^9, 3.6381245518860016`*^9, {3.638124632101342*^9, 
   3.6381246412585583`*^9}, {3.6381247122074833`*^9, 3.638124725826307*^9}, 
   3.6381248188492703`*^9, {3.6381249044154205`*^9, 3.638124919032646*^9}, {
   3.6381250086548033`*^9, 3.638125017468819*^9}, {3.6381251173245945`*^9, 
   3.6381251544526596`*^9}, {3.638125275290472*^9, 3.6381254431311665`*^9}, {
   3.638125501241269*^9, 3.6381255101332846`*^9}, {3.6381256079610567`*^9, 
   3.6381256380223093`*^9}, {3.638125720140853*^9, 3.638125742854493*^9}, {
   3.6381258193726273`*^9, 3.6381258592774973`*^9}, {3.6381259172325993`*^9, 
   3.638125931865425*^9}, {3.6381260142803698`*^9, 3.638126029022396*^9}, {
   3.6381261004393215`*^9, 3.6381261136525445`*^9}, {3.6381262498875837`*^9, 
   3.6381262633036075`*^9}, {3.638126365748987*^9, 3.63812639312385*^9}, 
   3.63812647282439*^9, {3.6381265526965303`*^9, 3.638126582476982*^9}, 
   3.6381266535975075`*^9, {3.6381267228616295`*^9, 3.6381267307864428`*^9}, 
   3.6381268148705907`*^9, {3.6381270014781184`*^9, 3.638127034565777*^9}, {
   3.638127234667328*^9, 3.638127298019039*^9}, {3.638127371900769*^9, 
   3.638127438590886*^9}, {3.638127512485016*^9, 3.6381275292706456`*^9}, 
   3.638127618799203*^9, {3.638127685052519*^9, 3.638127705862956*^9}, {
   3.638127839726791*^9, 3.6381278911132812`*^9}, 3.6381279631386075`*^9, {
   3.6381281247080917`*^9, 3.6381281270324955`*^9}, {3.6381282083710384`*^9, 
   3.6381282128638463`*^9}, {3.6381283388496675`*^9, 
   3.6381283478664837`*^9}, {3.6381284261318207`*^9, 
   3.6381284287058253`*^9}, {3.6381284927595377`*^9, 
   3.6381285060195613`*^9}, {3.638128579979291*^9, 3.6381285867653027`*^9}, {
   3.6381286539702215`*^9, 3.638128674437457*^9}, {3.638128927017501*^9, 
   3.638128951665544*^9}, 3.638129005454438*^9, {3.6381291826239495`*^9, 
   3.6381291883647594`*^9}, 3.638129712745081*^9, 3.638129825611279*^9, 
   3.638130678224586*^9, {3.6381308077828135`*^9, 3.6381308283592496`*^9}, {
   3.6381308617745085`*^9, 3.638130863911712*^9}, {3.638131521868466*^9, 
   3.6381315386540956`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"traindata", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{";;", "600"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"validata", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"601", ";;", "900"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testdata", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"901", ";;"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6378648976447906`*^9, 3.6378650197774053`*^9}, {
   3.637865185340496*^9, 3.6378651870408993`*^9}, {3.638081304812232*^9, 
   3.638081322518263*^9}, {3.6380815555358725`*^9, 3.6380815871727276`*^9}, {
   3.638125170442688*^9, 3.6381251980391364`*^9}, {3.6381261908570805`*^9, 
   3.638126214912322*^9}, {3.6381268252290087`*^9, 3.6381268440894423`*^9}, {
   3.6381269137591643`*^9, 3.6381269342732005`*^9}, {3.6381271299287443`*^9, 
   3.638127166417208*^9}, {3.6381275360722575`*^9, 3.638127561968303*^9}, {
   3.638128046395954*^9, 3.638128053337966*^9}, {3.6381281080940623`*^9, 
   3.6381281310573025`*^9}, {3.6381282657947392`*^9, 3.638128280817566*^9}, {
   3.638128726557149*^9, 3.638128737243167*^9}, {3.6381287863208537`*^9, 
   3.6381288068192897`*^9}, {3.638129088711785*^9, 3.638129104358612*^9}, {
   3.638129247005263*^9, 3.638129280295721*^9}, {3.638129347375839*^9, 
   3.6381293639274683`*^9}, {3.638129419182765*^9, 3.638129435640794*^9}, 
   3.6381296547285786`*^9, {3.6381298366560984`*^9, 3.638129851647725*^9}, {
   3.638130881274543*^9, 3.6381308966249695`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainset", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Drop", "[", 
        RowBox[{"traindata", ",", "None", ",", 
         RowBox[{"-", "1"}]}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Take", "[", 
         RowBox[{"traindata", ",", "All", ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "traindata", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testset", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Drop", "[", 
        RowBox[{"testdata", ",", "None", ",", 
         RowBox[{"-", "1"}]}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Take", "[", 
         RowBox[{"testdata", ",", "All", ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "testdata", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"validset", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Drop", "[", 
        RowBox[{"validata", ",", "None", ",", 
         RowBox[{"-", "1"}]}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Take", "[", 
         RowBox[{"validata", ",", "All", ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "validata", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.63786521624415*^9, 3.637865366285214*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "traindata", "]"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<cds 1\>\"", ",", "\"\<cds 2\>\"", ",", "\"\<cds 3\>\"", ",", " ", 
        "\"\<cds 4\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Training data\>\"", ",", "15"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "testdata", "]"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<cds 1\>\"", ",", "\"\<cds 2\>\"", ",", "\"\<cds 3\>\"", ",", " ", 
        "\"\<cds 4\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Testing data\>\"", ",", "15"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "validata", "]"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<cds 1\>\"", ",", "\"\<cds 2\>\"", ",", "\"\<cds 3\>\"", ",", " ", 
        "\"\<cds 4\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Validation data\>\"", ",", "15"}], "]"}]}]}], "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.6378654667337904`*^9, 3.6378655579159503`*^9}, 
   3.6378655957616167`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
uuE5+Z+IR5sFDxK/k/+J8H81dH/dRfI/EevrN441MiL9iRjbOvv5oq2kPxHD
zc0MroeQ/4noftHs6RtaX0WJuMurSl26hvQnYsp2/V67aHzViYjbOOKT+Wc6
/xJxZVzSe4PfdP4lou6WxeNv40i/GP0iwi9o36fzT4yaIz5GfWPp/BNjn7vq
+8g0Ov/ESPD+k7aslM4/MeJ//dEef4r6vxgzqjKEqnR/4Iqxs9y5QdBI558Y
mVmxEy0L6fwTI0Tbr/TZXTr/xJhrAPGeqaRfDKe0jf+03Sb9YhyNe/TzSgLp
F2Pqp1OyI3WkX4xprvfbSh+T/2J43913Zh+P1r8YV3YfONSL9jsnCWOCHO0L
+LT+k1CYK+Jdt6T1nwTNHedsb26l9Z8E7cNBTeuW0/pPgpP5ujG3RtL6T8I3
Y6NlIbtp/Sfh09vG/DF/yf8kxJi0ca3Tyf8kaFT171GbSv0vCcU2+5/cqqL1
n4RDwteVEwc3Mf1J0P2g+eD2FMblSXAJOe3iqWRcnQT1WM+k9geM65NgrGFu
HmXzlulPQskLw7zBExlzklEaNm9VRz/GesnI+ff0gKNSxqbJcNtSX+Yeztgq
GdZlOeH2XMZIhuKB0QZuImO3ZGQowm81WzPmJqM58dXdu1/ZePjJ2BZY2bTT
h7E8GVGjHjofaWWclYy0untnKixZfl4yBl5Y0c9Im3FRMlpTmj5+rCP9yfiu
4jBjym7Sn4xh6gtNuriQ/mTMmlu0If8K+Z+MjWlXC5dosThHAt5sTmf7Jv8l
WLxVe3H4B/JfAu3wsxnRL8l/CR7d+DChTI3lQ4KTEyr7/FlJ/kvgOFaL8+43
+S/Bnvey2vSRpF+CDpexOiq9Sb8Eqkcd8rsZk34JekwMKgydwDhPgp3exv9W
iMl/CTJP1z0130D6JQioP2+8Qkr6JfAz9aoZFUT6JdB5vSNQNofxJwneN+Yn
uZiQ/hTE3D977N0z0p8CVd3o14V9WNw0BZdzIvte3cvYKgX/DNy+d1cz6U/B
BeuLxjdPM3ZLQeP+FXo68Yy5KTj5IufwAAXp76zXa+mRD2rMT3kKro/XNb8y
kHFWCqxVeqlVxpL/KVhesiJ1oyv5n4LUAarreSsYl6dAY2/62wvBjKtTEJ2+
Iy+hgXF9Cqpb+tgIa2n9/2+8Rvs2t9D6T8WYVbN5redp/afC/bv/Pw63aP2n
YuankuCBPZqZ/lTU2i16eHoiY6Qic5H+kHV/af2nYoq7oMDkDa3/VKx/M8X0
/FnG/FRIHsw/frmC9KfiRsEVkwt80p+KYeVDs1dOJf2p+PMwJadwKOlPhfLo
ssfhW0h/Kmx7hBs8Wkb6U3H0TknmpovkfypGTU2Xb79D/qci99gfg7Y35L8U
Fxf0Wri3irGeFE65du48X9IvhWn/X5NPptL+lyLxWvdePa7T/pdid3wKJ1DK
5sNNitN3eG/tHBhzpWgbfqG3bQ3pl0I7KsC7djCLy6Vwmbt7oNk50i+F6ER4
2K2vpF8KscecMNXl7PkiKXQFJx5+aGFcLoWzX43tpRnvmH4pbCc+fuZXzuL1
Ugzy968WdmPxT1KkVEfda+rJmCPDy+htKR30fj0Z1HJb5X6jGJvKELpm5ta3
f0i/DNfP3B6Yn0/6ZdjsdarxLM2nmwyvSjymjdIl/2XgnH/pZ9+L9MvwpijQ
Kx3kvwwG8UNrXLbQ/pchMb+92Jr6W54MRoXzB11Npv0vwzJLzfVTzWj/yzCl
vZ/39Ce0/2VwN/3aobCg9S/Dg7GVZtpXyH8ZdP+eH3CPzgeOHOEjz2b+Smes
IQf/8JGLJcG0HuSwyncKtqV+1kcO1Qzd2Y4DqT/IcU8q0skyYDxMDguu/iS/
duqXctg/Hv5jyH7GdnJIR4XrTFhH56ccaecydly7znimHE0L3pmqT6L5lCNw
dNHKOhXGXnLMK/M4cbaG+qscBZYaF1otWDxMjnPDcjVLVKnfyKEivn3Tjs4b
sRy17tNK71H/lsvRUDF9ZdAq9r6VneP9uXPbDDqfs+TYdK3vPxnLGG+V49/R
kwvazel8lsNbMFKSQd8TB+Q44cD17ZZP3ytyTD9+KLvFnsVPy5E457BLuZDu
L3JUfzuc3Ebvvy7Het0/OjY3GVfLMXZqcs4B6s+P5NhvMNR+8HDa353j3cqT
1tUwbpKjxnC07nDqx5/kyHsSaz9uEVsPP+ToqlJ1Qiud+p8CNZIdhkYvGWso
EK3/ZNS3A9QPFbhyyfr5+1GM+yjw13/JpBuDqT8osGTslCE/dzAepsCZwW6Z
i6jfWSkQW+NrIKJ6dgqszepfc4X6CzrfF8R5PjiU8UwFtPRtTXVnUD9VIGjp
pvjwGMZeCuwOOGV0IYn2V+d4wwJ3G4xgHKaAJL2obCLp5SvwS/HD5pcKY7EC
ofrl+vZvyX8F5M8XLN6pw+IrFVDoe7utfEb7UYGXTXe7n4livFWBklEzUifT
estT4NhwZ9eDe8n/Tr2Bv0zepNF9VYGxizjc98SnFUiftFfrPD1frkD1ot3r
lvZg77uuwNPQXeKvK8h/BWy6PB4UPJP8V8Cwz9/5RS50v1NAxa2tWVjAuKkz
/rpmU9cg+t5RwHO5d2CkK+MfCuwsMHu+ge7PHCXm5jQPmmbHWEOJy+/HGSst
6HtAibYH5e9P/WTruY8SEx5qFn7YQN9HSiy1k80Z3YvxMCUsP6vEbDCm/a/E
vcgd0u2+tP8737fBoKvlQ7o/KeEcv97f7j7jmUrY68TcyKH7opsS61t6LDtI
3/9eSswJqeJv/u9+qUSR788pR88wDlNCPPi4oo5+v8BXYpuvT5eAF4zFSlR6
rFtmTt9/ciU0gh+Nd6Xvs5VKCBJG7jnoSv4rITP1H+o0k/xXoj2uscZvF+1/
JZqSpGNippD/Ssi3ruvXsYn2vxJlQU5e1+j//08rMfLW5NdRb+j+okTi9eZt
A5++dvo/iBMd/A==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
a5UOvb+kqNV521mq9Mri/wASMkBc
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw9Wnlcjdv3Lq4oN4WU6epIkjlDpAxPVBpIoXmeNNdpHk+dc8xD5BouUkqG
TBWRTFcyhVKZZ5kzF7mGlF+/z/d99Efn83zWWe+zn7X2Xnvv9Z6BvpFzAzoo
KCg4t//7/8///TVO+99ns/CpAIfoZ5df3v4s4C44+ZfnwIQLxOrYVGFchyJi
DdyxuqFXfpC4N6LTFzlfaiPujxEzjYMdOvP5Igw6ekrX9yHtOtjUb2LdkNPE
uii73FLutJtYDwHTjGfX/iDWx8kv1W8mHicehrLZVfG2d4lH4NH4orYdv4hH
wdA66+ARc/IbQNdRvHp6GvEYKJeOM38aSzwWLcsPe16NIR6HQHe1h8ElxOPR
kPk6r+ggsSFsz+q+67OHeAKK+6s46d0nnoi8DbLRXu+IjeBUUzDqWewXAU+C
g1Z24TRdYmM8992nM3QSsQnQYmn+xJB4MnT95FN1PIinQGNQH9Xp84mn4tcA
+aW6YOJpOH4/c5mrPTFQ3U1zSYGbgKXAvJfDtgydQrspVDNu5+utpN0UDZWj
2h5soX06pjzU/6lYSPt0KF5J83u7nfYZaJpXYd0pmvYZGLfmUr7tGNrNMDzv
n+GffgnxkJqhn4bqjuvKtJvj1Xa3nXoNtJtDXS3Y3esn42eB9z6xO3r/oN0C
QdZfuulfo30m5Nfa1Duco30mKjyKmm9vpN0SGgMyTq46S7sl/n6QUvLPK9qt
0GF7S6UMHL8VbPXXVQ0P5PisUf2yW7+H02i3xkGLirQWLdpt4HsqtfsXR9pt
MEVjk3KFM+2zMD4x4LslnyedBes0o8w7Q2mfjUXTR3+ZGEb7bJSZJKo4h9Ju
i6zZwwfmeNNui2U9bAvCx9M+B6v0La7lm9I+BxFOe0ckvaU+O2w4GpWWbSnY
YYeTlfuU38bz+3b4uXn7pqN6Ai63Q8y6NJ3v7ny+PXzX18/LKKO/PXrfc458
/C/97fE1afplt/30t0d2ye6VOhvpPxdbV3eunfmU/nPR59Xmc12v0X8uNMds
+aR8jv5zsfxQU0sRn6cwD5I74rIH5MM8rFJ5PLVkKf3b8d5Tsa0H6d/+fW3l
Q5EH6D8fPmF75u46Q//58DaI/9DU+T/Bvx3Hh/ssvkr/+VCNidFNX01/B+hn
1/Q6sI3+DuiT2bTjdg35HVCZqdMm20R/B5xYmj/kegn9HRER1FV78ln6O2J9
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

           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxVmHdYjm/Yx0saSOJnZDZUslLIpq8SlRBRUfG0h+ZTPT3t+3mykr13SZKR
sjfZ2RH9EpFRdoP8ZL/e472/juP1h47vcd7n/b0+13le532VoU/ENP9mKioq
7n/++9+f//ev3vr//1TBtEXncvvV1olaC+c3v8vNb8e4LvofVb+X9Ve3x7Gh
wWnbv/J5Pexdad+rVUfGuyExY9GpM02MG0Cv01qzxUeojXB18yBdyXxqY9hP
f9Jv8xpqU5S7adZ/PkFthhbC4ux/NlP3wcDMb9eECOp+kAdMPKCeRG2O+JuL
35tPpbZAaorJ98VB1JawNPK37iSlHojJLU0ezVpHPQgJm0P7ZwZSD0an0o+W
w49RW6G7xtIp7peph6BZ5aBY4Q31UERfttHUqqIehpae7baZd+b+DEdHhU2a
RmvqERi0qajcRI96JPZa1t67ako9ChcmmpfbT6EejbwTrSb3HEo9BsYbm1VM
U6e2hs6+hrsXbtIfqLkQPX/zAVELwGVZvlXEHMbHomRwrw2n0xkfi6ezstPt
ohi3gXZA1XSDTMZt8KOqfVBFNOO26Fb95s0EBeO26D55nl11R8bHIaXrtep9
T2rF+DioKaVn51sxboeC17LLBY2M22F7YaPyQRjj4/H5dubkTuwXYTz0rrXv
nLCH8Qk4d9v57IpcxicgbYXm0SVcj4o9mj+vKW6uJu6PYI+C8l/a/1Uy7oBd
qTbqu0wYd4D+g2spFf9wPx3RoXPLAddYL8ERpVPWP/nyNz4RDn21BlcOYnwi
nn8cqqNvzLgTPqmY6Zn1YtwJL5u2HQzWZ3wSrJceT79jxPgk7H7XVTfblvHJ
2NSz6tgjC8YnY7B7ZOjvboxPQVpdyPknjeSfgpY3fF5cuk4+Z3g6/r6gdkbU
cMZOo4ww83t83hnLjNUVw3aIusgZeufnmuVlM38qzo9QxjuWMn8qnDRW9Vr4
ivlTYfA9q087zpOiqXh8e2i7ZgXMn4Z0vdCF7QzFOKahtLg6dt0L5k9DRP8D
mU+0mD8NMjXrlof+nhcX9Il99qKNFfNdkHSw5vQPasEF+pqpO1vYM98F74b9
OtB3AvOnw8E1vMuhycyfjhFvT2pPWMr86VhZt7hp+ALmT8dC22u9X2cwfwZU
+46e2LSf+TOwdeyDJt8C5s8ATK8+Vy5m/gwc7jqvS79C5rtCPti+/eQdzHdF
++3zl0rSmO+KIVq1ByYqmO+KnKk+A7I2MN8NATtjEzbNY74bcnaemRQSy3w3
FLssz+m/nPluCFS7YTY5jPnueFzqZW+oZL47LuR02D84mfnuuL+797QLt5jv
ji99rYY8O8T8mVg759398e7Mn4nydflxltxfYSZsO9/W+TCN+TMxo1W6Xc0Y
5s/Cw75pckU/5s+C9XXnSM8K1n8WBo1Sc3UrZ//NQhcbS2n4R/aPB7KKQyq/
NbD/PPDl2HmZ5kvme2Bv3cNaM/ZTkQcsPpya9OMt8z2R8eB2+5As5nvC3k7S
qXIg1++JuiVu0hRw/Z64MnXrmQX+XL8XtCdXPDUN5Pq9oHbx5iXLBOZ7ITa/
x4Weocz3wq7xOX6e8cyfjXCZYavp7CfMxprSrqGqfF6YjdmlprVrUpk/G5XJ
14d/Ocn8Obj63KlxCOuBOVAZ9cN22SPmz8Gzjt/9pjcyfw50xt0oWVnNfAku
vb9+OeGJqA0kyNG823zhTb5PgkzjrS/+LRO1RIKU7Fba20/z/RI4nzS/tlm3
4f90lgSdXmT4j9QSdZEEjhqDVhrribpKAtNlQ48aG4laxRtlZWamts1EbeCN
wa5aVQeb6O+NhoMjt67rKcYl3jjkLzc7pC5qwRuNsjtO2r/F57O8MbWyWcvM
1vT3RoVsyYAh3ejvjdiPOXafJPT3gfzz22R1H/r7oFrTtVx/hKjhA+WXIbdN
u9DfB/lPZ40rDqa/D3Z06PnvlUjy++Cye/z27uPp74PaV92OBCTT3wdmDWEh
11fT3xc6nSblGy+mvy/O5+60bp5Pf1/cXr7I6uQd+vsiWk1fZ00l/X1xq/pw
Xp/D9PfFuUariG1L6e+LFW5Np82z6O+Lj4OfaQ45Sn8/fHJoymwzj/5+uKK8
/6/vfvr7wWuh/f7y0/T3Q0dvy3Dbq/T3w1f/U/ctS+jvh/ozJla4TH8/jAlZ
qZpRRH8/vM9TjP51jv7+kNVVPLj+hv7+cCqM2yBvpL8/vmjMiXrW5aPo74/6
V+2jR/cSteCP9lF1bvd+0t8fOqcNe/dVEeNF/hiSO9fS6x79/ZF6xu2gdgH9
AzBupvEF80P0D8Dun0a6ZdfpH4D4uKagXb/IHwA9S+1PD2vJH4BX3/+VCr/p
H4CeyWErC7n+ogD0vWheNLme/gEY9Szy+IXn9A/EkeUd07V30j8QOh1+Bfcu
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
9f8Ay9JMUw==
           "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0., 600.}, {0, 1.437321564806343}}, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> FormBox[
         StyleBox["\"Training data\"", 15, StripOnInput -> False], 
         TraditionalForm], PlotRange -> {{0., 600.}, {0, 1.437321564806343}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"cds 1\"", "\"cds 2\"", "\"cds 3\"", "\"cds 4\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
q3r/0W9b8j83dzka
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
h4f123uT+JmM5vBwadn88ZxRjBbyMGGTjrBlIaNzedj3of9nRzCjC3gY+Dl5
9lVXRpfzYNUrsupyY3QND/JGnnO+7GR0Iw8ZczNfDv7D6DYetn2WlZA7zehu
Horentu6eR2jWXws//PucpkNo+X4mLM86IxMBqPZfMw8dM+0hfrT5EPxmo7f
407i5+NcxcC6ghri58M+aMDo4UPi50Pr9Mf5zgHEz0dmzmKZSZ7Ez0cc19HS
n/hy+XgQcNuFtZL4+dhtVvafAfGW8xH9ss9I4xLx83F6SUNU6jXi52NecYbj
hjri50O/TPgjlsbXzYdA4sWx66RZiSha6qjx7z7iT0SLoffgiRTiT4SmUr/S
sW3EnwjVa5Wl2aXEn4jBgAKronPEn4if/etbFfOJPxFfeeL2N4XEnwi1g3bV
97OJPxGurVY6cbnEn4hHeeZWtyuJPxHm4qmH/Yi3fGi8nA9VDYeIPxGdcom3
L+0h/kQ0VTnvSjEn/kTse5sS+NKS+BMhGNl1CbbELxjawfr3jHnEL0B8ts2T
wBXEL8Dp6D8GpUuIX4CjZ76LBrcSvwCeNskxqaeIX4BdSn1TTWi+fAT4xA4+
LgwlfgH2Necopm8hfgEWeYZ+/JxI/ALMev5q/zX6vkCAsfIqharkVy7Alcd7
d24+S/wCxKbUHQ6n9d0oAF/qvWJYLfELUKwj8q6V/8bwCyDk2pqF0HpmJeFu
fb6XCuVTLgkdA46nFlkRfxJysp2+q9F+10zCXLkzTSFKxJ+E+tMJUmbXmfPC
NgmereIZKkfp51VJWM+efbfiDKM5SUhsvOGZeYHuvyR8lHzQsiuK7r8k+EpX
addr0/2XhOwcD+mYiXT/JcH9fphMWw+df0koSSzVjRCj8y8JxtU8c2O679qG
+vNM3KelTudfEi7XB3eNukvnXzKWSpvI+L+i8y8ZebqXzv/aQedfMqSlv05t
T2S0ZjJera4UttP5iWT02b3eJWVH/MlovN7trriG+JPRbRVQss2f+JPxtHq3
qKmA+JMxoLTSbVoS8SfjucYkvl0+8SejouXAmmcniD8ZPyTWxNdX0/2fjOwV
j5tmNxJ/MnK/jRuQ3kD8yVAd3XfLluqD7mSMv+y08+Vu4k/B5Oxqy6V7iT8F
1QEHw6JExJ+C4gH5TNdw4k+B4DYvQDuU+FNg9MtilzvlyzYFgdfMs6M76P5L
wdXvUh8UpxJ/CtRrZMyXSxL/kH/QyPqxvXT/peD4qPevDt6j+y8FE6ZINY68
SfdfCmw3jX06s4/yn4LXFwxO54wl/hQ8Crac/GoZ8afgd/wuE236+Wn3EJ+m
yz0h3ZesVHRZLpldpEL8qZh/7mt8kxLxp+Jh06SBFbTeNFOx+EeXe4sy8aci
7VVc6Gw14k/F1JaKwwJzyn8qWhxWHrkjJP5UCGYvrtSwIv5U+H2o/nbfifKf
ilqbGfqj5lD+U5FsVVZykPzKU5G1LFCl5D3xp6LZps3u+kjiHxofZ9PvYh3i
T0VYb5NO1nziT4WCoryiBP18mZWGhvN7bM9pEH8acvg7O4+OIf40HB6/feFM
C8p/GpxzzaqfJRN/GgKPaM0fk0n8aUj1t15YZUn8aTCSX1s5kuaPkwbdiyut
3nVR/ZOGb/89u2b5hvKfhsHj7i/N/6b8pyH7vHGXHdVH5Wn49SrH6etJ4k+D
Z/4AX+0Z1X9pQOqxtGaaj7Y0BJ+dattkS/xpqAyMfKVL+WEJsb94WZ4S5V9S
iBFdF+RuPaB6UAj1Im0d10OMVhBiW8ccc8VOqg+H4u0+PBOj9awqxM+rA043
s2i+hGjZWWa6g843PSGO556XdaH9DiFstr6ftJTm00KIsNfJ6rVVNJ9CRDxe
8dSvhNEuQhhIvf2Tk0fzK0S5jtXs1SaMDhFia9+8vXoytN6E0Or8JeZA7we+
EJt//bYO9aH1J0Rj69fp62g/ZwvhO6ZQzZ907tD4Xt9Me0rf5wtRXHPdrVOc
1qcQe6x6b4nR7x+KhegeIzb303fKlxBOV199MlrCfH9JiLUeEo2VpnR+CdGr
+beRJJ0fdUPj3VQrJ0yj9SzEhCS/gaPk3yyEw9Kqa1lelF8hUkO/NxUdYnSH
EJKbHuX6HqB8C+EhWuJ5gs7bASHc1r6z6cml/Ivw6O7yqrW0fiVFyBDeub2i
iPaDCHWn5cx7qD8FEcpqzYtLKR9sEQ697W9ZUUj5F2F8/t0tRscp/yLsmN01
n3eO8i/C+QebDdVH0P0pgqVCgOllfUZbiOA/abfzcSeqJ0T4lFUZN9uE0S4i
/HtV1fhvPaovRFBTOVvnT/VyiAhdD491LXKgekOEGFFH7rkkRvNF4L7atF6m
nOoPEXhKO4LuUz2VLUJVY8ukaVlUj4jQ5Ki1aBbVG/ki7LPOFje9R/WJCJeV
9Tda3mZ0sQizyh/JnIihekUEMZWiZpOPjL4kgqbxgXbxyUw9UiNC/ZPlK9q+
M+11Q/N91WqX3CSmvVEEieIaZ6+XTHuzCH397zuPUb3ZJkL2D8ONuScZ3SGC
9IFP9+qpHuwWQcbuZ/3HIkYPDOk11n2yw/VvOi6yMObobkZLpsPzfJzrhStU
D6UP5Xe7d1cjoxXSMdeS1Tib+NnpKB48/U7wgNGq6TA+16SbQ/WgZjoGrF5M
/UP1r146FC8YuPGp3kc6zv7iqj7xovyn46lG79kDPpT/dATzzvsqknZJh56G
ttIgaZ90OH95GLdKg/KfDjGb2oqTEyn/6TDfevjm+Xra/+komH/+UM8T2v/p
UOPlteheov2fDnVl9dRbCbT/07F124mR4u9p/6fDWrHW57os5T8dHfuTRwvn
Uf6HeP8UqpcoU/7T8d/fibWvaH1fSkd/ZonDOKq/a4bmO64t9y+qd+vSUb2s
J6kzod/4f7GCP/c=
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/goM1shc5NUc//8BypFCOg==
           "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0., 601.}, {0, 1.4428748064273798`}}, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> FormBox[
         StyleBox["\"Testing data\"", 15, StripOnInput -> False], 
         TraditionalForm], 
       PlotRange -> {{0., 601.}, {0, 1.4428748064273798`}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"cds 1\"", "\"cds 2\"", "\"cds 3\"", "\"cds 4\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
V/3P+ywCFs93sbVp/+dGYOTB5ObpjfR+iMDgEraT8UmG8yLQpNfRmUnnh5qv
usbYkb++Z1j1lYejpy2m9ytLCJ1FbQut6HpsIX7r75lpWk75QnjG9Z3i0fua
K0S0XfCC6COUL4Rj53Mx15zyhXD4MOOvmQ6UL4Sy2WzWarqeSogHy0362HSe
YkXiMvvOh1Mqyo/E6bP+Ff2llB8J6xK2VOtXyo8E+/fTbefyKD8SvadvOf4u
pPxIPHw16LdfQPmReMYfmH5Jl/IjMcVoWaNDD53/orDDoSn4j8cMs6Nw5oZb
wyofhhGFgPV6iA1lmBuF6+NvsW7K6DwZhTmtGRq95xjOi0JnQV1fH52fa6Kw
4FxMdtogw6ooFCQP/9x4kvJF6EvRDTxuR/1FiHgoKF6WRf1FmOr1pZJXQP1F
uLa9RP3wVuovwv6B3IF3TtRfBHaMfd1ER+ovwpUdRT+nWVJ/EV62m8SEbKT7
Hw2/pFMcUTHlR8OnntPQP52e/2ikhw69PXmP8qMRItSZX6ig/K96/biLVTsp
Pxr27dGyO7cpPxoHj3cscKuj/GhsN47kT6XzIEuMKZFIcfCi518MU+uCP0WF
1F8MLdWh6ns5lC+GwnV0RQqtD6UYjcuPjd85l9afGNtneWZaJtH6E2N8ZLzR
m05af2Ik6534vu8grT8JvNVEVZttKV+CloSj9tNCqb8EtdAuby6n9SeBzTL3
B2t+pPUvwVBZqYbsCOVLoGtYtDBeQvkSsNrStB77UL4Ei5WTT1+l8zhLCsPs
/36YZkr5Ung/DW5r/uc8KIVYrS4tX0j5UlhuWadvmkD5UkxZdsyvVkz5UvDW
d/tnhVO+FMvCjb8bO4bypRA56Xrv0aJ8GbJk96pMNzKsLQNr1OlSrd00jwzP
bbaXpBFzZNhfNz/SrILmk6H08uUN17cx7CFDgllUTdw7+rxkMCnIM3Ch86lM
Bs2EqNxaA5pfhh0WjWNzqf9eGbrrz4+a+JqeJxkOhCj/fYvOf6UyFLobCR0p
r+br9eay27fYMHxHhsCsLvZIX+r7lVMSQ/fT/tYtw7MVbR8NHtDzJ0d6aUCx
cBH1l6PArr9/A70v2HI83amykNH5liNHf8bd8ZPo+wTk2Mku3S+j++khx2lD
V5fbp6i/HI/fqzom0P2XyVEbYf7pX/98P5EjylRmbXOQ4b1yWFpz9j2Mo/5f
rxf9TUj9AYZL5TC//mTT7Ke0vuTYY3PpxAQ96i9HAPeF5vz7tN7ksClieS2l
75/dclQN98T10/7NUqDH735oI+0H2goYhBvmv02g/UCBmK32T3sbGOYosCnw
4O5zT2h9KsBhjQo2JN1Dgexd7uIr+6i/AvHlx941edHnr8Chkcnj1ETUXwG2
PD50Cpv6K3BswOPw0nHUX4HlD38+ktXF7JelCnSZvFlm0037qwL9tarX5dpt
tv8D0IMCmQ==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
nSOFqupuR226H4qlUEtteahT0G7xX62nMbc=
           "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0., 300.}, {0, 1.362308710681645}}, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> FormBox[
         StyleBox["\"Validation data\"", 15, StripOnInput -> False], 
         TraditionalForm], PlotRange -> {{0., 300.}, {0, 1.362308710681645}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"cds 1\"", "\"cds 2\"", "\"cds 3\"", "\"cds 4\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.637865564951563*^9, 3.637865599146823*^9, 3.63795554045125*^9, 
   3.638036146868702*^9, 3.6380381678542957`*^9, 3.6380808554846425`*^9, 
   3.638080989691678*^9, 3.638081341706297*^9, {3.6380814492840853`*^9, 
   3.6380814675049176`*^9}, 3.638081598186347*^9, 3.638086654567052*^9, 
   3.6381243457004395`*^9, 3.6381244665070515`*^9, 3.638124562977621*^9, 
   3.6381246534889803`*^9, 3.6381247401315317`*^9, 3.6381248289112883`*^9, 
   3.6381249320898695`*^9, 3.6381250289504395`*^9, 3.6381252068843517`*^9, 
   3.6381254554239883`*^9, 3.6381255255617113`*^9, 3.638125653747137*^9, 
   3.6381257540085125`*^9, 3.6381258722411203`*^9, 3.638125943487446*^9, 
   3.6381260416272182`*^9, 3.6381261256333656`*^9, 3.6381262237887383`*^9, 
   3.6381262771876316`*^9, 3.6381264040750694`*^9, 3.638126490795622*^9, 
   3.638126597390609*^9, 3.6381266654535284`*^9, 3.638126740832861*^9, 
   3.638126851967456*^9, 3.6381269429624157`*^9, 3.638127174778823*^9, 
   3.6381273130418653`*^9, 3.638127573137923*^9, 3.6381276300468225`*^9, 
   3.638127902220501*^9, 3.638127974277027*^9, 3.638128064554386*^9, 
   3.638128142944524*^9, 3.638128290567583*^9, 3.6381290162964573`*^9, 
   3.6381291131414275`*^9, 3.638129198286377*^9, {3.638129272979308*^9, 
   3.638129288813336*^9}, 3.6381293720706825`*^9, 3.6381294460772123`*^9, 
   3.6381297219958973`*^9, 3.638129860929741*^9, 3.638130689690606*^9, 
   3.6381309051737843`*^9, 3.638131548856513*^9}]
}, Open  ]],

Cell["\<\
We can investigate the predictors separately by looking at histogram of the \
training data:\
\>", "Text",
 CellChangeTimes->{{3.637865730124653*^9, 3.6378657892331567`*^9}, {
  3.6381302845126944`*^9, 3.638130289317503*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"edata", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Drop", "[", 
     RowBox[{"traindata", ",", "None", ",", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6368226291366196`*^9, 3.636822688853524*^9}, {
  3.637865827281624*^9, 3.637865829824428*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{"edata", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "20", ",", 
     RowBox[{"ChartStyle", "\[Rule]", "\"\<Pastel\>\""}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Feature 1\>\""}]}], "]"}], ",", 
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{"edata", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", "20", ",", 
     RowBox[{"ChartStyle", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Feature 2\>\""}]}], "]"}], ",", 
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{"edata", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", "20", ",", 
     RowBox[{"ChartStyle", "\[Rule]", "\"\<NeonColors\>\""}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Feature 3\>\""}]}], "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.636737253557757*^9, 3.636737415650028*^9}, {
  3.636822703033949*^9, 3.636822722845984*^9}, {3.6380371028554707`*^9, 
  3.6380371589219694`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.588], Thickness[Small]}], {}, 
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.588], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.761959, 0.470832, 0.940597], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.54, 0}, {0.56, 12}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{21.356589759797657`, 34.22874525916558}, {
             34.610822133184506`, 56.56708661387096}}]},
          StatusArea[#, 12]& ,
          TagBoxNote->"12"],
         StyleBox["12", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[12, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.7969654, 0.5550084, 0.9498898], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.56, 0}, {0.58, 32}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{33.60374525916558, 
             46.475900758533385`}, {-0.941285334626258, 56.56708661387096}}]},
          StatusArea[#, 32]& ,
          TagBoxNote->"32"],
         StyleBox["32", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[32, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[
           0.8362105333333334, 0.6145704666666666, 0.8685811333333333], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.58, 0}, {0.6, 44}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{45.850900758533385`, 
             58.723056257901305`}, {-22.272549815312722`, 
             56.56708661387096}}]},
          StatusArea[#, 44]& ,
          TagBoxNote->"44"],
         StyleBox["44", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[44, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.8750956, 0.6580038, 0.746929], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.6, 0}, {0.62, 45}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{58.098056257901305`, 
             70.97021175726923}, {-24.05015518870325, 56.56708661387096}}]},
          StatusArea[#, 45]& ,
          TagBoxNote->"45"],
         StyleBox["45", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[45, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[
           0.9065614666666666, 0.6959347333333333, 0.6557536666666666], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.62, 0}, {0.64, 61}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{70.34521175726923, 
             83.21736725663709}, {-52.491841162951864`, 56.56708661387096}}]},
          StatusArea[#, 61]& ,
          TagBoxNote->"61"],
         StyleBox["61", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[61, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.927848, 0.742785, 0.6151383333333333], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.64, 0}, {0.66, 57}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{82.59236725663709, 
             95.46452275600501}, {-45.38141966938971, 56.56708661387096}}]},
          StatusArea[#, 57]& ,
          TagBoxNote->"57"],
         StyleBox["57", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[57, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.9440982, 0.7955892, 0.5942686], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.66, 0}, {0.68, 33}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{94.83952275600501, 
             107.71167825537287`}, {-2.7188907080167937`, 
             56.56708661387096}}]},
          StatusArea[#, 33]& ,
          TagBoxNote->"33"],
         StyleBox["33", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[33, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.9556597333333333, 0.851748, 0.5881300666666667], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.68, 0}, {0.7, 31}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{107.08667825537287`, 119.95883375474074`}, {
             0.8363200387642777, 56.56708661387096}}]},
          StatusArea[#, 31]& ,
          TagBoxNote->"31"],
         StyleBox["31", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[31, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.9611912666666667, 0.90402, 0.5931959333333333], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.7, 0}, {0.72, 66}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{119.33383375474074`, 
             132.20598925410866`}, {-61.37986802990455, 56.56708661387096}}]},
          StatusArea[#, 66]& ,
          TagBoxNote->"66"],
         StyleBox["66", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[66, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.9537862, 0.937389, 0.6180996], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.72, 0}, {0.74, 60}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{131.58098925410866`, 
             144.45314475347652`}, {-50.71423578956132, 56.56708661387096}}]},
          StatusArea[#, 60]& ,
          TagBoxNote->"60"],
         StyleBox["60", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[60, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.929162, 0.95034, 0.6648153333333333], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.74, 0}, {0.76, 51}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{143.82814475347652`, 
             156.70030025284444`}, {-34.71578742904648, 56.56708661387096}}]},
          StatusArea[#, 51]& ,
          TagBoxNote->"51"],
         StyleBox["51", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[51, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[
           0.8831367333333333, 0.9406246666666667, 0.7349350666666666], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.76, 0}, {0.78, 34}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{156.07530025284444`, 
             168.9474557522123}, {-4.4964960814073365`, 56.56708661387096}}]},
          StatusArea[#, 34]& ,
          TagBoxNote->"34"],
         StyleBox["34", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[34, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.7952328000000001, 0.8988539999999999, 0.8302508], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.78, 0}, {0.8, 42}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{168.3224557522123, 
             181.19461125158023`}, {-18.717339068531636`, 
             56.56708661387096}}]},
          StatusArea[#, 42]& ,
          TagBoxNote->"42"],
         StyleBox["42", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[42, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.6769960666666667, 0.8415468, 0.9091809333333333], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.8, 0}, {0.82, 24}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{180.56961125158023`, 193.4417667509481}, {
             13.279557652498049`, 56.56708661387096}}]},
          StatusArea[#, 24]& ,
          TagBoxNote->"24"],
         StyleBox["24", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[24, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.5509906666666667, 0.7769448666666667, 0.9479198], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.82, 0}, {0.84, 4}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{192.8167667509481, 205.68892225031595`}, {
             48.83166512030881, 56.56708661387096}}]},
          StatusArea[#, 4]& ,
          TagBoxNote->"4"],
         StyleBox["4", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[4, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.431296, 0.709773, 0.927077], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.84, 0}, {0.86, 4}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{205.06392225031595`, 217.93607774968382`}, {
             48.83166512030881, 56.56708661387096}}]},
          StatusArea[#, 4]& ,
          TagBoxNote->"4"],
         StyleBox["4", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[4, {}], 
         "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0.5336000000000001, 0},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox["\"Feature 1\"", TraditionalForm],
    PlotRange->{{0.54, 0.86}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.588], Thickness[Small]}], {}, 
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.588], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.471412, 0.108766, 0.527016], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.54, 0}, {0.56, 25}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{28.2149968394437, 40.64467446270538}, {
             25.758992340098345`, 54.10046929104721}}]},
          StatusArea[#, 25]& ,
          TagBoxNote->"25"],
         StyleBox["25", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[25, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[
           0.30703786666666666`, 0.12476706666666668`, 0.6714478666666667], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.56, 0}, {0.58, 39}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{40.01967446270538, 52.449352085967064`}, {
             10.237765247566983`, 54.10046929104721}}]},
          StatusArea[#, 39]& ,
          TagBoxNote->"39"],
         StyleBox["39", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[39, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.2498416, 0.24350013333333334`, 0.7754095999999999], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.58, 0}, {0.6, 34}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{51.824352085967064`, 64.25402970922875}, {
             15.781060637756752`, 54.10046929104721}}]},
          StatusArea[#, 34]& ,
          TagBoxNote->"34"],
         StyleBox["34", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[34, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.2484884, 0.3863264, 0.813373], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.6, 0}, {0.62, 32}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{63.629029709228746`, 76.05870733249043}, {
             17.998378793832664`, 54.10046929104721}}]},
          StatusArea[#, 32]& ,
          TagBoxNote->"32"],
         StyleBox["32", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[32, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[
           0.27673453333333337`, 0.5130402666666667, 0.7857655333333334], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.62, 0}, {0.64, 15}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{75.43370733249043, 87.86338495575217}, {
             36.8455831204779, 54.10046929104721}}]},
          StatusArea[#, 15]& ,
          TagBoxNote->"15"],
         StyleBox["15", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[15, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.324106, 0.6089696666666666, 0.7083413333333334], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.64, 0}, {0.66, 43}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{87.23838495575217, 99.66806257901385}, {
             5.803128935415167, 54.10046929104721}}]},
          StatusArea[#, 43]& ,
          TagBoxNote->"43"],
         StyleBox["43", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[43, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.38822480000000004`, 0.674195, 0.6035436000000001], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.66, 0}, {0.68, 58}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{99.04306257901385, 
             111.47274020227559`}, {-10.826757235154155`, 
             54.10046929104721}}]},
          StatusArea[#, 58]& ,
          TagBoxNote->"58"],
         StyleBox["58", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[58, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.46884366666666666`, 0.7149487999999999, 0.4938228], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.68, 0}, {0.7, 89}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{110.84774020227559`, 
             123.27741782553721`}, {-45.19518865433074, 54.10046929104721}}]},
          StatusArea[#, 89]& ,
          TagBoxNote->"89"],
         StyleBox["89", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[89, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[
           0.5636751333333334, 0.7372789333333334, 0.39689853333333336`], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.7, 0}, {0.72, 102}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{122.65241782553721`, 
             135.0820954487989}, {-59.60775666882416, 54.10046929104721}}]},
          StatusArea[#, 102]& ,
          TagBoxNote->"102"],
         StyleBox["102", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[102, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.6660832000000001, 0.7430418, 0.32293540000000004`], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.72, 0}, {0.74, 62}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{134.4570954487989, 
             146.88677307206063`}, {-15.261393547305978`, 
             54.10046929104721}}]},
          StatusArea[#, 62]& ,
          TagBoxNote->"62"],
         StyleBox["62", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[62, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.764712, 0.7283023333333333, 0.27360833333333334`], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.74, 0}, {0.76, 25}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{146.26177307206063`, 158.69145069532232`}, {
             25.758992340098345`, 54.10046929104721}}]},
          StatusArea[#, 25]& ,
          TagBoxNote->"25"],
         StyleBox["25", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[25, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[
           0.8451218666666667, 0.6842075333333333, 0.24303466666666665`], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.76, 0}, {0.78, 20}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{158.06645069532232`, 170.49612831858406`}, {
             31.30228773028812, 54.10046929104721}}]},
          StatusArea[#, 20]& ,
          TagBoxNote->"20"],
         StyleBox["20", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[20, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.78, 0}, {0.8, 13}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{169.87112831858406`, 182.30080594184574`}, {
             39.0629012765538, 54.10046929104721}}]},
          StatusArea[#, 13]& ,
          TagBoxNote->"13"],
         StyleBox["13", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[13, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.9026078, 0.47114559999999994`, 0.1952844], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.8, 0}, {0.82, 17}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{181.67580594184574`, 194.10548356510736`}, {
             34.62826496440198, 54.10046929104721}}]},
          StatusArea[#, 17]& ,
          TagBoxNote->"17"],
         StyleBox["17", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[17, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.8797567333333333, 0.3039250666666667, 0.1625832], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.82, 0}, {0.84, 13}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{193.48048356510736`, 205.9101611883691}, {
             39.0629012765538, 54.10046929104721}}]},
          StatusArea[#, 13]& ,
          TagBoxNote->"13"],
         StyleBox["13", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[13, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          {RGBColor[0.857359, 0.131106, 0.132128], 
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.84, 0}, {0.86, 13}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{205.2851611883691, 217.71483881163078`}, {
             39.0629012765538, 54.10046929104721}}]},
          StatusArea[#, 13]& ,
          TagBoxNote->"13"],
         StyleBox["13", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[13, {}], 
         "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0.5336000000000001, 0},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox["\"Feature 2\"", TraditionalForm],
    PlotRange->{{0.54, 0.86}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.511], Thickness[Small]}], {}, 
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.511], Thickness[Small]}], 
       {RGBColor[0.720287, 0.923781, 0.297597], RectangleBox[{1.17, 0}, {1.18, 4},
         RoundingRadius->0]}, 
       {RGBColor[0.7277445384615385, 0.8668051153846154, 0.2954865], 
        RectangleBox[{1.18, 0}, {1.19, 11},
         RoundingRadius->0]}, 
       {RGBColor[
        0.7352020769230769, 0.8098292307692307, 0.29337599999999997`], 
        RectangleBox[{1.19, 0}, {1.2, 11},
         RoundingRadius->0]}, 
       {RGBColor[
        0.7426596153846154, 0.7528533076923076, 0.29126549999999995`], 
        RectangleBox[{1.2, 0}, {1.21, 23},
         RoundingRadius->0]}, 
       {RGBColor[0.7501171538461539, 0.6958770769230769, 0.289155], 
        RectangleBox[{1.21, 0}, {1.22, 16},
         RoundingRadius->0]}, 
       {RGBColor[
        0.7575746923076924, 0.6389008461538461, 0.28704450000000004`], 
        RectangleBox[{1.22, 0}, {1.23, 21},
         RoundingRadius->0]}, 
       {RGBColor[0.7650322307692308, 0.5819246923076923, 0.284934], 
        RectangleBox[{1.23, 0}, {1.24, 36},
         RoundingRadius->0]}, 
       {RGBColor[0.7724897692307693, 0.5249488076923077, 0.2828235], 
        RectangleBox[{1.24, 0}, {1.25, 41},
         RoundingRadius->0]}, 
       {RGBColor[0.7799473076923077, 0.46797292307692306`, 0.280713], 
        RectangleBox[{1.25, 0}, {1.26, 37},
         RoundingRadius->0]}, 
       {RGBColor[0.789533, 0.4171466923076923, 0.2759256923076923], 
        RectangleBox[{1.26, 0}, {1.27, 42},
         RoundingRadius->0]}, 
       {RGBColor[0.803375, 0.37861976923076923`, 0.2657847692307692], 
        RectangleBox[{1.27, 0}, {1.28, 36},
         RoundingRadius->0]}, 
       {RGBColor[0.817217, 0.34009284615384616`, 0.25564384615384617`], 
        RectangleBox[{1.28, 0}, {1.29, 44},
         RoundingRadius->0]}, 
       {RGBColor[0.8300226923076922, 0.3180274615384615, 0.25385], 
        RectangleBox[{1.29, 0}, {1.3, 25},
         RoundingRadius->0]}, 
       {RGBColor[0.841533, 0.316539, 0.26249], RectangleBox[{1.3, 0}, {1.31, 27},
         RoundingRadius->0]}, 
       {RGBColor[0.8530433076923077, 0.31505053846153847`, 0.27113], 
        RectangleBox[{1.31, 0}, {1.32, 22},
         RoundingRadius->0]}, 
       {RGBColor[
        0.8580716923076923, 0.31772361538461535`, 0.2962098076923077], 
        RectangleBox[{1.32, 0}, {1.33, 31},
         RoundingRadius->0]}, 
       {RGBColor[
        0.8579145384615385, 0.32372592307692305`, 0.33444146153846155`], 
        RectangleBox[{1.33, 0}, {1.34, 22},
         RoundingRadius->0]}, 
       {RGBColor[
        0.8577573846153846, 0.32972823076923075`, 0.3726731153846154], 
        RectangleBox[{1.34, 0}, {1.35, 15},
         RoundingRadius->0]}, 
       {RGBColor[
        0.8537133846153847, 0.3222556923076923, 0.41498153846153846`], 
        RectangleBox[{1.35, 0}, {1.36, 27},
         RoundingRadius->0]}, 
       {RGBColor[
        0.8477259615384616, 0.30804573076923075`, 0.4593283461538462], 
        RectangleBox[{1.36, 0}, {1.37, 12},
         RoundingRadius->0]}, 
       {RGBColor[0.8417385384615385, 0.2938357692307692, 0.5036751538461539], 
        RectangleBox[{1.37, 0}, {1.38, 12},
         RoundingRadius->0]}, 
       {RGBColor[
        0.8357511153846154, 0.27962580769230766`, 0.5480219615384616], 
        RectangleBox[{1.38, 0}, {1.39, 18},
         RoundingRadius->0]}, 
       {RGBColor[
        0.8297636923076923, 0.26541584615384617`, 0.5923687692307692], 
        RectangleBox[{1.39, 0}, {1.4, 27},
         RoundingRadius->0]}, 
       {RGBColor[0.8237762692307693, 0.2512058846153846, 0.6367155769230769], 
        RectangleBox[{1.4, 0}, {1.41, 13},
         RoundingRadius->0]}, 
       {RGBColor[
        0.8177888461538462, 0.23699592307692308`, 0.6810626923076923], 
        RectangleBox[{1.41, 0}, {1.42, 10},
         RoundingRadius->0]}, 
       {RGBColor[
        0.8118014230769232, 0.22278596153846153`, 0.7254098461538462], 
        RectangleBox[{1.42, 0}, {1.43, 13},
         RoundingRadius->0]}, 
       {RGBColor[0.805814, 0.208576, 0.769757], RectangleBox[{1.43, 0}, {1.44, 4},
         RoundingRadius->
          0]}}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{1.1645999999999999`, 0},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox["\"Feature 3\"", TraditionalForm],
    PlotRange->{{1.17, 1.44}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.637865845159255*^9, 3.6379555660976954`*^9, 
  3.6380361880218344`*^9, 3.638037161761174*^9, 3.6380381750147085`*^9, 
  3.6380808639554577`*^9, 3.6380809960408897`*^9, 3.638081352033515*^9, 
  3.638081473432928*^9, 3.6380816147535763`*^9, 3.638086661758664*^9, 
  3.6381243530480523`*^9, 3.638124471951461*^9, 3.6381245696076326`*^9, 
  3.638124659713391*^9, 3.6381247463559427`*^9, 3.638124835104499*^9, 
  3.6381249377838793`*^9, 3.6381252138107643`*^9, 3.6381254656264067`*^9, 
  3.6381255311621213`*^9, 3.638125660033948*^9, 3.638125759187722*^9, 
  3.6381296796886225`*^9, 3.6381297296243105`*^9, 3.6381298675441527`*^9, 
  3.6381306973346195`*^9, 3.6381309107429943`*^9, 3.6381315544569235`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Setting the predictors", "Subsection",
 CellChangeTimes->{{3.6349179432493324`*^9, 3.63491794771094*^9}, {
   3.636121289680343*^9, 3.636121294875152*^9}, {3.638037707902287*^9, 
   3.6380377092438893`*^9}, 3.638130609381665*^9}],

Cell["\<\
Having defined the training, testing and validation sets, we can now set up \
the prediction model:\
\>", "Text",
 CellChangeTimes->{{3.6281939826524897`*^9, 3.628193997800116*^9}, 
   3.6281965608256264`*^9, {3.6348165154689474`*^9, 3.6348165173877506`*^9}, {
   3.63612129928996*^9, 3.636121377305697*^9}, 3.6361957172823305`*^9, 
   3.6362007401974196`*^9, {3.638037900469826*^9, 3.638037943323101*^9}, {
   3.638130710532243*^9, 3.6381307195958586`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{"trainset", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.6380384157699313`*^9, 3.6380384248959475`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.55`", ",", "0.72`", ",", "1.25`"}], "}"}], "\[Rule]", "1"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.5718760929108869`", ",", "0.7195776236011384`", ",", 
      "1.2402103352861975`"}], "}"}], "\[Rule]", "0.9978240258026381`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.5776507815002305`", ",", "0.7194249793785212`", ",", 
      "1.2359534552978024`"}], "}"}], "\[Rule]", "1.0045601387334815`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.5734919436936287`", ",", "0.7064065695134232`", ",", 
      "1.2302864239719948`"}], "}"}], "\[Rule]", "1.0045479015347027`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.5645887393742035`", ",", "0.7211086114952278`", ",", 
      "1.230896140743985`"}], "}"}], "\[Rule]", "0.9992225233670443`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.5823975504000307`", ",", "0.7324799425402111`", ",", 
      "1.2497037370412412`"}], "}"}], "\[Rule]", "1.0053817305098203`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.5839990914155506`", ",", "0.7274670272127296`", ",", 
      "1.2517904386954326`"}], "}"}], "\[Rule]", "0.9991139090310378`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.5920030206581729`", ",", "0.7219926360247978`", ",", 
      "1.2415486750791807`"}], "}"}], "\[Rule]", "0.990910605680912`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.5924743341147488`", ",", "0.7184739887556711`", ",", 
      "1.234168832060936`"}], "}"}], "\[Rule]", "0.9850311581075112`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.6033273407853973`", ",", "0.7107751546157638`", ",", 
      "1.2283551729603186`"}], "}"}], "\[Rule]", "0.9868903995835661`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.638038425660349*^9, 3.63808087114707*^9, 
  3.638081000299697*^9, 3.6380813628287334`*^9, 3.6380814771457343`*^9, 
  3.6380816184819827`*^9, 3.638086680572297*^9, 3.6381243571976595`*^9, 
  3.6381244753522673`*^9, 3.6381245725404377`*^9, 3.6381246623653955`*^9, 
  3.638124749678749*^9, 3.638124838037304*^9, 3.6381249406386843`*^9, 
  3.6381252171179695`*^9, 3.6381254686996117`*^9, 3.638125533673726*^9, 
  3.6381256631539536`*^9, 3.6381257635401297`*^9, 3.63812628193004*^9, 
  3.63812968386943*^9, 3.6381297327131157`*^9, 3.6381298701181574`*^9, 
  3.6381307006262255`*^9, 3.6381309135977993`*^9, 3.6381315581073294`*^9}]
}, Open  ]],

Cell[TextData[{
 "Given the size of the training set we select ",
 StyleBox["Random Forest",
  FontWeight->"Bold"],
 " algorithm for prediction routine"
}], "Text",
 CellChangeTimes->{{3.6381205485979586`*^9, 3.6381205871612263`*^9}, 
   3.6381302955731134`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pred", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainset", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "validset"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<RandomForest\>\""}], ",", 
    RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.628194033492979*^9, 3.6348157857776656`*^9, {3.6361213954797287`*^9, 
   3.6361214076945505`*^9}, {3.6380379696403475`*^9, 3.638038047125684*^9}, {
   3.638107694149844*^9, 3.6381076946802454`*^9}, {3.6381204948714647`*^9, 
   3.63812053201513*^9}, {3.6381277852826953`*^9, 3.6381278160147495`*^9}, {
   3.6381288534165716`*^9, 3.6381289017610564`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["600", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6361214110797567`*^9, 3.636123612571854*^9, 3.6361242645408783`*^9, 
   3.6361340047515454`*^9, 3.6361872914943953`*^9, 3.6361881232220736`*^9, 
   3.638038011401621*^9, 3.638038049060087*^9, 3.6380381796323166`*^9, 
   3.6380808820982895`*^9, 3.6380810041685038`*^9, 3.6380813738891535`*^9, 
   3.638081481997343*^9, 3.6380816229591904`*^9, 3.638086690306714*^9, 
   3.638107709219471*^9, {3.6381205234039145`*^9, 3.6381205375219393`*^9}, 
   3.6381205918724346`*^9, 3.6381243617528677`*^9, 3.6381244791118736`*^9, 
   3.6381245760972443`*^9, 3.638124665594601*^9, 3.638124753890756*^9, 
   3.6381248416097107`*^9, 3.638124944382691*^9, 3.6381250363136525`*^9, 
   3.638125221267577*^9, 3.638125472225218*^9, 3.638125537324132*^9, 
   3.6381256673035603`*^9, 3.638125767143736*^9, 3.63812587754513*^9, 
   3.6381259490254555`*^9, 3.638126047789229*^9, 3.638126130500574*^9, 
   3.6381262309959507`*^9, 3.6381262854556465`*^9, 3.6381264091918783`*^9, 
   3.638126495990431*^9, 3.638126602616618*^9, 3.6381266707887373`*^9, 
   3.63812674621487*^9, 3.6381268580202665`*^9, 3.638126948453625*^9, 
   3.6381270469365983`*^9, 3.6381271918764524`*^9, 3.6381273199526777`*^9, 
   3.6381274603341246`*^9, 3.6381275782547317`*^9, 3.6381276355380325`*^9, 
   3.6381277222585845`*^9, 3.6381277894167023`*^9, 3.6381278194779553`*^9, 
   3.63812790755571*^9, 3.638127979362636*^9, 3.638128070451196*^9, 
   3.6381281487165337`*^9, 3.638128224376666*^9, 3.6381282955127916`*^9, 
   3.6381283717345257`*^9, 3.6381284418254485`*^9, 3.638128527095198*^9, 
   3.638128601086128*^9, 3.638128685497876*^9, 3.6381287487247877`*^9, 
   3.6381288176769085`*^9, 3.638128863431789*^9, 3.6381289070026655`*^9, 
   3.63812896650117*^9, 3.6381290234724703`*^9, 3.6381291190226383`*^9, 
   3.6381292060863905`*^9, 3.6381292935401444`*^9, 3.638129379730296*^9, 
   3.638129451630822*^9, 3.638129688596238*^9, 3.6381297363635225`*^9, 
   3.638129872754562*^9, 3.638130724541067*^9, 3.638130917435406*^9, 
   3.6381315614457355`*^9}]
}, Open  ]],

Cell["and obtain the information on the model", "Text",
 CellChangeTimes->{{3.634816525546565*^9, 3.634816536996985*^9}, {
  3.6348166117367163`*^9, 3.6348166304099493`*^9}, {3.6361214413126097`*^9, 
  3.6361214522638283`*^9}, {3.636195736902358*^9, 3.636195738712361*^9}, {
  3.638038096640171*^9, 3.6380381040033836`*^9}, {3.638130628710099*^9, 
  3.6381306293029003`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorInformation", "[", "pred", "]"}]], "Input",
 CellChangeTimes->{{3.634816146231899*^9, 3.634816148415902*^9}, {
   3.63481619821119*^9, 3.6348162360724564`*^9}, {3.634816473224073*^9, 
   3.6348165035505266`*^9}, {3.6348165464350014`*^9, 3.634816571067445*^9}, {
   3.6348235189137907`*^9, 3.6348235198029923`*^9}, {3.6348241221608505`*^9, 
   3.634824122940852*^9}, {3.6348246239509325`*^9, 3.634824624871334*^9}, {
   3.6348877104355373`*^9, 3.6348877112623386`*^9}, 3.636121457053037*^9, {
   3.638038108730192*^9, 3.6380381203522124`*^9}, {3.6381077131506777`*^9, 
   3.638107713712279*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Predictor information\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->Larger],
          FrameMargins->{{10, 0}, {-5, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.93119, 0.93119, 0.93119],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         FrameBox[
          TagBox[GridBox[{
             {
              StyleBox["\<\"Method\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "\<\"Random forest\"\>"},
             {
              StyleBox["\<\"Number of features\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "3"},
             {
              StyleBox["\<\"Number of training examples\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "600"},
             {
              StyleBox["\<\"Number of extracted features\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "3"},
             {
              StyleBox["\<\"Number of trees\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "200"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             FontWeight -> "Light", FontFamily -> "Segoe UI", NumberMarks -> 
              False},
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[2.0999999999999996`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->Left,
         BaseStyle->{Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], 
          Offset[1.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Background->RGBColor[0.9802, 0.9802, 0.9802],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Association[
  "Method" -> "Random forest", "Number of features" -> 3, 
   "Number of training examples" -> 600, "Number of extracted features" -> 3, 
   "Number of trees" -> 200]]], "Output",
 CellChangeTimes->{
  3.6348161558415155`*^9, 3.6348162400816636`*^9, 3.634816507934134*^9, {
   3.6348165556390176`*^9, 3.6348165726586475`*^9}, 3.6348176278837013`*^9, 
   3.6348186087675276`*^9, 3.634819027465685*^9, 3.634823523546999*^9, 
   3.634823932080517*^9, 3.6348241264976583`*^9, 3.6348246286309414`*^9, 
   3.634837966822993*^9, 3.6348399786493263`*^9, 3.634842286320753*^9, 
   3.6348440280814123`*^9, 3.6348460902456803`*^9, 3.6348481911221223`*^9, 
   3.6348485622155743`*^9, 3.6348492949240255`*^9, 3.634887715583546*^9, 
   3.6349178712864056`*^9, 3.6349294820702252`*^9, 3.634933382829615*^9, 
   3.634998142929389*^9, 3.6349994866175585`*^9, 3.635014299150402*^9, 
   3.636121459361841*^9, 3.636124268456485*^9, 3.6361872953119535`*^9, 
   3.6380381214754143`*^9, 3.638038189179533*^9, 3.638080889867103*^9, 
   3.638081008864112*^9, 3.638081378397561*^9, 3.6380814856321497`*^9, 
   3.6380816266875973`*^9, 3.6380866945187216`*^9, 3.638107716021083*^9, 
   3.638120597145244*^9, 3.638124365668474*^9, 3.638124482060279*^9, 
   3.638124578499648*^9, 3.638124668418206*^9, 3.6381247565895605`*^9, 
   3.6381290281680784`*^9, 3.638129691965844*^9, 3.6381299313014646`*^9, 
   3.638130727770273*^9, 3.6381309212418127`*^9}]
}, Open  ]],

Cell["\<\
The automatic routine selects the Random Forest as the most optimal algorithm \
for this task\
\>", "Text",
 CellChangeTimes->{{3.6348166702368193`*^9, 3.6348166962108645`*^9}, {
  3.63489091091677*^9, 3.634890912180372*^9}, {3.6361215546312084`*^9, 
  3.636121591884074*^9}, {3.6361957708824053`*^9, 3.6361957741224103`*^9}, {
  3.6362007438374243`*^9, 3.636200762467451*^9}, {3.6362008860076237`*^9, 
  3.636200895637637*^9}, {3.638038509869296*^9, 3.6380385815202227`*^9}, {
  3.638130297289117*^9, 3.6381303106427402`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conditional distribution", "Subsection",
 CellChangeTimes->{{3.6380399293811903`*^9, 3.6380399348412*^9}}],

Cell["\<\
We can obtain the information about the distribution of the predicted value:\
\>", "Text",
 CellChangeTimes->{{3.638040328539091*^9, 3.6380403606595473`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dist", "=", 
  RowBox[{"pred", "[", 
   RowBox[{
    RowBox[{"Drop", "[", 
     RowBox[{"init", ",", 
      RowBox[{"-", "1"}]}], "]"}], ",", "\"\<Distribution\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.638039796827757*^9, 3.638039799245761*^9}, {
  3.6380398292914143`*^9, 3.638039888665118*^9}, {3.6381077221050935`*^9, 
  3.638107724086297*^9}}],

Cell[BoxData[
 RowBox[{"NormalDistribution", "[", 
  RowBox[{"1.0026214967074345`", ",", "0.028876489466465673`"}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.638039864453876*^9, 3.6380398913951235`*^9}, 
   3.638080901442323*^9, 3.6380810197997313`*^9, 3.6380813852615733`*^9, 
   3.638081633286409*^9, 3.638086699588731*^9, 3.638107726707102*^9, 
   3.6381206198432837`*^9, 3.6381243710504837`*^9, 3.638124486007086*^9, 
   3.638124582586855*^9, 3.6381246714758115`*^9, 3.638124760130767*^9, 
   3.638124846040118*^9, 3.6381249507475023`*^9, 3.638125041290061*^9, 
   3.6381252253391843`*^9, 3.638125476624426*^9, 3.6381255420041404`*^9, 
   3.6381256712503676`*^9, 3.638125770747342*^9, 3.638125881039536*^9, 
   3.6381259525510616`*^9, 3.6381260516580353`*^9, 3.638126134884182*^9, 
   3.638126235129958*^9, 3.638126288575652*^9, 3.6381264127486844`*^9, 
   3.638126498923236*^9, 3.6381266059862237`*^9, 3.638126674953945*^9, 
   3.638126751394079*^9, 3.6381268627938747`*^9, 3.6381269526032324`*^9, 
   3.6381270505870047`*^9, 3.6381271962132607`*^9, 3.6381273240242853`*^9, 
   3.6381274642965317`*^9, 3.638127581842738*^9, 3.6381276387672377`*^9, 
   3.638127726595392*^9, 3.6381277935507097`*^9, 3.6381278246415644`*^9, 
   3.6381279114089165`*^9, 3.6381279835746436`*^9, 3.638128074507203*^9, 
   3.6381281521641397`*^9, 3.638128227886673*^9, 3.638128298913597*^9, 
   3.6381283751665316`*^9, 3.6381284458970556`*^9, 3.6381285318376064`*^9, 
   3.6381286046897345`*^9, 3.638128688695882*^9, 3.6381287521099935`*^9, 
   3.6381288209061146`*^9, 3.6381288689385986`*^9, 3.638128969355975*^9, 
   3.638129033924488*^9, 3.638129122595044*^9, 3.6381292099551973`*^9, 
   3.6381292966445503`*^9, 3.638129383957903*^9, 3.6381294555152287`*^9, 
   3.638129695694251*^9, 3.6381297404975295`*^9, 3.6381298779025707`*^9, 
   3.6381307315766797`*^9, 3.6381309259686213`*^9, 3.638131567514146*^9}]
}, Open  ]],

Cell["\<\
It is confirmed that the predicted value is normally distributed with mean \
close to the  and low volatility.\
\>", "Text",
 CellChangeTimes->{{3.6380404389872847`*^9, 3.6380404671297345`*^9}, {
  3.6380405160826206`*^9, 3.6380405912747526`*^9}, {3.638086763096442*^9, 
  3.6380867877912855`*^9}, {3.6380980695253124`*^9, 3.6380980755157228`*^9}, {
  3.63809816507548*^9, 3.6380981711594906`*^9}, {3.6381243929997225`*^9, 
  3.6381243989277325`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PDF", "[", 
  RowBox[{"dist", ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{"dist", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.8", ",", "1.25"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", "Purple"}], "}"}]}], ",", 
   RowBox[{"FillingStyle", "\[Rule]", "LightGray"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Conditional PDF of the predicted value\>\"", ",", "15"}], 
     "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.638040041046186*^9, 3.6380400433861904`*^9}, 
   3.6380401031186953`*^9}],

Cell[BoxData[
 RowBox[{"13.815470224132515`", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "599.6270483527684`"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.0026214967074345`"}], "+", "x"}], ")"}], 
     "2"]}]]}]], "Output",
 CellChangeTimes->{{3.638040028425764*^9, 3.638040047910198*^9}, 
   3.6380401058955*^9, 3.638080913329544*^9, 3.638081027084944*^9, 
   3.6380813949179897`*^9, 3.6380816393704195`*^9, 3.6380867099627485`*^9, 
   3.6381244027965393`*^9, 3.6381244918570957`*^9, 3.638124590355669*^9, 
   3.638124678152623*^9, 3.638124765918377*^9, 3.638124851156927*^9, 
   3.6381249679699326`*^9, 3.6381250484660735`*^9, 3.6381252310175943`*^9, 
   3.63812554772935*^9, 3.638125684572791*^9, 3.6381257753805504`*^9, 
   3.638125886187545*^9, 3.6381260556204424`*^9, 3.6381262946128626`*^9, 
   3.638126502511242*^9, 3.6381268676766834`*^9, 3.6381296990950565`*^9, 
   3.6381297468155403`*^9, 3.638129883518581*^9, 3.638130735663887*^9, 
   3.638130930258629*^9, 3.638131572100554*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
   "], {{{}, 
     {GrayLevel[0.85], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1nfgjmUbxnF7ZMvM3ilZkcreo4zMSGSXrey9qexRdlOlvVDI3ptCWYWK
kK2M4v2cvX+c7uN7HOf9e27PfV3n9eRr36txz0QJEiRIqO4m+f/1TpL/69L0
t4kTJOinYaxrZ+FXrulwbtfv5Mtc6+GWrtnl813Xu+7jtZMvx9f8redwL/pz
upr8ffp3+hx9S1aRnqb/IbqCbDg+j6fSe+jZ+t6VncGl+H3pMfRGWSfZl/Rl
Oi0/F/0cvUpfXfw0noez6ZtHH6bX0XtlmeLZ9LWle8o+w1Vl79G/0Wfpm/FM
9FR9xejysmHx7HgKvZuepe8d2Wlckv8SPZreIOso+4K+RKfh56Tb0iv11cEt
8FycVd9c+id6Lb1Hdi/dVl8buofsU1xFtpj+lf6DvhHPRE/R9yD9uGxoPDue
TO+iZ+p7W/Y7LsF/kR4V70rWQfY5fZFOzc9Bt6FX6KuNm+M5OIu+OfSP9Bp6
tywj3Ubfs3R32Se4crwr+hR9hv47nomerO8B+jHZkHh2PIneSc/Q95bsN1yc
34ceSa+TtZd9Rl+gU/Hvo5+lv9VXCzfDr+PM+l6nD9Gr6V2yDPSz+lrT3WQf
40rxruiT9Gn6r3gmepK+ovSjssHx7PhVegc9Xd+bsl/xQ/ze9Ah6rayd7FP6
T/oefna6Nf2Nvpq4KX4NZ9L3Gn2Q/o7eKUtPt9b3DN1V9hGuGO+KPkH/Tl+P
Z6Jf1Xc/XU42KJ4dv0Jvj72j7w3ZKVyM34seTq+J9S37hD5Pp+Rno5+hl+ur
gZvg2fhefbPpA7F36B2ydPQz+lrRL8g+xBXiXdG/0L/R1+KZ6Ff0FaEfkQ2M
Z4/9K1/EO8l7EMewGUavjnUt+5g+R6fgZ6Vb0cv0VceN8SycUd8s+ofYM/R2
WVq6lb6W9POyJbh8vCP6Z/pX+mo8C/2yvsJ0WdmAeGb8Mr0t9oy+hbIT+AF+
D3pozLZY17KP6LN0cn4WuiW9VF81/BSeiTPom0l/H3uG3iZLQ7fU9zTdRfYB
flx2Sl2JZ8ET5YXoMvL+8cyxX+ULeL/wiuLu9BB6VaxjWTKcGT+Nv5ZXxY3w
DJxe/q3aykuNn5a3oDvL38ePyU6qy/GZeIK8IP1wzHh8KvZjzHDez7z7cTd6
ML0y1qksacxM3AJ/Ja+CG+LpOJ38G7WFlwq3kDenO8nfw4/KTqhL8Zl4vLwA
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
        "]]]}, {}, {}}, {{}, {}, 
     {RGBColor[0.5, 0, 0.5], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1:eJwl1gf01nMbx/G/0lLRkkLa2nsPQnvQUNGgHZpSFKFUNGlP7WE1EaW0h3Yo
FU2U9t6Dntd1nnOe67nf78/nuh3H/f39vv/srbs26HJPQkLCv/cmJMTnssQJ
CW8lSkh4hWyQfchXylvhrDiNrjV/kP+K19nbjyfrHsaf4qa4tq6EvZN4Dh6n
+1k3gp+V98FP4MK6kfxJfhufsXccf6GrjL/Gr+NWOv9LWI57gld1G3Uf8VXy
1jgbTqtrwzPyXXi9vQN4iu4RPBk3w3V0Je2dwp/h8bpfdCP5OXlf/CQuohvF
K/E7+Ky9E/hLXRX8De6GW+t8JPzo/3rh13Q/6Qby1fI2ODtOp2vLH+K78QZ7
B/FU3aN4Cm6On9WVsncaf44n6M7zD/SVZEVlo/lT/F98Tl/VfMvf0LeRwYQV
+G3cQbeGtxXmkKWXteOZ+G94oz6Lmcpf0j8nK60/g7/AE3UXeD/9U7JisjH8
af4fPq+vZhbz7vq2siT6lfgd3FG3lrfT55RlkLXnmfke/JP+MTONv6yvKyuj
P4u/xJN0F3l//dOy4rKx/Bl+F1/QVzff8R76drKk+lW4N+6kW8fb63PJHowz
zh/me/EmfVYznbfQ15OV1Z/DX+FPdZf4AP0zshJxpnnl+I/ML+prmO/5m7y9
PplqNX4Xd9at56/oc8syxhnmj/B9eLM+m5nBW+rry8rpz+O5eLLuMv9QX1lW
Ms4srxLPLb+kr2mW8Lf4K/rk+jX4PRwP+Qb+qv5x2UNxRvmj/He8RZ/dzOSt
9A1k5fUX8Dw8RXeFf6SvIisVZ5JX5Yn4ZX0ts5T35K/qU+jX4vdx13he+Wv6
PLJMcSZ5Fv4H3qrPYSrILurny6byq3ygnaqy0nEOeTWemF/R1zb3ydbxPvrX
47njHezklWWOs8cf4/vxNn1OU1F2Sb9ANo1f44PsVJOVifPGq/N7+VV9HZNS
tp731Xfjm3hHO/ni3RdnjGflB/B2fS7zhOyyfqFsOr/OB9upLisb54rX4En4
Nf2zJpVsA/9A/wbfzDvZyR/vsDhLPBs/iHfoc5snZVf0i2Qz+A0+2dS0l1R+
XfacSS3byPvZ68638C4mu71Dsp2yx00l2VV7X8tm8pt8iqllL5n8hqyuuV/2
E+9vrwffyruaHPYOy36W5TFPya7Z+0Y2i9/iU01te8nlN2X1zAOyTXyAvTf5
Nv66yWnviOwXWV7ztOy6vW9ls/ltPs2kMZvlH8rfkm/n3Uwu3/9T9qssn3lG
dsPeYtkcfodPN2nNFvlH8p7yHfyNeM7NTfl38s/k//IZJp3ZKh8o7yXfybvH
c2nSmwxmm36Q/u24A3mPeG7MLfn38s/l//GZca+a7fLB8nfiTuJvmtz+/f+S
7ZLlj3et7La9JbIv+F0+y9Sxl0J+S1bfZJTt4EPs9ea/8s52CsR9E/+N+OP8
b7xbX8DM4q31z8uq6+/gpfjL+L5uVFx0eAiugcvpLuPv8GzVs/i+OCNxp9s7
6fOreKfgH3Cv+Pfz+ZrvXfW5NPH///54yHd34qHya/zdeMZ8DpLdjvs8zqrP
gnFefGaxd8nnYn4n3jv6PD6Pyq/Hveb7h3xO0xfEs3Eb3FBfw+6/+Af8le4e
M1RfU1Y+zoT+OZ4y/tm6500m2c98mP49vpv3MnntHZPtkRWK97DsP3vLZHN5
IvNZ3HXmF/nH8vdlv/G345mKeyjuAvOr/hN9H/0e/k48I+aufLl8njyx+Tze
3WaXfLi8r2wv7x1nwMTl/6N8vvxe80W8a81u+yPkH8j28XdNPrv/yPbKCsc7
KH5e2QrZAp7EfBnvUPOb74+U95P9zt8z+e0el+2TFYn3jCyRbKVsIU9qvop3
o9nj+6Pk/WV/8PdNAbsnZL/LisZ7RZZYtkq2iCczc2V1ZanirPCGcV/K9vLR
9gbw/byPKWjvpOwPWbF4r8R/Dtlq2dc8uZknqydL7fv/8UZx/8n28TH2PuQH
eF9TyN4p2X5Z8XiuZElka2Tf8BRmvqy+7H7fv8sbx30m+52PtfcRPxjvRjuF
ZI/Fb8AL89P4gL6EaSBLKlsr+zbuNjOM1/KdCvF76BvwB+IZ5C/EfQb/4OP4
wDjz8c60U1iWNX4rXoSfwQf1JeM8y5LJ1skWx91mPua1fadi/G7653kafg9/
Me4z2X4+ng/ih+PdaqeILFv8prwoP4sP6UvF7yRLLlsv+y7uNvMJr+M7T8Tv
q2/I0/JEvEncZ7IDfAIfzI/EO9hOUVn2+K15MX4OH9aXjt9PlkK2QfZ93HNm
OH/Wd56M313fiKfjiXnTuOdkB/lEPoT/Ge9uO8VkOeIM8OL8PD6iL2Pm8Lb6
RrLG+vv4Rrwk7kIzgj+nrxRnQ9+Yp+f38mb6Zfxt3oHn0R/Ck/BQ3V9xN+iL
y3LGmeEl+AX8p75svEd4O33j+O31KflPeGncnWYkr6t/Ks6P/gWegSfhzfXL
+Tu8I8+rP4w/xcN0f8ddoy8hyxVniZfkF/Ff+nLx3uHt9S/EmdCn4pvwD7o0
ZhSvp386zpX+Rf4gT8pf0v/Ie/NOPJ/+CJ6MP9Yd5W/pS8pyxxnjpfgl/Le+
fLzH+Cv6F+Os6FPzzXiZbhcerUuLR+P6+Jk4d/aa8Iw8GT+F5+KX7a2IewZ3
lue39yeegj/RbdYN5sfkPXEp/HicSV6aX8ZH4znA0+P5jPckfhU3iTNm736+
BS+P+wKP0aXDY3ADXDnOq72mcf/x5Pw0nodb2FuJ38Nd5AXs/YWn4uG6f+L+
0ZeW5YkzzMvwK/hYPDd4RjzP8f6N+xY3jXNo7wG+Ff8Y9xAeq0uPx+LncZU4
0/aa8Uw8BT+D5+OW9lbh93FXeUF7f+NpeIRui24IPx73Gy6D88YZ52X5VfxP
PG94ZrwH4v2OO+BmcU7tpeHb8Iq4B/E4XQY8DjfEVePM22vOM/P7+Fm8ALey
txr3wa/LC9k7iqfjkbqtuqH8RNyvuCzOF88AL8ev4ePxPOJZ8f6I+wJ3xM3j
HNtLy7fjlXHv4vG6B/F43AhXi2fC3kv8YZ6Sn8MLcWt7a3Bf3E1e2N4xPAOP
0m3TDeMn4z7H5XD+eEZ4eX4dn4jnFc+Od03cP7gTfkn3sr10fAdeFfc8nqDL
iCfgxrh6PDP2XuaP8FT8PF6E29hbiz/Ab8iL2PsHz8Sjddt1H/NT8fcDLo8L
xDPDK/Ab+GQ8z3hOvIvwAtw5njldC3vp+U68Ov6OwBN1D+GJ+AVcI54Zey34
ozw1v4C/xm3trcP9cHd5UXvH8Sw8RrdD9wk/HX+f4Arx9188M7wivxnvAHvH
8GfxrsILcZd45nQt7WXgP+M18XcKnqTLhCfhF3HNeHbsteRZ+P38Iv4Gt7O3
HvfHPeTF7J3As/FY3U7dcH4m/v7BFXGheHb4E/xWvAPi+cafxzsML8Jd49nT
XcFL4pzH35N8rf5TntlnE5+14p3ic0X8zebzgbgLfLbXD/D5ZpxNn8X1/wNy
+4hO
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.8, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
    "AxesInFront" -> True},
  PlotLabel->FormBox[
    StyleBox[
    "\"Conditional PDF of the predicted value\"", 15, StripOnInput -> False], 
    TraditionalForm],
  PlotRange->{{0.8, 1.25}, {0., 13.815470206324962`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.638040028425764*^9, 3.638040047910198*^9}, 
   3.6380401058955*^9, 3.638080913329544*^9, 3.638081027084944*^9, 
   3.6380813949179897`*^9, 3.6380816393704195`*^9, 3.6380867099627485`*^9, 
   3.6381244027965393`*^9, 3.6381244918570957`*^9, 3.638124590355669*^9, 
   3.638124678152623*^9, 3.638124765918377*^9, 3.638124851156927*^9, 
   3.6381249679699326`*^9, 3.6381250484660735`*^9, 3.6381252310175943`*^9, 
   3.63812554772935*^9, 3.638125684572791*^9, 3.6381257753805504`*^9, 
   3.638125886187545*^9, 3.6381260556204424`*^9, 3.6381262946128626`*^9, 
   3.638126502511242*^9, 3.6381268676766834`*^9, 3.6381296990950565`*^9, 
   3.6381297468155403`*^9, 3.638129883518581*^9, 3.638130735663887*^9, 
   3.638130930258629*^9, 3.6381315722409544`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing predictor accuracy", "Subsection",
 CellChangeTimes->{{3.638099938623555*^9, 3.6380999544731827`*^9}, {
  3.6381000133944864`*^9, 3.6381000179496946`*^9}}],

Cell["\<\
We may be interested to check how accurate the predictor works relative to \
the original data.\
\>", "Text",
 CellChangeTimes->{{3.6380999788248253`*^9, 3.6381000664813795`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotdata", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"traindata", ",", "None", ",", 
     RowBox[{"-", "1"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"adata", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"Take", "[", 
      RowBox[{"traindata", ",", "All", ",", 
       RowBox[{"-", "1"}]}], "]"}], "]"}], "//", "Flatten"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdata", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"pred", "[", 
      RowBox[{"plotdata", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "traindata", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"adata", ",", "pdata"}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Actual and Predicted data\>\"", ",", "15"}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Actual\>\"", ",", "\"\<Predicted\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.638097804886448*^9, 3.638097919671449*^9}, {
  3.6380979995435896`*^9, 3.6380980117428107`*^9}, {3.6380981239382076`*^9, 
  3.6380981253890104`*^9}, {3.6381077460043354`*^9, 3.638107748032339*^9}, {
  3.638120654054144*^9, 3.638120654568945*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxVmHdYjm/Yx0saSOJnZDZUslLIpq8SlRBRUfG0h+ZTPT3t+3mykr13SZKR
sjfZ2RH9EpFRdoP8ZL/e472/juP1h47vcd7n/b0+13le532VoU/ENP9mKioq
7n/++9+f//ev3vr//1TBtEXncvvV1olaC+c3v8vNb8e4LvofVb+X9Ve3x7Gh
wWnbv/J5Pexdad+rVUfGuyExY9GpM02MG0Cv01qzxUeojXB18yBdyXxqY9hP
f9Jv8xpqU5S7adZ/PkFthhbC4ux/NlP3wcDMb9eECOp+kAdMPKCeRG2O+JuL
35tPpbZAaorJ98VB1JawNPK37iSlHojJLU0ezVpHPQgJm0P7ZwZSD0an0o+W
w49RW6G7xtIp7peph6BZ5aBY4Q31UERfttHUqqIehpae7baZd+b+DEdHhU2a
RmvqERi0qajcRI96JPZa1t67ako9ChcmmpfbT6EejbwTrSb3HEo9BsYbm1VM
U6e2hs6+hrsXbtIfqLkQPX/zAVELwGVZvlXEHMbHomRwrw2n0xkfi6ezstPt
ohi3gXZA1XSDTMZt8KOqfVBFNOO26Fb95s0EBeO26D55nl11R8bHIaXrtep9
T2rF+DioKaVn51sxboeC17LLBY2M22F7YaPyQRjj4/H5dubkTuwXYTz0rrXv
nLCH8Qk4d9v57IpcxicgbYXm0SVcj4o9mj+vKW6uJu6PYI+C8l/a/1Uy7oBd
qTbqu0wYd4D+g2spFf9wPx3RoXPLAddYL8ERpVPWP/nyNz4RDn21BlcOYnwi
nn8cqqNvzLgTPqmY6Zn1YtwJL5u2HQzWZ3wSrJceT79jxPgk7H7XVTfblvHJ
2NSz6tgjC8YnY7B7ZOjvboxPQVpdyPknjeSfgpY3fF5cuk4+Z3g6/r6gdkbU
cMZOo4ww83t83hnLjNUVw3aIusgZeufnmuVlM38qzo9QxjuWMn8qnDRW9Vr4
ivlTYfA9q087zpOiqXh8e2i7ZgXMn4Z0vdCF7QzFOKahtLg6dt0L5k9DRP8D
mU+0mD8NMjXrlof+nhcX9Il99qKNFfNdkHSw5vQPasEF+pqpO1vYM98F74b9
OtB3AvOnw8E1vMuhycyfjhFvT2pPWMr86VhZt7hp+ALmT8dC22u9X2cwfwZU
+46e2LSf+TOwdeyDJt8C5s8ATK8+Vy5m/gwc7jqvS79C5rtCPti+/eQdzHdF
++3zl0rSmO+KIVq1ByYqmO+KnKk+A7I2MN8NATtjEzbNY74bcnaemRQSy3w3
FLssz+m/nPluCFS7YTY5jPnueFzqZW+oZL47LuR02D84mfnuuL+797QLt5jv
ji99rYY8O8T8mVg759398e7Mn4nydflxltxfYSZsO9/W+TCN+TMxo1W6Xc0Y
5s/Cw75pckU/5s+C9XXnSM8K1n8WBo1Sc3UrZ//NQhcbS2n4R/aPB7KKQyq/
NbD/PPDl2HmZ5kvme2Bv3cNaM/ZTkQcsPpya9OMt8z2R8eB2+5As5nvC3k7S
qXIg1++JuiVu0hRw/Z64MnXrmQX+XL8XtCdXPDUN5Pq9oHbx5iXLBOZ7ITa/
x4Weocz3wq7xOX6e8cyfjXCZYavp7CfMxprSrqGqfF6YjdmlprVrUpk/G5XJ
14d/Ocn8Obj63KlxCOuBOVAZ9cN22SPmz8Gzjt/9pjcyfw50xt0oWVnNfAku
vb9+OeGJqA0kyNG823zhTb5PgkzjrS/+LRO1RIKU7Fba20/z/RI4nzS/tlm3
4f90lgSdXmT4j9QSdZEEjhqDVhrribpKAtNlQ48aG4laxRtlZWamts1EbeCN
wa5aVQeb6O+NhoMjt67rKcYl3jjkLzc7pC5qwRuNsjtO2r/F57O8MbWyWcvM
1vT3RoVsyYAh3ejvjdiPOXafJPT3gfzz22R1H/r7oFrTtVx/hKjhA+WXIbdN
u9DfB/lPZ40rDqa/D3Z06PnvlUjy++Cye/z27uPp74PaV92OBCTT3wdmDWEh
11fT3xc6nSblGy+mvy/O5+60bp5Pf1/cXr7I6uQd+vsiWk1fZ00l/X1xq/pw
Xp/D9PfFuUariG1L6e+LFW5Np82z6O+Lj4OfaQ45Sn8/fHJoymwzj/5+uKK8
/6/vfvr7wWuh/f7y0/T3Q0dvy3Dbq/T3w1f/U/ctS+jvh/ozJla4TH8/jAlZ
qZpRRH8/vM9TjP51jv7+kNVVPLj+hv7+cCqM2yBvpL8/vmjMiXrW5aPo74/6
V+2jR/cSteCP9lF1bvd+0t8fOqcNe/dVEeNF/hiSO9fS6x79/ZF6xu2gdgH9
AzBupvEF80P0D8Dun0a6ZdfpH4D4uKagXb/IHwA9S+1PD2vJH4BX3/+VCr/p
H4CeyWErC7n+ogD0vWheNLme/gEY9Szy+IXn9A/EkeUd07V30j8QOh1+Bfcu
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
9f8Ay9JMUw==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
r8DB76P/AeRoYpc=
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0.9463956750414296}, 
     PlotRange -> {{0., 600.}, {0.964682053375199, 1.3304096200505855`}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.9463956750414296}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> FormBox[
       StyleBox["\"Actual and Predicted data\"", 15, StripOnInput -> False], 
       TraditionalForm], 
     PlotRange -> {{0., 600.}, {0.964682053375199, 1.3304096200505855`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Actual\"", "\"Predicted\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6380979242734575`*^9, 3.638098015736418*^9, 3.6380981338130255`*^9, {
   3.6381206452089286`*^9, 3.6381206598105545`*^9}, 3.63812441465256*^9, 
   3.6381244981283073`*^9, 3.6381245969076805`*^9, 3.6381246845330343`*^9, 
   3.638124771924388*^9, 3.638124856928937*^9, 3.638124974662344*^9, 
   3.6381250555172863`*^9, 3.638125238318407*^9, 3.6381255549989634`*^9, 
   3.638125692029604*^9, 3.6381257832117643`*^9, 3.638125893020357*^9, 
   3.63812596891549*^9, 3.6381260629056554`*^9, 3.6381261445249987`*^9, 
   3.6381263023816757`*^9, 3.638126435337524*^9, 3.638126510576456*^9, 
   3.638126617343044*^9, 3.638126684516762*^9, 3.6381267633593*^9, 
   3.638126876053898*^9, 3.638126964100453*^9, 3.638127063784628*^9, 
   3.6381272069772797`*^9, 3.638127333509102*^9, 3.6381274739997487`*^9, 
   3.6381275976143656`*^9, 3.638127652557662*^9, 3.638127739824216*^9, 
   3.638127927258545*^9, 3.6381279960546656`*^9, 3.63812808431962*^9, 
   3.638128164410161*^9, 3.638128240195094*^9, 3.638128306588811*^9, 
   3.6381283833565454`*^9, 3.6381284549762716`*^9, 3.6381285404956217`*^9, 
   3.6381286139873505`*^9, 3.6381286969482965`*^9, 3.6381287595044065`*^9, 
   3.6381288324657345`*^9, 3.638128877315813*^9, 3.6381289816955967`*^9, 
   3.6381290469817114`*^9, 3.6381291300050573`*^9, 3.6381292172716103`*^9, 
   3.6381293090465717`*^9, 3.6381293964379253`*^9, 3.6381294672932496`*^9, 
   3.6381297591239624`*^9, 3.638129889118991*^9, 3.638130742309499*^9, 
   3.6381309409602475`*^9, 3.6381315801813684`*^9}]
}, Open  ]],

Cell["\<\
We can see that the predictor replicates the original data quite well.\
\>", "Text",
 CellChangeTimes->{{3.638100575999875*^9, 3.638100595172309*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verification with Testing data set", "Subsection",
 CellChangeTimes->{{3.63612300196397*^9, 3.63612300768918*^9}, {
  3.6380388185002384`*^9, 3.638038820450242*^9}, {3.63810060737153*^9, 
  3.6381006340163765`*^9}}],

Cell["\<\
We can test and validate the classifier with the <ClassifierMeasurements> \
command. 
For example, we can used the testing set  defined above and look at its \
subset:\
\>", "Text",
 CellChangeTimes->{{3.6361230131959896`*^9, 3.6361231070653543`*^9}, {
  3.636141196153434*^9, 3.6361411966214347`*^9}, {3.6381007106749115`*^9, 
  3.6381007521397843`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{"testset", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.6380388843479543`*^9, 3.638038892631569*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.4855792994937988`", ",", "0.6214852057256703`", ",", 
      "1.159590861187873`"}], "}"}], "\[Rule]", "1.0465983899847575`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.4859038634094202`", ",", "0.6306283480984167`", ",", 
      "1.1508622141427869`"}], "}"}], "\[Rule]", "1.0433649571651347`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.4770181154017292`", ",", "0.6188473250934415`", ",", 
      "1.1483295660509276`"}], "}"}], "\[Rule]", "1.044159937837507`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.49289378660868216`", ",", "0.6278707211233914`", ",", 
      "1.1507083453949656`"}], "}"}], "\[Rule]", "1.0429353551622946`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.4964312135461877`", ",", "0.6266221299120804`", ",", 
      "1.1502457187978046`"}], "}"}], "\[Rule]", "1.0436324149509342`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.5012583871468351`", ",", "0.6290705589739058`", ",", 
      "1.1472784157490907`"}], "}"}], "\[Rule]", "1.0450455078796608`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.5061469624840664`", ",", "0.6303156609291835`", ",", 
      "1.150714164294755`"}], "}"}], "\[Rule]", "1.0580293114717272`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.4921222492141363`", ",", "0.6276626517538387`", ",", 
      "1.1538724938442892`"}], "}"}], "\[Rule]", "1.0594887362119285`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.4851130572120188`", ",", "0.6264905392625233`", ",", 
      "1.1639517563501187`"}], "}"}], "\[Rule]", "1.0620956971078805`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.4765871660378013`", ",", "0.6324910965127247`", ",", 
      "1.1642427030419231`"}], "}"}], "\[Rule]", "1.0514736818771888`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.63803889338037*^9, 3.6380810376305623`*^9, 
  3.638081399909999*^9, 3.638086714065556*^9, 3.6381244254165792`*^9, 
  3.6381245046647186`*^9, 3.6381246076872997`*^9, 3.6381246886826415`*^9, 
  3.6381247768227963`*^9, 3.638124862420147*^9, 3.6381249802783537`*^9, 
  3.6381252435444164`*^9, 3.638125560583773*^9, 3.6381268812955074`*^9, 
  3.6381288368805428`*^9, 3.6381292248376236`*^9, 3.638129472675259*^9, 
  3.6381297689363794`*^9, 3.6381298936429987`*^9, 3.638130748393509*^9, 
  3.6381309475902596`*^9, 3.6381315859377785`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "=", 
  RowBox[{"PredictorMeasurements", "[", 
   RowBox[{"pred", ",", "testset"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.636123726920055*^9, 3.6361237455464873`*^9}, 
   3.6361243352870026`*^9, {3.6361340227071767`*^9, 3.6361340250003805`*^9}, {
   3.6380389657966976`*^9, 3.63803898983634*^9}, {3.638039044904436*^9, 
   3.638039089348914*^9}, {3.6380391968799033`*^9, 3.6380392153971357`*^9}, {
   3.638107756440754*^9, 3.6381077569555545`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorMeasurements", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{{}, {}, {
                  GrayLevel[0.6], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  Dashing[{Small, Small}], 
                  
                  LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                   11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                   GrayLevel[0.4], 
                   PointSize[0.09], 
                   AbsoluteThickness[1.6], 
                   
                   PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                    2.227816320451859, 2.584653237430766}, {3.043099335090081,
                     4.798822972025658}, {3.5728355469237116`, 
                    5.9507424155697155`}, {4.158566334344331, 
                    5.2097676165465385`}, {4.824808988689111, 
                    7.23346088027902}, {6.88649660338492, 
                    5.297021421229134}, {7.819072150835878, 
                    6.533166043611269}, {8.437306856915493, 
                    8.81724006216815}, {8.604907881861761, 
                    11.302704526196452`}}]}, {}}, {}}}, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["601", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{{}, {}, {
                  GrayLevel[0.6], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  Dashing[{Small, Small}], 
                  
                  LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                   11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                   GrayLevel[0.4], 
                   PointSize[0.09], 
                   AbsoluteThickness[1.6], 
                   
                   PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                    2.227816320451859, 2.584653237430766}, {3.043099335090081,
                     4.798822972025658}, {3.5728355469237116`, 
                    5.9507424155697155`}, {4.158566334344331, 
                    5.2097676165465385`}, {4.824808988689111, 
                    7.23346088027902}, {6.88649660338492, 
                    5.297021421229134}, {7.819072150835878, 
                    6.533166043611269}, {8.437306856915493, 
                    8.81724006216815}, {8.604907881861761, 
                    11.302704526196452`}}]}, {}}, {}}}, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["601", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"StandardDeviation: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["0.09732406336433634`", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorMeasurements[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.636123742176882*^9, 3.6361242770677004`*^9, 3.6361243363322043`*^9, 
   3.6361244536756105`*^9, 3.636134026950384*^9, 3.636187306662128*^9, 
   3.6361958420925055`*^9, 3.6380390535000515`*^9, 3.6380390922973194`*^9, {
   3.638039201232311*^9, 3.6380392174407396`*^9}, 3.6380810449157753`*^9, 
   3.6380814044184065`*^9, 3.638081644830429*^9, 3.6380867182619634`*^9, 
   3.6381016153325005`*^9, 3.63810775999756*^9, 3.6381244292541857`*^9, 
   3.6381245073479233`*^9, 3.638124610042904*^9, 3.6381246908822455`*^9, 
   3.638124779755602*^9, 3.6381248650721517`*^9, 3.6381249829771585`*^9, 
   3.638125061772897*^9, 3.638125246368021*^9, 3.6381255628613772`*^9, 
   3.638125697786014*^9, 3.638125788905774*^9, 3.638125898870367*^9, 
   3.638125974999501*^9, 3.638126068927266*^9, 3.6381261506714096`*^9, 
   3.6381263082940865`*^9, 3.6381264403295326`*^9, 3.638126516254866*^9, 
   3.6381266239418554`*^9, 3.638126691926775*^9, 3.638126767852108*^9, 
   3.6381268842751126`*^9, 3.638126969201662*^9, 3.6381270702898393`*^9, 
   3.6381272156820946`*^9, 3.6381273391251116`*^9, 3.6381274784769564`*^9, 
   3.638127601966773*^9, 3.6381276582204723`*^9, 3.6381277467350273`*^9, 
   3.6381279340913568`*^9, 3.6381280060230827`*^9, 3.6381280891244287`*^9, 
   3.638128170618972*^9, 3.638128244422702*^9, 3.6381283106448183`*^9, 
   3.6381283881925545`*^9, 3.638128461871484*^9, 3.638128546267632*^9, 
   3.638128624158569*^9, 3.638128703188308*^9, 3.6381287634200134`*^9, 
   3.6381288393297462`*^9, 3.638128987530007*^9, 3.6381290537209234`*^9, 
   3.63812913724347*^9, 3.6381292275832286`*^9, 3.638129318422188*^9, 
   3.638129401773134*^9, 3.638129474781263*^9, 3.6381297716819844`*^9, 
   3.6381298964822035`*^9, 3.638130750967514*^9, 3.6381309504294643`*^9, 
   3.638131589088984*^9}]
}, Open  ]],

Cell["\<\
The classifier returns the correct class group ping for all categories with \
high precision.\
\>", "Text",
 CellChangeTimes->{{3.636195866082539*^9, 3.636195906462596*^9}, {
   3.636195943922648*^9, 3.636195950552657*^9}, 3.6362007657374554`*^9}],

Cell["Resting of residuals", "Item",
 CellChangeTimes->{{3.638101641587347*^9, 3.6381016547381697`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ResidualPlot\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6380392658632245`*^9, 3.638039275597642*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJztnHk0Vl/87zUShUrzRBMq0oRChwZflUojTaJ5/FZKA5UhFRVpkMqQKSGZ
5+nzmKlIc0SkSZIeTykl9dvPus/7fO9qrdZd6657//P5x3qtvc8+ezr77PN4
ra2ybtfijR2lpKTkpKWkxH+L7MNb6k80cQGJwy4EdAinJLVrZpr7mzipphnn
n58Lo1T1odU/45s4x1K1GXavoikq0NvD8ABj4Q5Lm4YwmtnvzMp8e3Z9Xdu2
KJVwGm+VP4Zj1zs6LK6PSb7Bl6fc79ORfIVA/vqawsaeuTYBVKfSfL738SZO
ME/2xO6nAdR1mJrNTJa/pof94MidITxLtZkEtnS5TrIpT33vH2ziDD+/aOgZ
6Ecv68tn9CkQcoZL8sa8H+7Lva8v21x7jfH6u1UlQSFc4khp18DHQk4w4OTX
oSP9uZ86U6sa2PWOAzrZ57T6kN7EV3tuuTJe0mqy0+k6mQapvGkubOK0XG3j
XjTF0u2ev7iRjKWcHQY4JEZRlXC+V0BFExfjZrB3ekUMvW1LmaBax/jxqfeu
w+MoLSl37HqW7ti6Y37+4iga9GrvgaZ3rD1OVk5HN0TRJdPZAze/b+Ks0l7u
enQlgiZYyYcG1bPyzzf9PFkQSlcn9Cx6wvJb/dY0X2kfwZdfE36tan5oJLn0
yLda8IGlP1u1YeXxGArzPmMyj7HhmZbbk51u8umG0Vxrysw4nj0/Lq4wXBVL
lUmyzkM+svrtOWR/5HAUn668XDNwm0U0yYcu/OTB7rdb7lPJ1qRE0t7qc9i9
lt1vnklSL9ckGnP/d3gEq2/ZFOcTM88m8PUte5K/Ym5ADBmSwpIVLL3myZIx
FQOiqPzY18iXrL3KB0wHPx4WxZcvVLoebG0ey5enFWDW8axyLC28Y1HsIub9
nrpB6vE81zgP/ZK7KpGvr+Pi0KSbBUkU4Td36BIxF97ITZiUQKUpixW/vGXt
1RxhLd03gSzn7VNrZelSZ81r9TckkENrbnjiN9Y/epFrVLYnUsXZCfsPsvwB
s55Fm/gm0OHar6/vVLH2Nq9MPh0fTxEjDtoPY+1XLOxgZBuRQPNdShatZOy5
03/zOIUkeqGtG9rjFWvPr/17NIoT6Pfl5rGnWPsMy/rGfZifSD1vZyWNe8n6
p3+t453xSWQ1pfmLbQ1r32f3Cwt8EylQXfTs/BtW3tdYX+3yeFrabd/By6/Z
/TvkvIntkkRpITEur1h+w/3d3I9GJFJZ2TrjYNYfu28JDTVqkin6R4ZfP9a/
MYHfbz1anERj17TmfmUs7DLi2WJBEq3en66azdqvaCBsVB2WTFsbLozq/4jx
BdcewWeTKVZj8J2BLL+UmuPYmPwUqpwQ9/44S1ceojbD/1QafZKtPNXKxle4
L1B507pMcp1muvXMC3a/yGf/ppunkM++7Z5TnrL6mVg3TVmSSmdeh3tuET8P
Sprjb0un04Md0imHWPlaydVpv2xS+PmilXjW5dCE/1gqxTzUaGjyf8/Li1Rh
nwWpNDn+S4+Kh6y9P0P7XR2SyudX9pZ3aklJ4+eHZ8M0ai5J+6/8h9q331al
//c8Zc3t29Molc8fkyIz1NgsnboGyniHsv52PPTMzPJ+Ks9ay0JtD8xJ41nZ
LmZw09z/WOvdPyvy21LphPqllE3V7PrrD/fOVckg05aJMp3Y/DF7+Nb47pt0
2q0jI9eLpZudC5j2ZGA6Hcq4L0xi/ac8y/eatVsqNawxnj+V5ReUax23PJtG
eQY/8mMZ73a3XDtq5P+WP+OKyGhiGsm+/Phw8G1WXnHogI6Xkmmf9NTBR0vY
9asoxKAxlS55jDz5rpLV75T1j2PWafRhaNW5l+L5vafsh2VEOm11iFSNKWb5
R37ukSOVSsdlz89bz+qnZerH/dqTQVd+N9fosPlqtubC7ELbTPq4Td/pl3j+
xbsnua0T8KzsUbdR5krWf+yV+3a4KINnsw2la+TS/rvetX6NhddK4tnRsNuJ
G61ZdFTgb1PP6u+oEOh2VyeDlOyV5QulRFxN9aRv03Zm0YRenr9Xt7Lynutm
1XzLoKV1E07f6y7ihI+CjjupZ9BC+7MubkLWvsHCosvd02mTm023+jZWXoP3
HuGJLJp016iH7F02/vPtojK/p5FpaaeR/cTtdfSac/hXOs2Ytvi5zi/WvqVR
5ddKs+hymvmtJV1FXMy47GyHNVmkrjKkVKuRzZch/UzXT0kng0kBebFf2Hz7
pTe4wpfopdMig40sXWjwvltzcwYJ3VRM1rP5rtiw//FlvSxyuH3Acgarn9TD
1J2nhmdTnX7osTs/m7j++fZeIbcFNFTw5Gw9e14cnx8eWD8li67qXTzxjJXn
23l8k0BFQGZRMcc/iZq4kQ8cZDV2CWjm5BePjD6x/pCWa956KIvGvXj8vKxR
PD/GblJg/TM9Knt9X7a+C+42r1sfmEX2d9MOpLH1KmbVA6N5JpmU1i0pd/hL
8fsuf7v+sww6tXAup8bml7Dg4k+1qHSqm/NQ2TKL1T/x/aa9ycn08tic80fY
eqBl9K7e+3A6rS0LejGA9acg85RAOymVnBSGjRjvxda3uw6LBccSSblip0WH
bJZeaDXiWW4cZVwbkS19irV/1RWp0SfDqfbM3mXLnNn9Cz4P6eEfTF/suvmb
uLD+r771auNCLyqbvyar7gN7X/e2nW453ZMrs95+aKcTy19y+XGekwcFbD40
ZJIH483d59h996AhlnLSnzay8uMffUxutuUOrv65/t4idr3/Hr3JL+I4Y8fw
dNmBQs5sTr+VbaMSOHXr/hkO3YSc1Dd31eI3KVyLgrFsKifklFWH2d06k8CZ
jfy4aMUUIRfgnlesdjWBq0y/efH+fiFntbm4n8LqW1zVJXnjwnWsfM+Nyt4B
0dwyuSu3BO4s/fL4itGxN7lhd3qqm4xm9fvxoFjpujM3MrVPxZl+rH2VzyM7
j/XkZu4f3bJxF6uvppPKtmVbSDC7z+SOv4Sco/kFY4PNAVzwctPnKax/pGp8
166a7kHyahNStNn+SIrrf0R/1yVS9ctdOsSTld/BJ714jw8dUVtkNauNXf/1
Scwtr+Oca7nCzPzOLP/MEQ96zLLheg8SBGv9YOm2Dzu9GOrGXTLu3HWKE2vv
Qt+Bz15d54yax+1yDGLtHVFJaW9CuQ8PT5zu0YuN34UdE6S2X+J+nns/umdX
Vl6F1JkTej6c3vf9nx7OFHLCbw7dg8vjuLmDJ95eq8n64+pn/ZSeCdzGpMCc
h3pCrqZ1Yo/niYlcl6lSKgeusPS38w8nDQ7nVG2OpXLnWPrsaeaKFTHc4bTx
0bfOCDnP2lbL8yUx3Oby0x9s01l9/Y3qSo5e5zRM5Hdvuczqa9B9/UnPm9xm
u9QvJ3NYfxvrHbfzvcFdXNjnqbM92+9l52fvvBjO6RrEFC3fwOqbNDJjiJ4H
/X6sWzX5EGtPuv3lkg6+9L3/GoOwb6z8iZpeYY/dOG3Niz+Fnqx+ZmZjVkcE
cw82FIwtyWPpfmqZW1qucGczN0tLlzKuvz3823h3Tm3E7y8KHVj5MtVG3jN3
ccWPnU18ylh6R8tqs7VOXFHo9r3XpVj6m0Wtyif30rgnX5U7v2XzzcTxyc1A
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
cS2mE/GTU1+qsufnaKpmrGURNW80Kqln83dWm8nzmwuKye3ByWC5SWw86h8V
v8kpoOct4zulGrH72/ZU3d5YRB/lHX06MQ45HBVu+b2QzN2PBs8aJ+JcnwYs
SYkrII8zBbu/a7LnrWXHT+2fBWTuarHJg5VvsUBuweMuRfTt0NETR2ybOJmy
ZZM/P8umlFlmfVcpiJ+vHzZObD5NXeYyvJ88299oXqy1D7xFfb6Pn3V5iJCL
mTveQG55JI10j3qzdDBb3yp0w9TzblGSyqnf5iOFnOIq49FWoRH0sldsokpf
ln5MuLHHpkia2mi1+ghbzwJ+f1h0sTKKjGMDelvKsvVQOnVHJ69Q0ixzEB1o
+cQJW0T2FwNv0OCtPq4KHYSc8Mz+lj4dQqlv4J3jei8+cVaLvjSmUCDZ6fRe
lzSU1e/LtPClBaHsfbDJ4wxjQ9tv1tVnrpCURsWBTWx/aNX6bVbXrTEUeP9f
gxWjWPqyZ5aPFC5S/gX37d/6iNfjvINqOudJc/m/8q392fqdJTtZbogPHb+Z
5f+FlSe1oFXwdHoIfe2dVpIxhX3PD1K8OfVxKMXutJU6pMHKj1A5efvdNRp1
7nAXTdY+w6BFDwzCTtM5s0XaA1j/GHbSer3utQ+5n5s23X8EW7+/GMnK77xC
YXc8OoeosvU5KfC9tudZ+hG+a9tQ9r4wNBr1a3yNMwXfqdDKY/s9QbFK/P1h
F6nyZXSXoq6MV4bJt904S9/0Z+9uUGP1XXRYsNHtIrXc0bBLFbcnROuO+RRH
GjEq+PooVh9Bo4/2U1Nf6hBPrend2fi8cVfy1wik5H/LOrxm4yOQHjG3U8dQ
Whc2apgcu7+U6uDb0otu0NbABVXV4vFapzKqaH0kJa24Eeb55hNnZhXzXXlP
OHnlDB33kc0Px5bYu1saYshlSuaV6Z1Z/6S5CeXY/ljnyLfFG2TY+3qDzKQR
vyKpl76hlT5jrXUtI2pa2Pjr7ddcyPa3gv4huhO2RNO2V4bWV7oIuZaK/Zej
+8dQw+psgy0qjGU+Plo8MYY+9o0ZXbZfyD3r0vWY9qo46n9qfPJ0JfH/W3sn
9nVMp/mHsxz8fgu5OgfrWJu2DJo/ePmIWPb9q2Zg/XzC6nRaeFFJLoftHw9u
sDjZ42Q6qTQtMRXvB+oe7/jpqyKgrFXjH72dzZ6HXSnWh78SjWqVLypm7Plb
WsXPTUC23skz6xY0cb6RlxSfrc4maWHw5jdsv2fi1tjvaXIWcc/25bfMYPWR
e2mjl0a0bm6N2z3tJq7/QKdZN+oz6RUXppAtTtcdMXyFeiZ/vzDXc1+nVqdR
oPYdt7Xs+0LNV97hjUoqXd5psvQ9+56WGvtLfZdTKvkNVjgfye6nWJtTm9cj
g7y1c3qtNGH7sb7nbzl6ZdHz8pijTuJ0le0DldTS6UqHDF9bVr6USZ7Z0ZWZ
JOp06yanw/YvNg07jq/MoPB1G87emtPEHUwWLeneLZWCu2ooOrP8NXsvXRl1
LIVcZ/2UDZgl/v/G9qpat1TKvhrQx4b118E0z3HaCqnkqfymtvc2Nj/ePDkw
2SuBplqeaVQtFXJFkbPM34anUWfTk2qRL9jzMWOowss9aeQkFWxm2YGVv7Xf
4jT/NArWpeWP2X4txWaUe9KAdPLvk2sR2Ielf2odYKiURTdp+dOLI9n33/7K
34WnM6n2/XeHmins+/GOIH/glwwa2tnywQVzNj4ZTty+9Zl0vat5jybxfvqa
9x75+RlUV3Zurxerv5pRz6erVDIp7oXtzZhhTVx3k+p7KiMElHej6N6n3k3c
ZLMn8i90BGQy/dCiD+z7wMrrxz/xrhk00cq830uWLnNqnkzDCiLXqjZpvWVN
3LihuV+S72ZT8M4M64KFTdzrNc7es35k04EjOcXvGSsN3PWhy1ABjTYyU/u2
hO2nevr3nHJTQJty3shNW9vE6R4ap1fWi8hnoMeWDlvZfv/cE+NlbllUfWuC
x691jDUG5uiEZVGfj5FTalh7TE99kG62FlDc0Zw1x/WaOJdjBx6llQsoetLE
fyPY98K+3pu0VXMF9EpFTaaBjWed+v294cUCau0VnP/YuImb9T03x8VQQM7j
8rrNZukWMusU7s0nip7W29mU8bgfW3bVnxfQ04u7OjeMb+L09S38jihm0+17
ayqWsu+buyXvnZa6ZlPjR4MObeLfa72TzkTNEZBl473RvlObuDy3LSn/nBNQ
vadraxWb3zH9VwWWKhPVntjiP2ii+Pe2eQud4onCR9d3usLmq3Jr/KK5NzJJ
Nc3tVzn7XlHTn7pb+3c6FZwKjptuxfo7ZNHBFItUKtW6aXx4MxvP3U3vXgQl
ktS6gYvsNjKem2bpwaWQrMWpprMGbP54PVru+Tqefgza3PCWfa94nhiS5/Aj
lkqsxuw1Z/PdrIv+uT3b4ulc4o70fux7wcq00l69IppuZtcsnraErV/NQZdb
Lp0nv/NFaztYsPX0+bhG31PXaOruQYpfGBs6Z9XZRV+ll1qDquavZRxsc5Kz
vUpRy1X3ForTm7+YyP57gYxL05XPdWT7h73bhEdMM0n6zr3HvhYizspaf1qJ
nIDsi6vGW7L9hZStcPlGTQFpHWgZEHJfxB3UqF+fGp5H1+R1mys2MW7Y0qro
LKCAyLWeQ56x/cGi3cmN93Pp8++7uzrViDjPKcP/te5SQNqy1d/PnmD78Zqp
Wqv7sf3udfXfw9h+xayPYnDBqVzyUNgyYzbbf7m2FZtv+JFLJgGLO0YfZ/ux
bUsKT77NI48PP66eZvsvgdfetIAL+TRUJ17vK9vPOaY+GL3hZT6p+W3rdHAm
2w/cu/vj+6A8MhS5leeMEXE1G57aP12bT7sn6C2LVxdxqy10u51pzqNqwdWF
Jzi2nzrRW3e2ex49G6BgsJPtb3YE/7i9d0keya/3tjvL9vPCubKXQ2Xy6WiC
3qwT4uuzenjsWJJLOo0fTp9l5XvW6sUMWJVDN3xWm73VEHEBMx/WWinnUE+3
9QsVWf6RjtIuJ3vnUMjpJG0Dtt95trwtdvFSAXV84n/rghbb/83odC34mICu
Hbs+w4alm92yvu4Un002Vq/cO0xj3wcP9x6W6ZNDt71WbuxryPaDbTrvPKKz
6ax19fmJM1j7fZ9ZyOzNpbpdyvEH2P0VDb2PRwzMobIhfYeFjGL1W9DzZP00
AXn+atMbI2bHvMKnT9j9u+lMO8f2+xd7Rpv+ephN73fPV+vI2rt6hd8bXXY/
4ScjxXyWLjgqaLr7JZumRysPOq7D9mOPm0eV3BBQmav5G0u239Pt7XyiVVdA
BdsvrbjXj5XfsuLHq/nse+3rihaZALY+9nwtPdkkiw5917R+OoGtvw1df67/
dZ3WDCrzHvaNvR9lvwcvSkqhaYrT5Y+z/UeAcXmBRm0EGWjYb1Vm+5uA5R+q
Dv0TQ8cTZLcMYettwPSzKzsvzqLjp04tqvRq4io3aN9/ps6+t9LlBTN0Wf2t
RP+sHVJAM42jR1uai7jO1QfqzA7n0SS7MZGLN7D51O3jvnHn8uj71RglTbYf
dnnfqzXtcx5Fbh8+s/tUNv6j62TqnPKpZYSpeRUbj8HVUrPWHM8j+FhSkuB9
LEnAxwLDpwLDxwLDx/pbeX9eDx8LzPtXf2H4WGD4WGD4WGD4WGD4WGD4WGD4
WGDex5IEfCwwfCkwfCww/BIwfCww72NJgvdT/lI+fCQwfKy/pf/J8LH+lg5f
CgwfCwx/6m/1hY8Fho/1t/L/LA++zN/4z/rCxwLDxwLzPpYk4GOB4WOB4WPx
5Ut8LDB8LDB8LDB8LDB8LDB8LDB8LDB8LDB8LDB8LDB8LDB8LDB8LDB8LDDv
Y0kCPhYYPhYYPhYYPhYYPhYYPhb4z/nyJ//5vMDH+lv+P+fH/6n8P/PDr/q/
ZfhYYPhYYPhYYPhVYPhYYPhYf8sPHwsMHwsMHwsMHwsMHwsMHwsMHwsMf+r/
F8PHAsPHAsPHAsPHAsPHAsPHAsPHAsPHAsPHAsPHAsPHAsPHAsPHAsPHAvM+
liTgY4HhY4HhY4HhY4HhY4HhY4HhY4HhY4HhY4HhY/H1k/hYfPskPhYYPhYY
PhYYPhaY97EkAR8LDB8LDB+LZ4mPBYaPBeZ9LEnAxwLDxwLzPpYk4GOB4WOB
4WOB4WOB4WOB4WOB4WOBeR9LEvCxwLyPJQnex5IEfCwwfCww72NJAj4WGD4W
GD4WGD4WmPexJAEfCwwfCwwfCwwfi6+/xMcCw8cCw8cCw8fi0yU+Fhg+Fpj3
sSQBHwsMHwsMHwsMHwsMHwvM+1iSgI8F5n0sSfA+liR4H0sSvI8lCd7HkgTv
Y0mC97EkwftYkuB9LEnAxwLzPpYk4GOB4WOB4WOB4WOB4WOB4WOB4WOB4WOB
4WOB4WOB4WOBeR9LEvCxwPCxwLyPJQn4WHw6fANJwMcCw8cCw8cCw8cCw8cC
wscCw8cCw8cC8z6WJOBjgeFjgf/zsf5X8D6WJHgfSxLwscC8jyUJ3seSBHws
MO9jSYL3sSTB+1iS4H0sSfA+liR4H0sSvI8lCd7HkgTvY/3levhYfHslPhYY
PhafLvFjwLyPJQne15EE72NJAj4WX3/4WAiJjwWEjwWGjwWGjwWGj8WXL/Gx
wPCxwPCxwPCxwLyPhfrDx5IE72NJAj4W3x8SHwsMHwsMH4u/XuJjgeFjgeFj
geFjgeFjgeFjgeFjgeFjgeFjgeFj8e35Y3x5H+sv6X8yfCwwfCwwfCzwn/MN
/tXfGD7W3+4PHwsMHwsMHwsMHwsMH4tvj8TH4tvzx/oIHwsMHwsMHwsMHwsM
HwvM+1iS4H0sScDHAsPHAvM+liR4H0sS8LHA8LHAvI8lCd7HkgTvY0kCPhYY
PhYYPhYYPhYYPhYYPhaY97EkAR8LDB8LzPtYkoCPBYaPBYaPBYaPBYaPBeZ9
LEnAxwLDxwLDxwLDxwLDxwLzPpYk4GOB4WOB4WOB4WOB4WPx9Zf4WGDex5IE
fCwwfCwwfCwwfCwwfCwwfCww72NJAj4WGD4WGD4WGD4WGD4WGD4WGD4WGD4W
GD4WGD4WGD4WGD4WGD4WGD4WGD4WGD4WGD4WmPexJAEfCwwfCwwfCwwfCwwf
CwwfCwwfi+8/iY8Fho8Fho8Fho/Fp0t8LDB8LDB8LDB8LDB8LDB8LDB8LDB8
LDB8LL4+Eh8LDB8LDB8LzPtYkoCPBYaPBYbvBIaPBYaPBYaPBYaPBYaPBYaP
BYaPBYZfBYaP9bf6/ZkfPhYYPhYYPhYYPhYYPhaY97H+0p/wscDwscDwscDw
scDwscDwscDwscDwscDwscDwscDwscDwscDwscDwscDwscDwscDwscDwscDw
scDwscDwscDwscDwscDwscDwscDwsfh0iY8Fho8Fho8Fho8Fho8Fho8Fho8F
ho/FlyfxscC8jyUJ+Fhg+Fhg+Fhg+Fhg+Fhg+FhA+Fhg3sfC/SU+Fpj3sSQB
HwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwvM+1iSgI8Fho8Fho8F5n0s
ScDHAsPHAsPHAsPHAsPHAsPHAsPHAsPHAsPHAsPHAsPHAsPH4lniY4HhY4Hh
Y4HhR4HhY4HhY4HhY4HhY/H9KfGxwPCx/nY/+Fhg3seSBHwsMHwsMHwsMO9j
SQI+Fhg+Fhg+Fhg+Fhg+Fhg+Fhg+Fhg+Fhg+Fn8/iY8Fho8Fho8Fho8Fho8F
ho8Fho8Fho8Fho8Fho8Fho/F94fEx+LrL/GxwPCxwPCxwPCxwPCxwPCxwPCx
+PpLfCwwfCwwfCwwfCwwfCz+eomPBYaPBYaPBeZ9LEnAxwLDxwLzPpYk4GOB
4WOB4WOB4WOB4WMB4WOB4WOB4WOB4WOB4WOB4WOB4WOB4WOB4WOB4WOB4WOB
eR9LEvCxwPCxwPCxwPCxwPCxwPCxwPCxwPCx+HSJjwWGjwWGjwWGjwWGjwWG
jwWGjwWGjwWGjwWGjwWGjwWGjwWGjwWGj8X3p8THAsPHAsPHAsPHAsPHAsPH
AsPH4u8v8bHA8LHA8LHA8LH48iU+Fhg+Fhg+Fhg+Fhg+Fhg+Fhg+Fhg+Fs8S
HwsMHwsMHwsMHwsMHwsMHwsMHwvcfj5W+/lY7edjtZ+P1X4+Vvv5WO3nY7Wf
j9V+Plb7+Vjt52O1n4/Vfj5W+/lY7edjtZ+P1X4+Vvv5WO3nYwnbz8dqPx+r
/Xys9vOx2s/Haj8fq/18rPbzsdrPx2o/H6v9fKz287Haz8dqPx+r/Xys9vOx
2s/Haj8f6//J+Vj/A8NdQQo=
    "], {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{602, 1}], LineBox[{603, 2}], LineBox[{604, 3}], 
       LineBox[{605, 4}], LineBox[{606, 5}], LineBox[{607, 6}], 
       LineBox[{608, 7}], LineBox[{609, 8}], LineBox[{610, 9}], 
       LineBox[{611, 10}], LineBox[{612, 11}], LineBox[{613, 12}], 
       LineBox[{617, 16}], LineBox[{618, 17}], LineBox[{619, 18}], 
       LineBox[{620, 19}], LineBox[{621, 20}], LineBox[{622, 21}], 
       LineBox[{623, 22}], LineBox[{624, 23}], LineBox[{625, 24}], 
       LineBox[{626, 25}], LineBox[{627, 26}], LineBox[{628, 27}], 
       LineBox[{629, 28}], LineBox[{630, 29}], LineBox[{631, 30}], 
       LineBox[{632, 31}], LineBox[{633, 32}], LineBox[{634, 33}], 
       LineBox[{635, 34}], LineBox[{636, 35}], LineBox[{637, 36}], 
       LineBox[{638, 37}], LineBox[{639, 38}], LineBox[{640, 39}], 
       LineBox[{641, 40}], LineBox[{642, 41}], LineBox[{643, 42}], 
       LineBox[{644, 43}], LineBox[{645, 44}], LineBox[{646, 45}], 
       LineBox[{647, 46}], LineBox[{648, 47}], LineBox[{649, 48}], 
       LineBox[{650, 49}], LineBox[{651, 50}], LineBox[{652, 51}], 
       LineBox[{653, 52}], LineBox[{654, 53}], LineBox[{655, 54}], 
       LineBox[{656, 55}], LineBox[{657, 56}], LineBox[{658, 57}], 
       LineBox[{659, 58}], LineBox[{660, 59}], LineBox[{661, 60}], 
       LineBox[{662, 61}], LineBox[{663, 62}], LineBox[{664, 63}], 
       LineBox[{665, 64}], LineBox[{666, 65}], LineBox[{667, 66}], 
       LineBox[{668, 67}], LineBox[{669, 68}], LineBox[{670, 69}], 
       LineBox[{671, 70}], LineBox[{672, 71}], LineBox[{673, 72}], 
       LineBox[{674, 73}], LineBox[{675, 74}], LineBox[{676, 75}], 
       LineBox[{677, 76}], LineBox[{678, 77}], LineBox[{679, 78}], 
       LineBox[{680, 79}], LineBox[{681, 80}], LineBox[{682, 81}], 
       LineBox[{683, 82}], LineBox[{684, 83}], LineBox[{685, 84}], 
       LineBox[{686, 85}], LineBox[{687, 86}], LineBox[{688, 87}], 
       LineBox[{689, 88}], LineBox[{690, 89}], LineBox[{691, 90}], 
       LineBox[{692, 91}], LineBox[{693, 92}], LineBox[{694, 93}], 
       LineBox[{695, 94}], LineBox[{696, 95}], LineBox[{697, 96}], 
       LineBox[{698, 97}], LineBox[{699, 98}], LineBox[{700, 99}], 
       LineBox[{701, 100}], LineBox[{702, 101}], LineBox[{703, 102}], 
       LineBox[{704, 103}], LineBox[{705, 104}], LineBox[{706, 105}], 
       LineBox[{707, 106}], LineBox[{708, 107}], LineBox[{709, 108}], 
       LineBox[{710, 109}], LineBox[{711, 110}], LineBox[{712, 111}], 
       LineBox[{713, 112}], LineBox[{714, 113}], LineBox[{715, 114}], 
       LineBox[{716, 115}], LineBox[{717, 116}], LineBox[{718, 117}], 
       LineBox[{719, 118}], LineBox[{720, 119}], LineBox[{721, 120}], 
       LineBox[{722, 121}], LineBox[{723, 122}], LineBox[{724, 123}], 
       LineBox[{725, 124}], LineBox[{726, 125}], LineBox[{727, 126}], 
       LineBox[{728, 127}], LineBox[{729, 128}], LineBox[{730, 129}], 
       LineBox[{731, 130}], LineBox[{732, 131}], LineBox[{733, 132}], 
       LineBox[{734, 133}], LineBox[{735, 134}], LineBox[{736, 135}], 
       LineBox[{737, 136}], LineBox[{738, 137}], LineBox[{740, 139}], 
       LineBox[{741, 140}], LineBox[{753, 152}], LineBox[{755, 154}], 
       LineBox[{756, 155}], LineBox[{757, 156}], LineBox[{775, 174}], 
       LineBox[{776, 175}], LineBox[{783, 182}], LineBox[{784, 183}], 
       LineBox[{785, 184}], LineBox[{786, 185}], LineBox[{787, 186}], 
       LineBox[{788, 187}], LineBox[{826, 225}], LineBox[{835, 234}], 
       LineBox[{836, 235}], LineBox[{837, 236}], LineBox[{838, 237}], 
       LineBox[{839, 238}], LineBox[{840, 239}], LineBox[{841, 240}], 
       LineBox[{842, 241}], LineBox[{843, 242}], LineBox[{844, 243}], 
       LineBox[{845, 244}], LineBox[{846, 245}], LineBox[{847, 246}], 
       LineBox[{848, 247}], LineBox[{849, 248}], LineBox[{850, 249}], 
       LineBox[{851, 250}], LineBox[{852, 251}], LineBox[{853, 252}], 
       LineBox[{854, 253}], LineBox[{855, 254}], LineBox[{856, 255}], 
       LineBox[{857, 256}], LineBox[{858, 257}], LineBox[{859, 258}], 
       LineBox[{860, 259}], LineBox[{861, 260}], LineBox[{862, 261}], 
       LineBox[{863, 262}], LineBox[{864, 263}], LineBox[{865, 264}], 
       LineBox[{866, 265}], LineBox[{867, 266}], LineBox[{868, 267}], 
       LineBox[{869, 268}], LineBox[{870, 269}], LineBox[{871, 270}], 
       LineBox[{872, 271}], LineBox[{873, 272}], LineBox[{874, 273}], 
       LineBox[{875, 274}], LineBox[{876, 275}], LineBox[{877, 276}], 
       LineBox[{878, 277}], LineBox[{879, 278}], LineBox[{880, 279}], 
       LineBox[{881, 280}], LineBox[{882, 281}], LineBox[{883, 282}], 
       LineBox[{884, 283}], LineBox[{885, 284}], LineBox[{886, 285}], 
       LineBox[{887, 286}], LineBox[{888, 287}], LineBox[{889, 288}], 
       LineBox[{890, 289}], LineBox[{891, 290}], LineBox[{892, 291}], 
       LineBox[{893, 292}], LineBox[{894, 293}], LineBox[{895, 294}], 
       LineBox[{896, 295}], LineBox[{897, 296}], LineBox[{898, 297}], 
       LineBox[{899, 298}], LineBox[{904, 303}], LineBox[{905, 304}], 
       LineBox[{906, 305}], LineBox[{907, 306}], LineBox[{909, 308}], 
       LineBox[{910, 309}], LineBox[{911, 310}], LineBox[{912, 311}], 
       LineBox[{913, 312}], LineBox[{915, 314}], LineBox[{916, 315}], 
       LineBox[{917, 316}], LineBox[{918, 317}], LineBox[{920, 319}], 
       LineBox[{921, 320}], LineBox[{922, 321}], LineBox[{923, 322}], 
       LineBox[{924, 323}], LineBox[{925, 324}], LineBox[{926, 325}], 
       LineBox[{927, 326}], LineBox[{928, 327}], LineBox[{929, 328}], 
       LineBox[{930, 329}], LineBox[{931, 330}], LineBox[{932, 331}], 
       LineBox[{933, 332}], LineBox[{934, 333}], LineBox[{935, 334}], 
       LineBox[{936, 335}], LineBox[{937, 336}], LineBox[{938, 337}], 
       LineBox[{939, 338}], LineBox[{940, 339}], LineBox[{941, 340}], 
       LineBox[{942, 341}], LineBox[{943, 342}], LineBox[{944, 343}], 
       LineBox[{945, 344}], LineBox[{946, 345}], LineBox[{947, 346}], 
       LineBox[{948, 347}], LineBox[{949, 348}], LineBox[{950, 349}], 
       LineBox[{951, 350}], LineBox[{952, 351}], LineBox[{953, 352}], 
       LineBox[{954, 353}], LineBox[{955, 354}], LineBox[{956, 355}], 
       LineBox[{957, 356}], LineBox[{958, 357}], LineBox[{959, 358}], 
       LineBox[{960, 359}], LineBox[{961, 360}], LineBox[{962, 361}], 
       LineBox[{963, 362}], LineBox[{964, 363}], LineBox[{965, 364}], 
       LineBox[{966, 365}], LineBox[{967, 366}], LineBox[{968, 367}], 
       LineBox[{969, 368}], LineBox[{970, 369}], LineBox[{971, 370}], 
       LineBox[{972, 371}], LineBox[{973, 372}], LineBox[{974, 373}], 
       LineBox[{975, 374}], LineBox[{976, 375}], LineBox[{977, 376}], 
       LineBox[{978, 377}], LineBox[{979, 378}], LineBox[{980, 379}], 
       LineBox[{981, 380}], LineBox[{982, 381}], LineBox[{983, 382}], 
       LineBox[{984, 383}], LineBox[{985, 384}], LineBox[{986, 385}], 
       LineBox[{987, 386}], LineBox[{988, 387}], LineBox[{989, 388}], 
       LineBox[{990, 389}], LineBox[{991, 390}], LineBox[{992, 391}], 
       LineBox[{993, 392}], LineBox[{994, 393}], LineBox[{995, 394}], 
       LineBox[{996, 395}], LineBox[{997, 396}], LineBox[{998, 397}], 
       LineBox[{999, 398}], LineBox[{1000, 399}], LineBox[{1001, 400}], 
       LineBox[{1002, 401}], LineBox[{1003, 402}], LineBox[{1004, 403}], 
       LineBox[{1005, 404}], LineBox[{1006, 405}], LineBox[{1007, 406}], 
       LineBox[{1008, 407}], LineBox[{1009, 408}], LineBox[{1010, 409}], 
       LineBox[{1011, 410}], LineBox[{1012, 411}], LineBox[{1013, 412}], 
       LineBox[{1014, 413}], LineBox[{1015, 414}], LineBox[{1016, 415}], 
       LineBox[{1017, 416}], LineBox[{1018, 417}], LineBox[{1019, 418}], 
       LineBox[{1020, 419}], LineBox[{1021, 420}], LineBox[{1022, 421}], 
       LineBox[{1023, 422}], LineBox[{1024, 423}], LineBox[{1025, 424}], 
       LineBox[{1026, 425}], LineBox[{1027, 426}], LineBox[{1028, 427}], 
       LineBox[{1029, 428}], LineBox[{1030, 429}], LineBox[{1031, 430}], 
       LineBox[{1032, 431}], LineBox[{1033, 432}], LineBox[{1034, 433}], 
       LineBox[{1035, 434}], LineBox[{1036, 435}], LineBox[{1037, 436}], 
       LineBox[{1038, 437}], LineBox[{1039, 438}], LineBox[{1040, 439}], 
       LineBox[{1041, 440}], LineBox[{1042, 441}], LineBox[{1043, 442}], 
       LineBox[{1044, 443}], LineBox[{1045, 444}], LineBox[{1046, 445}], 
       LineBox[{1047, 446}], LineBox[{1048, 447}], LineBox[{1049, 448}], 
       LineBox[{1050, 449}], LineBox[{1051, 450}], LineBox[{1052, 451}], 
       LineBox[{1053, 452}], LineBox[{1054, 453}], LineBox[{1055, 454}], 
       LineBox[{1056, 455}], LineBox[{1057, 456}], LineBox[{1058, 457}], 
       LineBox[{1059, 458}], LineBox[{1060, 459}], LineBox[{1061, 460}], 
       LineBox[{1062, 461}], LineBox[{1063, 462}], LineBox[{1064, 463}], 
       LineBox[{1065, 464}], LineBox[{1066, 465}], LineBox[{1067, 466}], 
       LineBox[{1068, 467}], LineBox[{1069, 468}], LineBox[{1070, 469}], 
       LineBox[{1071, 470}], LineBox[{1072, 471}], LineBox[{1073, 472}], 
       LineBox[{1074, 473}], LineBox[{1075, 474}], LineBox[{1076, 475}], 
       LineBox[{1077, 476}], LineBox[{1078, 477}], LineBox[{1079, 478}], 
       LineBox[{1080, 479}], LineBox[{1081, 480}], LineBox[{1082, 481}], 
       LineBox[{1083, 482}], LineBox[{1084, 483}], LineBox[{1085, 484}], 
       LineBox[{1086, 485}], LineBox[{1087, 486}], LineBox[{1088, 487}], 
       LineBox[{1089, 488}], LineBox[{1090, 489}], LineBox[{1091, 490}], 
       LineBox[{1092, 491}], LineBox[{1093, 492}], LineBox[{1094, 493}], 
       LineBox[{1095, 494}], LineBox[{1096, 495}], LineBox[{1097, 496}], 
       LineBox[{1098, 497}], LineBox[{1099, 498}], LineBox[{1100, 499}], 
       LineBox[{1101, 500}], LineBox[{1102, 501}], LineBox[{1103, 502}], 
       LineBox[{1104, 503}], LineBox[{1105, 504}], LineBox[{1106, 505}], 
       LineBox[{1107, 506}], LineBox[{1108, 507}], LineBox[{1109, 508}], 
       LineBox[{1110, 509}], LineBox[{1111, 510}], LineBox[{1112, 511}], 
       LineBox[{1113, 512}], LineBox[{1114, 513}], LineBox[{1115, 514}], 
       LineBox[{1116, 515}], LineBox[{1117, 516}], LineBox[{1118, 517}], 
       LineBox[{1119, 518}], LineBox[{1120, 519}], LineBox[{1121, 520}], 
       LineBox[{1122, 521}], LineBox[{1123, 522}], LineBox[{1124, 523}], 
       LineBox[{1125, 524}], LineBox[{1126, 525}], LineBox[{1127, 526}], 
       LineBox[{1128, 527}], LineBox[{1129, 528}], LineBox[{1130, 529}], 
       LineBox[{1131, 530}], LineBox[{1132, 531}], LineBox[{1133, 532}], 
       LineBox[{1134, 533}], LineBox[{1135, 534}], LineBox[{1136, 535}], 
       LineBox[{1137, 536}], LineBox[{1138, 537}], LineBox[{1139, 538}], 
       LineBox[{1140, 539}], LineBox[{1141, 540}], LineBox[{1142, 541}], 
       LineBox[{1143, 542}], LineBox[{1144, 543}], LineBox[{1145, 544}], 
       LineBox[{1146, 545}], LineBox[{1147, 546}], LineBox[{1148, 547}], 
       LineBox[{1149, 548}], LineBox[{1150, 549}], LineBox[{1151, 550}], 
       LineBox[{1152, 551}], LineBox[{1153, 552}], LineBox[{1154, 553}], 
       LineBox[{1155, 554}], LineBox[{1156, 555}], LineBox[{1157, 556}], 
       LineBox[{1158, 557}], LineBox[{1159, 558}], LineBox[{1160, 559}], 
       LineBox[{1161, 560}], LineBox[{1162, 561}], LineBox[{1163, 562}], 
       LineBox[{1164, 563}], LineBox[{1165, 564}], LineBox[{1166, 565}], 
       LineBox[{1167, 566}], LineBox[{1168, 567}], LineBox[{1169, 568}], 
       LineBox[{1170, 569}], LineBox[{1171, 570}], LineBox[{1172, 571}], 
       LineBox[{1173, 572}], LineBox[{1174, 573}], LineBox[{1175, 574}], 
       LineBox[{1176, 575}], LineBox[{1177, 576}], LineBox[{1178, 577}], 
       LineBox[{1179, 578}], LineBox[{1180, 579}], LineBox[{1181, 580}], 
       LineBox[{1182, 581}], LineBox[{1183, 582}], LineBox[{1184, 583}], 
       LineBox[{1185, 584}], LineBox[{1186, 585}], LineBox[{1187, 586}], 
       LineBox[{1188, 587}], LineBox[{1189, 588}], LineBox[{1190, 589}], 
       LineBox[{1191, 590}], LineBox[{1192, 591}], LineBox[{1193, 592}], 
       LineBox[{1194, 593}], LineBox[{1195, 594}], LineBox[{1196, 595}], 
       LineBox[{1197, 596}], LineBox[{1198, 597}], LineBox[{1199, 598}], 
       LineBox[{1200, 599}], LineBox[{1201, 600}], LineBox[{1202, 601}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{614, 13}], LineBox[{615, 14}], LineBox[{616, 15}], 
       LineBox[{739, 138}], LineBox[{742, 141}], LineBox[{743, 142}], 
       LineBox[{744, 143}], LineBox[{745, 144}], LineBox[{746, 145}], 
       LineBox[{747, 146}], LineBox[{748, 147}], LineBox[{749, 148}], 
       LineBox[{750, 149}], LineBox[{751, 150}], LineBox[{752, 151}], 
       LineBox[{754, 153}], LineBox[{758, 157}], LineBox[{759, 158}], 
       LineBox[{760, 159}], LineBox[{761, 160}], LineBox[{762, 161}], 
       LineBox[{763, 162}], LineBox[{764, 163}], LineBox[{765, 164}], 
       LineBox[{766, 165}], LineBox[{767, 166}], LineBox[{768, 167}], 
       LineBox[{769, 168}], LineBox[{770, 169}], LineBox[{771, 170}], 
       LineBox[{772, 171}], LineBox[{773, 172}], LineBox[{774, 173}], 
       LineBox[{777, 176}], LineBox[{778, 177}], LineBox[{779, 178}], 
       LineBox[{780, 179}], LineBox[{781, 180}], LineBox[{782, 181}], 
       LineBox[{789, 188}], LineBox[{790, 189}], LineBox[{791, 190}], 
       LineBox[{792, 191}], LineBox[{793, 192}], LineBox[{794, 193}], 
       LineBox[{795, 194}], LineBox[{796, 195}], LineBox[{797, 196}], 
       LineBox[{798, 197}], LineBox[{799, 198}], LineBox[{800, 199}], 
       LineBox[{801, 200}], LineBox[{802, 201}], LineBox[{803, 202}], 
       LineBox[{804, 203}], LineBox[{805, 204}], LineBox[{806, 205}], 
       LineBox[{807, 206}], LineBox[{808, 207}], LineBox[{809, 208}], 
       LineBox[{810, 209}], LineBox[{811, 210}], LineBox[{812, 211}], 
       LineBox[{813, 212}], LineBox[{814, 213}], LineBox[{815, 214}], 
       LineBox[{816, 215}], LineBox[{817, 216}], LineBox[{818, 217}], 
       LineBox[{819, 218}], LineBox[{820, 219}], LineBox[{821, 220}], 
       LineBox[{822, 221}], LineBox[{823, 222}], LineBox[{824, 223}], 
       LineBox[{825, 224}], LineBox[{827, 226}], LineBox[{828, 227}], 
       LineBox[{829, 228}], LineBox[{830, 229}], LineBox[{831, 230}], 
       LineBox[{832, 231}], LineBox[{833, 232}], LineBox[{834, 233}], 
       LineBox[{900, 299}], LineBox[{901, 300}], LineBox[{902, 301}], 
       LineBox[{903, 302}], LineBox[{908, 307}], LineBox[{914, 313}], 
       LineBox[{919, 318}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.008333333333333333], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwN02PDHgQAAMBnfMdmW81sttmabTfbtu2Gmm3btm3bVvfhfsIladi2Yptg
gUCgRvBAYF3IQGA9G9jIJjazha1sYzs72MkudrOHvexjPwc4yCEOc4SjHOM4
JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1uc4e73OM+D3jIIx7zhKc84zkv
eMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJLwKhAoFgBCcEIQlFaIIIQ1jCEZ4I
ROQ3IhGZKEQlGtGJQUxiEZs4xCUe8UlAQhKRmCQkJRnJScHvpCQVqUlDWtKR
ngxkJBOZycIfZCUb2clBTnKRmzzkJR/5KUBBClGYIhSlGMUpQUlKUZoy/ElZ
/qIc5alARSpRmSpUpRrVqUFNalGbOtSlHvVpQEMa0ZgmNKUZf9OcFrSkFa1p
Q1va0Z4OdKQTnelCV7rRnR70pBe96UNf+tGfAQxkEIMZwlCGMZwRjGQUoxnD
WMYxnglMZBKTmcJUpjGdf5jBTGYxm3/5jznMZR7zWcBCFrGYJSxlGctZwUpW
sZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgjHOUYxznBSU5x
mjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc85RnPecFLXvGa
N7zlHe/5wEc+8ZkvfOUb3/nBT34RCO0/wQlBSEIRmiDCEJZwhCcCEfmNSEQm
ClGJRnRiEJNYxCYOcYlHfBKQkEQkJglJSUZyUvA7KUlFatKQlnSkJwMZyURm
svAHWclGdnKQk1zkJg95yUd+ClCQQhSmCEUpRnFKUJJSlKYMf1KWvyhHeSpQ
kUpUpgpVqUZ1alCTWtSmDnWpR30a0JBGNKYJTWnG3zSnBS1pRWva0JZ2tKcD
HelEZ7rQlW50pwc96UVv+tCXfvRnAAMZxGCGMJRhDGcEIxnFaMYwlnGMZwIT
mcRkpjCVaUznH2Ywk1nM5l/+Yw5zmcd8FrCQRSxmCUtZxnJWsJJVrGYNa1nH
ejawkU1sZgtb2cZ2drCTXexmD3vZx34OcJBDHOYIRznGcU5wklOc5gxnOcd5
LnCRS1zmCle5xnVucJNb3OYOd7nHfR7wkEc85glPecZzXvCSV7zmDW95x3s+
8JFPfOYLX/nGd37wk18EgvwnOCEISShCE0QYwhKO8PwPe4pPLQ==
        "]]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.9930059172067901, 0},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"actual value - predicted value\"", TraditionalForm], None}, {
     FormBox["\"predicted value\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0.9958779919807366, 1.179690777513312}, {-0.21352949706118007`,
    0.21352949706118007`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6380392766116433`*^9, 3.638081050469385*^9, 3.638081407975213*^9, 
   3.6380816479504347`*^9, 3.6380867228639717`*^9, 3.6381016191701074`*^9, 
   3.6381077689675756`*^9, 3.6381244332009926`*^9, 3.6381245104211283`*^9, 
   3.638124612601308*^9, 3.638124694173851*^9, 3.6381247830472074`*^9, 
   3.6381248685509577`*^9, 3.6381249863623643`*^9, 3.6381250646277018`*^9, 
   3.6381252498780274`*^9, 3.638125566199783*^9, 3.638125700687619*^9, 
   3.6381257916981792`*^9, 3.638125902006973*^9, 3.6381259779479065`*^9, 
   3.638126071579271*^9, 3.6381261536042147`*^9, 3.638126312350094*^9, 
   3.6381264434027386`*^9, 3.6381265197180724`*^9, 3.638126626905861*^9, 
   3.6381266951247807`*^9, 3.6381267703325124`*^9, 3.6381268878319187`*^9, 
   3.6381269724152675`*^9, 3.638127072707844*^9, 3.6381272182248993`*^9, 
   3.638127342229517*^9, 3.638127481097761*^9, 3.638127604681178*^9, 
   3.638127661012877*^9, 3.6381277498394327`*^9, 3.6381279375545626`*^9, 
   3.6381280087686877`*^9, 3.6381280919012337`*^9, 3.638128173270977*^9, 
   3.6381282468251057`*^9, 3.6381283144044247`*^9, 3.63812839157776*^9, 
   3.638128464383088*^9, 3.638128550323639*^9, 3.6381286271537743`*^9, 
   3.638128706121113*^9, 3.6381287663684187`*^9, 3.638128842621352*^9, 
   3.638128990431612*^9, 3.6381290573245296`*^9, 3.638129140035875*^9, 
   3.6381292299388328`*^9, 3.638129321214593*^9, 3.63812940512714*^9, 
   3.638129477308467*^9, 3.638129774521189*^9, {3.6381298161888623`*^9, 
   3.638129818248066*^9}, 3.6381298991342077`*^9, 3.6381307537131186`*^9, 
   3.6381309528786683`*^9, 3.6381315922713895`*^9}]
}, Open  ]],

Cell["Testing of comparison", "Item",
 CellChangeTimes->{{3.6381016632245846`*^9, 3.6381016738170033`*^9}, {
  3.638125252873233*^9, 3.6381252551976366`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ComparisonPlot\>\"", "]"}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1: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
          "]]}, {}}}, {}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         GrayLevel[0.5], 
         Dashing[{Small, Small}], 
         Thickness[0.002]], 
        LineBox[CompressedData["
1:eJxNxXss1AEAB3DdbvO62ynslHO6MdIDE+3CTSMjm1dZ1GUoj3SiLY86XLez
1ZJauu1ONkly4prIpa6HnG7nys5pMxtd0tSxRh0XPThX/dF9f3989mEdLzmY
R7Kzs0v869/XxJWuJN5C1P8rXkfM9xDOtq6qc4pwCK+qXHUaj0dXTwjPYOaS
oNlahrtSRDssQqyjXo75KcFNFi29RYO3aYdzWWacveK8d5D51XZAo6DHPQl3
eSju7OPjVxQGm9mJL+aq0hgTmCwN+LJI/mbbNUrtww/F71Ws8YlsnHbvOe1o
HT5Grl2oe4a9I7bsl85i5dli705nE64snvbwwfRFfaaZjTktCbvaU7Cq30+p
ycdUOkP6UoCDWd1P4iW4u6FNwrmPfyUoNM5q3HzKtzd2EjMid8/QTDgnnpvX
a79omzz4qXXQC5eUXwqVh+Eeg9bBNxGndvNuOpzAyn7/Kg0fXwiP9TRdx54n
N6x3yLBwdDyE04+jZVTfyDGs68sscJvHj0JpBRmkJduluVmdOz3w6og2ajII
T8vE9eZYfFVZEWbMxBsFvxmFZdj8YGog/QpuYhj6vFtx20p44SElrhGxs+h6
vP1AcrvCiAOrh+Qv1rBBsNllqwXXCnmlIsLGGhonbh3fqk0fGbViasOsaYZk
tj3/0H6PkyNuVBxpLCIc3ydfHyF8V5k8JHbC3AFphhcFv9H5VwbT8Dn9+Q83
CPu9HY5ZJiwaK6E8dcHh7x43xWzCcwZHkoywZIqb7+CKlz5aA3WEb8+kioPc
cNLn1h/1hNeMy9zvhDvm4gYOu+M/dcN+VQ==
         "]]}}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0.9206794937375575, 0.9206794937375575}, 
     PlotRange -> {{0.9193125078216764, 1.1927096909978938`}, {
      0.9193125078216764, 1.1927096909978938`}}, DisplayFunction -> Identity, 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.9206794937375575, 0.9206794937375575}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"actual value\"", TraditionalForm], None}, {
        FormBox["\"predicted value\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0.9193125078216764, 1.1927096909978938`}, {
      0.9193125078216764, 1.1927096909978938`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"predictions\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"perfect prediction line\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[0.018000000000000002`]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[0.018000000000000002`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0.5]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAuIqc5NmJunXji6hf46IAembr19+BNHdNrl84kD63eqW
Tkkgzexw75wCkC7bdOS8MpBuU7v2SRtIPzvi9wdEb5n5mkMHSDdkqAmD6BN7
O+VA9L2vvzVA9J/8deYg2uV9kSOIVjA2iQTRPDsNGkC0YvSnCSCazTBkDoj2
X71kM4j+EZ24H0QXqa48CaIvvdt8F0Rzb7/xFkQ3n43i1QXSmkHbVEF0Qn2Z
DYjuaJkcB6ILnP+2gmiXXXwTQbRYTttGMH/jjd0gOoCJ7xiILnIyOQ+iT3mt
ug6iIyQLXoHoa9KpX0H02Z33/oHoKTNcBPSAtMa2aSYg2uvnWzsQ7Zgi4wWi
H5i1hYJon/05CSDaet/PDBBdxmLaB6LXLTgzF0SHa8zh0AeZkztZEUT3/68p
BNEAKO+vTQ==
  "]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Predictor sensitivity to the features variability", "Section",
 CellChangeTimes->{{3.63810598929885*^9, 3.638106000047269*^9}, {
   3.6381074905070868`*^9, 3.6381074935490923`*^9}, 3.6381303160559497`*^9}],

Cell["\<\
We look how the predictor reacts to the features input w.r.t. calibrated \
conditional distribution\
\>", "Text",
 CellChangeTimes->{{3.6381075019107065`*^9, 3.6381075502707915`*^9}, 
   3.6381303220307603`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pred", "[", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0.7", ",", "1.25"}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.4", ",", "0.7"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
     RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
     RowBox[{"FillingStyle", "\[Rule]", "LightYellow"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<1st CDS sensiitivtiy\>\"", ",", "13"}], "]"}]}]}], "]"}], 
   ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pred", "[", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "x", ",", "1.25"}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.6", ",", "0.8"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Magenta"}], ",", 
     RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
     RowBox[{"FillingStyle", "\[Rule]", "LightGray"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<2nd CDS sensiitivtiy\>\"", ",", "13"}], "]"}]}]}], "]"}], 
   ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pred", "[", 
      RowBox[{"{", 
       RowBox[{"0.6", ",", "0.7", ",", "x"}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1.1", ",", "1.3"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", 
     RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
     RowBox[{"FillingStyle", "\[Rule]", "LightBrown"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<3rd CDS sensiitivtiy\>\"", ",", "13"}], "]"}]}]}], 
    "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.636746157340024*^9, 3.6367461873177385`*^9}, {
   3.6367462245278673`*^9, 3.6367464275754805`*^9}, {3.636746462750492*^9, 
   3.636746495131345*^9}, {3.6367466452889333`*^9, 3.6367466587067003`*^9}, {
   3.6367468104763813`*^9, 3.6367468677866592`*^9}, {3.63682010923624*^9, 
   3.636820112122245*^9}, {3.636822858769023*^9, 3.6368228829646654`*^9}, 
   3.636826735880103*^9, {3.6368339297972264`*^9, 3.6368340465634317`*^9}, {
   3.6368341987728987`*^9, 3.6368342469613833`*^9}, {3.638107660172985*^9, 
   3.6381076623881884`*^9}, {3.6381077791075935`*^9, 3.638107780995197*^9}, {
   3.6381078512265205`*^9, 3.6381078608361373`*^9}, {3.6381079100552235`*^9, 
   3.6381079939521713`*^9}, {3.638108315137536*^9, 3.638108359145213*^9}, {
   3.638108409408501*^9, 3.63810842017252*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxNnHk4lf32xpGhwRgZishQGStKxpYhhVQqRSpDE5kzREJCksxN5kRkSkSp
zIUmCRky7gEVae8dktnvOX/83rXPP+d6rve9zqn9fNe67/uz1vfZcNr98Dk2
FhaWcxwsLP/775xwpYykpG5Y7uNS+bqHBveKnyoKzeLz5ljQLDzd89+zzgE/
0tF6fO672SK8Rrb3v+f1/jta/tzqhVFrd7M2Cg2opobS5LFeEFs35CLykwbG
Laemfh3tgw4fO1mTPzTQart/gqeqD74maO678pcGRWX+x/Uk+qGsSleDjfjn
9fucuuOu94NCp/FiLAcdTrxlGx//3g+Wvu8zV6ynw9Xy1ylOewaga3zg2DlB
OhjZXX239GQAwDujZ4CLDtEjY7dyeElwYDiuG+ZocGmTQ5uTLwnuPK2b8b9F
gzEKS/7uARJkOMf82JRKg4vVG3hEJckQwJXa1tFCA93zJuHiR8hwUWXb3sAR
GpgGNXzKCyVDyw654kMCdMhl7G0zekkGL2rr3gY9OphtsH449osMEhdrL6po
0WHbm1odcXEKPHioIyivTAeHKuUka3MKpM8fjJMMp8PAZnrdhmsUWLjVLTNR
QIeUw3qlE8UUyKnv+LWinA55nffPtQ9RIDTyxNOoYjpMfzQc0l1DhcKierXt
X+iQKDYl88KECgpqa0mNAgwI2qihpBlIBW7XA5eLlRmQndXMYvSECkM2n8r8
AhkgccX5ni2FeF7nFMpWxoDONyen2VYPwlv2PxNT9QzoeN8vXaI/CK/F2RfX
NTFATv4cr5vPINhWDYja/2DAixm9xtLsQWjU4u8+xmBAoqwMLO8ZBKdY7vM/
/zCgouZ42PDKof+eZcWkEj5r4fNA05hdvRs+dzN45g0f4LOc+w6rtq/4XF4w
FuDMNfzfc6TVtGv0Tnwusl0pVe2Mz4JdHum+qfhcze0wrN2Ez69Tz/zmZfn+
3/O/1LI6p634TKaLnzl/Hp/T19GGOz9gPQSf1plxrOyFR4fKef1HaXA32pz7
/IY+kLqukZf9gwb6rbO5ATf74Odn7kHbSRp4G97s2fi7D+Ds2+S2cRpoBnsm
OR7qh8y8F8MS/2gQd+PFsP6LfmCrLpXPlqCDa9VAY5HwAPgtO6Fst44OI7Iv
5I8MDEBEXVFIADsdQpYrPF1uSIJv737bi2TSoIR9e3VXPglci9XsY3JpUCYi
sE2Ciwznf3nX6z+mgWXCc5O1mmQo3juXbtVOg92eXPJnnMlQFiHQ4EWnweVy
zi//0sgQsmF3v/gWOswub9UUayOD6r/7G7cY0qH6Io87OzsFJCJGTZo30qEJ
/jlpq1OAZ1IrRTKQDtJeMcrVjhS4ZJrE2nabDpVV91+vTKLAx4uJmuk1dMgU
cuEe+kgB1a3TV1Ke0aGl5bfsigUKDI2KBdRU08F4XJzdfwsVHHf+K1D5SYdV
UiK5vmeooJ4mKaIhzIDV50KF4S4VOHf+aF06ywB7vrR9h99RYd3P3DLNTAbM
rj+7t2SGCvHH5/LKaonzbJTG0yOP53fB72Fi7IlBGNkWq1rbzgA3gSOjcdGD
oPF0IY7rJwM28T1jG6gZhMs93xd7xhmg4FlNuTSO59ml0THBcR+eh4O0l2eV
H2F/0xkzEZHh6oOJ013yHb+JfmVeeLDMvQ9842Rel07QoCuSf93aDuxv3smX
Llvs7IfFjoqHRxZokH8hznYkDfvb2VqPvpbFftj3zoTjhggd7r9J9pNvHIBR
9lD6NNHPll++lda1mQQdn+0cPhP//0L39htviCfBIcnbmd8fEf97EQLhMEUC
Nmlh9f4HNDib66wopkSGZUfydG8R71/PJbcLbMnwOcsoPIM4r9S15z+3xJGB
HryPNUWYDq0B3OFbGsjQRrWU49Omw/UPahHT/8hgyB7FW0+8/0WWvq+K8hT4
PnTrjZwqHXaL2pyJOkmBR13dTp/u0GG/l+Eu4WgKrN3KydtPvO90tU7SryoK
7Nk9GXqzjDgfXw0aaAwKrIm+enH0KR0ybLZOnpCmgmbo93tfiX7Wlsr5/d4x
Kpy74qo7KcSA9w2nNujcpEJDtoWzgzoDQrt35Ox7TQWnLWJ/A24zgPvzD7eI
31S4Y1iz/M1zBhxjXwihSQxCXOGZ86oNDBjJqDmVcQDPg6nEyYCr17CfuYVd
Hnr/DPtZSWdN9KP2XtDOsewoJeqbpmLJmqfdBxnJGerVxO9VfciEzSirDzy3
uIjyEvUoMM+arMbRDy/07P3KiHpaPOf2KsC5H2Tawtk3/09vsvuck5v7YRWl
SShInA6XXpuVRKkMgG3cQHkD8Xtr32jtCZgagFYNmdmD/HSYv/++VvMUCfbn
227PSqbBAa+122PqSXBMS9ffm3i/q53FHqwVJMN1l8q6m+8IPQpYcli3hwz8
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
/wOpQjUn
     "], {{{}, 
       {RGBColor[1, 1, 0.85], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1: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
4kicUNb4PyOzn9s=
          "]]]}, {}, {}}, {{}, {}, 
       {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]}}}],
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0.4, 0.9500000000000001},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
      "AxesInFront" -> True},
    PlotLabel->FormBox[
      StyleBox["\"1st CDS sensiitivtiy\"", 13, StripOnInput -> False], 
      TraditionalForm],
    PlotRange->{{0.4, 0.7}, {0.953509135702481, 1.0592908818340716`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
l/dPjQ==
     "], {{{}, 
       {GrayLevel[0.85], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1: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
          "]]]}, {}, {}}, {{}, {}, 
       {RGBColor[1, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]}}}],
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0.6, 1.025},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
      "AxesInFront" -> True},
    PlotLabel->FormBox[
      StyleBox["\"2nd CDS sensiitivtiy\"", 13, StripOnInput -> False], 
      TraditionalForm],
    PlotRange->{{0.6, 0.8}, {1.0260876648014352`, 1.0514373886697275`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
     "], {{{}, 
       {RGBColor[0.94, 0.91, 0.88], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1: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
jrotX0T/AUi1rSw=
          "]]]}, {}, {}}, {{}, {}, 
       {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
Mf0LiQ6sBw==
         "]]}}}],
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{1.1, 1.027},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
      "AxesInFront" -> True},
    PlotLabel->FormBox[
      StyleBox["\"3rd CDS sensiitivtiy\"", 13, StripOnInput -> False], 
      TraditionalForm],
    PlotRange->{{1.1, 1.3}, {1.0282027897962809`, 1.0525724120962412`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.6381078006200314`*^9, 3.6381078742677608`*^9, 
  3.638108387552863*^9, 3.638108449718972*^9, 3.6381295035955133`*^9, 
  3.638129967337528*^9}]
}, Open  ]],

Cell["\<\
As charts above suggest, each feature affects the predictor differently:\
\>", "Text",
 CellChangeTimes->{{3.6381085320871167`*^9, 3.638108587482814*^9}, {
  3.638129971331135*^9, 3.6381299716431355`*^9}}],

Cell[CellGroupData[{

Cell["\<\
1st CDS both decreases and increases the predicted value as the CDS move \
upwards\
\>", "Item",
 CellChangeTimes->{{3.6381086045336437`*^9, 3.6381086720193624`*^9}, 
   3.6381303342767816`*^9}],

Cell["\<\
2nd CDS increased the predicted value on the entire range, however the degree \
of impact varies\
\>", "Item",
 CellChangeTimes->{{3.6381086045336437`*^9, 3.6381086969794064`*^9}}],

Cell["\<\
3rd CDS is impact less on the lower side of the range and then increases the \
predicted CDS rate\
\>", "Item",
 CellChangeTimes->{{3.6381086045336437`*^9, 3.6381087657443275`*^9}, 
   3.6381303414839945`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Predicting outcomes with new data", "Section",
 CellChangeTimes->{{3.6349183687244797`*^9, 3.634918383528906*^9}, {
  3.635064157377364*^9, 3.635064159387367*^9}, {3.636141327458864*^9, 
  3.636141358612119*^9}, {3.6381030729077168`*^9, 3.638103090114547*^9}}],

Cell["\<\
We now apply the predictor to the out-of-sample data based on the \
specification above:\
\>", "Text",
 CellChangeTimes->{{3.6349183977873306`*^9, 3.634918419237368*^9}, {
   3.634918455523032*^9, 3.634918723532503*^9}, 3.6350639211995335`*^9, {
   3.6361413838997636`*^9, 3.636141405927002*^9}, {3.63614171142258*^9, 
   3.6361417231382003`*^9}, {3.636141828282385*^9, 3.636141884099283*^9}, {
   3.6361428282929416`*^9, 3.636142855265389*^9}, {3.6361960234027596`*^9, 
   3.636196046152791*^9}, {3.6362007906374903`*^9, 3.636200803537508*^9}, {
   3.638103100004964*^9, 3.6381031327494216`*^9}}],

Cell["Define new covariance matrix", "Item",
 CellChangeTimes->{{3.638103959160873*^9, 3.6381039708764935`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tvols", "=", 
   RowBox[{"{", 
    RowBox[{"0.015", ",", "0.02", ",", "0.03"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tcorr", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "0.4", "0.5"},
      {"0.4", "1", "0.45"},
      {"0.5", "0.45", "1"}
     }], "\[NoBreak]", ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"tcm", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"tvols", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "*", 
     RowBox[{"tvols", "[", 
      RowBox[{"[", "j", "]"}], "]"}], "*", 
     RowBox[{"tcorr", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "tvols", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", 
      RowBox[{"Length", "[", "tvols", "]"}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.6361419094961276`*^9, {3.636141943706988*^9, 3.6361419896802683`*^9}, {
   3.636142063889599*^9, 3.6361420831712327`*^9}, {3.636142233477497*^9, 
   3.6361422429623137`*^9}, {3.636142864297805*^9, 3.6361428648750057`*^9}, {
   3.6361962539680824`*^9, 3.636196298488145*^9}, {3.636196396978283*^9, 
   3.6361964151083083`*^9}, {3.636196564028517*^9, 3.6361965658085194`*^9}, {
   3.6381031941511292`*^9, 3.6381032170519695`*^9}, {3.638103249827627*^9, 
   3.6381033365325794`*^9}, {3.6381039595040736`*^9, 3.6381039631076803`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.000225`", ",", "0.00011999999999999999`", ",", "0.000225`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.00011999999999999999`", ",", "0.0004`", ",", "0.00027`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.000225`", ",", "0.00027`", ",", "0.0009`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6381033378429813`*^9, 3.638103522438106*^9, 
  3.638103814689019*^9, 3.638120090409554*^9, 3.6381295155607347`*^9, 
  3.6381299762295437`*^9, 3.6381309813487186`*^9, 3.6381316057654133`*^9}]
}, Open  ]],

Cell["Generate the new CDS data for each feature", "Item",
 CellChangeTimes->{{3.638103976617304*^9, 3.638103990984929*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"newinit", "=", 
   RowBox[{"{", 
    RowBox[{"0.68", ",", "0.93", ",", "1.4"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mn", "=", 
   RowBox[{"MultinormalDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "tcm"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tdata", "=", 
   RowBox[{"Accumulate", "[", 
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{"RandomVariate", "[", 
       RowBox[{"mn", ",", "150"}], "]"}], ",", "newinit"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "tdata", "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<new cds 1\>\"", ",", "\"\<new cds 2\>\"", ",", 
      "\"\<new cds 3\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Out-of-sample CDS data\>\"", ",", "15"}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6368119940483866`*^9, 3.636812056089696*^9}, {
   3.6368120960881653`*^9, 3.6368121187082057`*^9}, {3.636812191404333*^9, 
   3.636812245474028*^9}, {3.636812296064917*^9, 3.6368123623494334`*^9}, 
   3.6368124096175165`*^9, {3.6368125525293674`*^9, 3.636812553527769*^9}, {
   3.636812715846054*^9, 3.6368127233028674`*^9}, {3.636812760150132*^9, 
   3.636812849460289*^9}, {3.6368130751468854`*^9, 3.6368131041005363`*^9}, {
   3.636813680209548*^9, 3.6368137715009084`*^9}, {3.636822740988816*^9, 
   3.6368227419248176`*^9}, 3.6368314855269213`*^9, {3.6368316519324136`*^9, 
   3.636831658219225*^9}, {3.6368317229125385`*^9, 3.6368317677314167`*^9}, {
   3.6378644749620485`*^9, 3.6378645775790286`*^9}, {3.6379555063027906`*^9, 
   3.637955507862793*^9}, {3.6380815290002255`*^9, 3.638081541729848*^9}, {
   3.6381033777010517`*^9, 3.6381035261509123`*^9}, {3.6381040199073796`*^9, 
   3.638104025476589*^9}, {3.6381310258399963`*^9, 3.6381310268695984`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011111111111111112`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
No45/APrHPRL
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011111111111111112`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw9lAs0lGkYxydqECJ02XROIkWJXEJXf4xrLmMG4zLGzGytaLfb2kpxTCU2
lDKsJFKpbTfd6OJ0MylZymq3PWpzSbFCpOxqoxzbnt7HnDNnzm/+3+95nu97
n/PNlm8QrFHjcDh5n77//37+vHG5M2ghzqrqc2F/YPP5uFlvF71mrInF/ids
9UXE+pgZPrpndIiuN4JNfk/OzS2UT8elM7uW+aQQz0TJDDfuyDViE6zlN7o5
8IlNsXK4OspHn3gOLJtm265rovpzMbJj+ENZNrEFskek2a7vehnPh8m8J4FV
LZRb4blDUY3ubapnjXz1/rRTvxIvwp3cim1DY2yL2qKyVxM39jO2w3Z+3b6R
EsrtUe/BLd/bTOyAlIMOpX0H6frFWN3Ot+lREjtieckd12PCN4ydIG1+2K2w
JHbG/dMWG2bnUr0lePrtJdHco8RL0aHU2LOvhngZlOJgPeUA8XLo+L7ntllS
vxUw0fGuzIwnXonrmZLT95KIXfC83DJ1fTQx0BOuNLmhz1gBZLcoj6zJoefn
CmuNil+sSxkrXKE9YNHy1QnK3eAakx8RaEa5G3SLLByjvGk+d7wZqjc49pJy
dzQZczjPheTzMFz5YqOWNjs/BQ/v+l3XK9tesdwD5xY+qdUJodwDta0fTXZk
0Xl7YluDcXIcl+p7IoZrM7V3AeVeuLzp2bVYLVZP4YW6kzNu2X9D9b1xrTv5
sq4p5d7o4npk8v16WO6DMveYjx6zKPfBh+5M7+wF5PuCG3K6t0iTcl9k3drb
WDCO+q/Cg7/+fGo6neZfhdj4ds8AFeV+cOsYmhT/I/l+KK1yCeroofr+SBl8
w1k2SL4/fu+859BcSXkAXhU9V00emy8A4zPkjQOFlAdi9ajViP8OygPx3u1R
7uZWyvnoKzwobExkDD46dQvDbXrZ/Sv4yIqfn19swfqr+Oh6FLRf+zj5QVB2
cZe227EcQWi6ahTJp/NRBKF5gZvoUA35QXD4Qna8dDfdvwA80fvjJy5SfwGm
/Byvljv2PAVIq2oJEN9m86gE8Ip9qip3pP5CKHYfUO/WJ18I48AMnxQdml+I
kMqXRi7WLFcJkXtfZ91SPfKD8fj2qgzzCPKD4TTxge2EAOofjAKzHbfuviQ/
GONvzJdwjMgPQVJIls9WMfkhiDm7eNhuHfkhCJ7IywnaQ/OHwJmXoMi+TvsV
CnUnYYYhl/xQLNoV7OecTH4oLmj1//Z3OfUPRWeZttecUfJF0NPk2ae6ky+C
/To9RYI/+SIYRnmFpjuRL8KRJWbVLg/JD4Njgd+59HzGCEOpZsZHcQ49vzA0
G1T7BsbQ/GHQ8mlI4vWTH47OqpONJxaSHw6DmmfJAhfywzHeoDn1cBz54chv
71vjuqeb+RGQStSNegYZIwKpkwLGOzrT/BGYw/vnQrgx7U8EGnaq1/10h/Yn
Eo3uhofuHaP9i4TJokThyCPav0jkba9bsnob+ZGYdiCFM7WBfDG+fxFaZarG
3h8Qg5uRoHF7E/liNFSGDXJXsFwlhnnk4w3pYfT+isLVo+ffDpqSH4WmUa0S
d3p/KqLAt7Ppai4mPwrpJX/06Y69PyWYqXnwimkszS+B1VLzgnQ59Zegu+Oq
e1wizS9Bbv9oToKM5o/GfsHu6jQ18qMR0GE+ZbMZ+dHoS6p3Dj5F5x+N1mXW
8/hltL9StJoqcWUrOx8TKfSTDfy2tHaxelJ8yMp5JlC9/MxSKWYIzCRuG1mu
kKJwk+sNpxx2fsVSOC1MiLP6krFKitcbiy1vpbL6bVJMS7vfaVtP+yPD3hmT
tjifY9ebyJA+nFehXUv9ZbjUW153V8hyqQzW9VGTDJ0ZK2RI4oX9+3Us9Zfh
cGJTYEkF9ZchNq/iriiU+stQ0Zbc/vYH2j85YrfWm501oP5yaEQoHOOpPuSY
b/xdj6ch9f/ECYkX106g/nJszht3ZnYvm7dYjmmjT57uHLt/+afzzLTf5cO4
TY7JYTdFVgNdLv8BdlbpEw==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.011111111111111112`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ZLfgbzEB++E=
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0., 151.}, {0, 1.653387504170836}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> FormBox[
       StyleBox["\"Out-of-sample CDS data\"", 15, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {{0., 151.}, {0, 1.653387504170836}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"new cds 1\"", "\"new cds 2\"", "\"new cds 3\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.638103510660085*^9, 3.638103528568917*^9}, {
   3.638103817309824*^9, 3.6381038250786376`*^9}, {3.6381040088781605`*^9, 
   3.6381040333234034`*^9}, {3.6381044025926523`*^9, 3.638104404761056*^9}, {
   3.6381056845269036`*^9, 3.63810569391812*^9}, 3.6381057483622155`*^9, {
   3.638120094559161*^9, 3.6381200977415667`*^9}, 3.638120321009159*^9, 
   3.6381204020669017`*^9, 3.6381295186339397`*^9, 3.6381299797037587`*^9, {
   3.638130983875923*^9, 3.6381310286792016`*^9}, 3.6381316088386183`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"newdata", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"predauto", "[", 
      RowBox[{"tdata", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "tdata", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"newdata", ",", " ", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Web\>\""}], ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Predicted value of CDS for put-of-sample input\>\"", ",", "15"}], 
     "]"}]}]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6381036245870852`*^9, 3.638103737422084*^9}, {
  3.638103782443763*^9, 3.638103788839774*^9}, {3.6381038560602922`*^9, 
  3.6381039091471853`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.790588, 0.201176, 0.], PointSize[0.01388888888888889], 
     AbsoluteThickness[3], CapForm["Butt"], LineBox[CompressedData["
1:eJxdlHk41Hkcx0cr1MpWj2srMkqb9DRLhIi3YyrkGoxjHDMjReVIImyMYx2t
NkRE6aBNx0bXo9KhlF10rbYNxSJLjnXk3B3t9ex85o/meeaZ5zXv7+v7/j7f
7/f3YwrDOUGzGAxGwb/f/37//4xYRtuvmXrCeW8p+QPZi0odWlKIFTC8YHvl
biPi+XDRM/IXComVkR/VdGFEeUzC6hh0bpxo86B8yUe5FkqNPXvZs4i18Sxr
4Kwjk3g50pUy0g2fkr8CPMXjgrs9xCtRCda8pLfEq3DHbEh1bz3xalw8H9ZX
VUe8BknCz0K3NhB/CYVwC8agdLw+2G3aQaFSNkBlu7P4wxPitShqYYtjXxEb
Is6Le+bKc2IjlFd9L0iZJF6HQfnmK1kPiY1hPjl7u9YPxCZQuH53W5q0zxTG
GnLHH0vXux5lsRef2TcSm4Gz/r6oWzqf+Ufr3wDFw+EzC2uJLT7KLdEUfaZQ
VTofMLxMdqz0sYRFgIKTorandL+t0Pk2r7BYTLkVktxMlDL/ptwaCiElT9Tk
JeclskZQv8Hr+g7KbaA68VUnZ5B8GyQ+OtVb855yW+h0M6tMX1BuiyzxjkcR
mZSz0b9oOk25i3I2BNqiqZJzlG8E07ThwADdP9FGvBterZlhQfkmFOVVFG6V
o3wTLgtlNGanUb4Zt5SWVpkxKd+MRSxBhskcyu0QL7P/9uk3o5LcDjqttrGC
qxJm2GPIQ61kcQvl9hg+qwV/JfIdkHyJ8fTw1zS/A96lGvCWT1O+BY56w8ED
LynfArlr9+KvrafcEcWtgiVpI5Q7IkZb5c+eJMqdsP1009WsKMqdYHMk88Gc
ZfT8OCN7fOsIT5HOxxnJ4hLt2/GUu6DQhrWg2EjCcMGFhEv9IhUa74Ku3K7d
v9J9rnGB1a608zN0Hxiu4B7ocjLZQ74rXjKbDeMjyHfFkLBg9ieyEq5xxaHg
V6yOndTPQXJkteGuDeRzELCfn3LThnwODFuPfVp9ifo5yAtr6A4MoH43NHB/
0v2dnj+4YVqnqmSGzlfkhts5L/QH1KjfDW43fMXJ+eS7IzpfRpG/jvrdcSwk
vunNDup3R0biW8M9tJ4ad/R/x0202Eu+B1Y+KChW2UD9HqhO/9a1yJL6PWAf
11B2ahet3wPaajMGENP94SLdcUnb1WcSBhepJ/zi6sbpPnFhLc7JCNAgnws9
mTv1vb3ke8KivtzsOI2HJ36J714TMU2+J/i8PpV9PRKu8cTSOiNxzTfke+GA
faR2cCr5XpDLjTS2EpLvBc3nOs1j/uR74VTO4pS9TuR7w0nVIjvSjnxvTMrt
VypxId8bS/msVy88yPdGqkXK3HpH8n0wVd1uXmFPvg8ebDsxUMEm3wfn41nB
5kXk++Bc2VxODzGDB6aR48p918nnwW34YoLdTfJ5SEhc7tVTQD4PR9QPp/Yk
ke8LZm/A5+qXyfeF/tEvdOtqyffFhxXNzysmyPeFdWmtX2An+X44NJGXyaP3
A/yQu4/9KKaNfD90nZA/6vuUfD8EWjArhokZ/jCOSPjtIe03/GESyJZNke6/
P/bkd8zi/ky+PxZotrqzBskPwK1eH9Og1+QH4EpveaEzjRcFwCotLL+Y3lc1
Afjg3ugXfI18Pu7PL7ddGydhLT4ODuqKbhjTfHxoxtyYdW+hhPl8tM/LGI9y
pfn52Ox1p1A/QcIn+fjxNPRkv6I+Ppw0WnT/KJNwBx9NYfI65qXUL8BMnx2L
d4j6BZAfzQztcqB+AUKUY8f50dQvwF/VrFXq8dQvQGXcmKXgIPULMJo93ekl
vS8C9LWH17Y8pn4B3su4NRqfpH4h9JgxjB1R1C+EYThPKSqM+oWIe7luaFUI
9QsROtaQe3Qn9QuR61OqeItP/UKYs6b4PHq+aoTosnedNE6nfiFyfJpsPdxH
Lf8Baub/OQ==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.059545092007312},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->{{
     StrokeForm[
      Opacity[0]], 
     StrokeForm[
      Opacity[0]]}, {Automatic, None}},
  FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
       (Charting`SimpleTicks[#, #2, 6]& )[
        SlotSequence[1]], {Identity, Identity}]& , None}, {
     Charting`FindScaledTicks[
       (Charting`SimpleTicks[#, #2, 6]& )[
        SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{1.075, 
        FormBox[
         TagBox[
          InterpretationBox["\"1.075\"", 1.075, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1.1, 
        FormBox[
         TagBox[
          InterpretationBox["\"1.100\"", 1.1, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1.125, 
        FormBox[
         TagBox[
          InterpretationBox["\"1.125\"", 1.125, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1.15, 
        FormBox[
         TagBox[
          InterpretationBox["\"1.150\"", 1.15, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1.175, 
        FormBox[
         TagBox[
          InterpretationBox["\"1.175\"", 1.175, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1.2, 
        FormBox[
         TagBox[
          InterpretationBox["\"1.200\"", 1.2, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1.225, 
        FormBox[
         TagBox[
          InterpretationBox["\"1.225\"", 1.225, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}}, None}, {{{0., 
        FormBox["0", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {50., 
        FormBox["50", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {100., 
        FormBox["100", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {150., 
        FormBox["150", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}}, None}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  Method->{},
  PlotLabel->FormBox[
    StyleBox[
    "\"Predicted value of CDS for put-of-sample input\"", 15, StripOnInput -> 
     False], TraditionalForm],
  PlotRange->{{0., 151.}, {1.0670766931793376`, 1.2177087166198537`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Charting`FindScaledTicks[
     (Charting`SimpleTicks[#, #2, 6]& )[
      SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
     (Charting`SimpleTicks[#, #2, 6]& )[
      SlotSequence[1]], {Identity, Identity}]& }]], "Output",
 CellChangeTimes->{
  3.63810374132209*^9, {3.638103791881779*^9, 3.638103829462245*^9}, {
   3.638103893094757*^9, 3.6381039104419875`*^9}, 3.638104038362212*^9, 
   3.638104408583062*^9, {3.6381056896125126`*^9, 3.6381056980833273`*^9}, 
   3.6381057524026227`*^9, 3.638120102967576*^9, 3.638120325189966*^9, 
   3.63812040690291*^9, 3.6381295239535494`*^9, 3.638129984446167*^9, {
   3.63813098783833*^9, 3.63813103342161*^9}, 3.6381316141114283`*^9}]
}, Open  ]],

Cell["\<\
We have obtained the new predicted data which we can investigate further:\
\>", "Text",
 CellChangeTimes->{{3.6381042571525965`*^9, 3.638104277370232*^9}}],

Cell["Data distribution", "Item",
 CellChangeTimes->{{3.6381042896474533`*^9, 3.6381042930950594`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"edist", "=", 
  RowBox[{"SmoothKernelDistribution", "[", "newdata", "]"}]}]], "Input",
 CellChangeTimes->{{3.6381043008960733`*^9, 3.6381043159501*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DataDistribution",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{15., {0., 15.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJw1029Q03UABvCx0QloC2GIZM2IZZpyWngwzXp+40x0ynHzijjhTAUOQ2Ge
NDTpDhaIyATGAbdQTnGEMFRErAHN+EJ0cyo7jiHCwQZj/vhbLWCDBey26gUv
nnvu8+J5+QSfEh9NZjIYjPD/8n8H17RMud0rJO87/pGDDgoHgqLGoxuWCWvm
FsegOoq4veU+IxFLRKjgvajnJ+EQJStYNjlIjiU0dParDHDTTEujhYuE90y+
89l2Kcz7/ypbs2mBdF6vqOmmiyD1qMvXdNnIsTMxYXN3FPD9mqt8GDNP7HUL
ebEJSnzvmG06Z5klbXi4Z9dwA+r6h3Zd3PQ3mXCveb71ZDN4fjGiMv6fJLvQ
WmUYaMWJjYEhT/KniXdNKfsSTZB0tmL4mmWC1KWYFTOmLkRuKBl/6UkTXsiX
JZN1OoxeNVbviRsj81nnZydVety9I4wX0EYydEzBWj/Si/f7D0aGhQ0QSs4Z
zA3txzsKqyyW7iVD5mz967mDqPLeMOf5mY6kStr9Tu83gg7ctzl7rYZchX/H
gnoUvvHhghavYrLt7cssQckYLH77gn576xHW+finPZiyoFLE0M3wf0euzt91
X/MKcZGSTxKf9oDVmXw9kkGDna/PfCzsx/wj17uOolc42ZMhrakYgvCs0xmQ
bkGOutTesc2MTJ4tl5tnhlwTcEExYAEMlm+9rhihTeXWT7ePY0wm1vYJBrC7
+9y86ocpuIYnuAXJBtCJYplI8AcEVeWZ29P0aKudN3wTYgX3NamNw9Nhil36
E1JnEXWNzW/fqIXvj9HrnJo5eKgaEp43ayEsPvJx5gc2yEW1XrfVT1Fbdnt9
Uo4dv7S9vGgb0cPfyidv2BZwP0ejMwt7oUzcwtkZ7YDxhk+41WlAdHOr5HL1
P2j8+UErs6UPa2OLGit9l7HFk5l1ZUcfZjitxcGnV+AoEkQFSHoxvPW9AylG
J44rlV3MvXpMB0T40IdcEPPYbxY0aRHIvSV5cdONSu/O5YqmDtz7lZcgKGBQ
J2TnIwY2q2Fa4okMuz2oD099+rnefRdVygvdLpMHtTj4xaJUVY1xyZmwwgom
FX/vifKGrBTtsT7pPRSL4sgngw7TUsh74+1uN4s6/pG6XrySjvDspsd9lJ1k
cRqjxi6Vo0qzIyIlg0mtevU/q17dr/pfEHq+aA==
           "], {{
             {GrayLevel[0.85], EdgeForm[None], 
              GraphicsGroupBox[{PolygonBox[{{50, 54, 52, 48, 49}}], 
                PolygonBox[{{51, 53, 1, 2, 3, 4, 5, 6}}]}]}, 
             {GrayLevel[0.85], EdgeForm[None], 
              GraphicsGroupBox[
               PolygonBox[{{51, 52, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 
                37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 
                22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 
                7}}]]}, {}, {}}, {{}, {}, 
             {GrayLevel[0.55], AbsoluteThickness[1.5], Opacity[1.], 
              LineBox[{1, 2, 3, 4, 5, 6, 51, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
               16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
                32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 
               47, 52, 48, 49, 50}]}}}],
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{0, 0.02},
          Background->GrayLevel[0.93],
          BaseStyle->{FontFamily -> "Arial"},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          LabelStyle->{FontFamily -> "Arial"},
          Method->{"ScalingFunctions" -> None, "AxesInFront" -> True},
          PlotRange->{All, All},
          PlotRangeClipping->True,
          PlotRangePadding->{{0, 0}, {0, 0.1}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"SmoothKernel\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["151",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJw1029Q03UABvCx0QloC2GIZM2IZZpyWngwzXp+40x0ynHzijjhTAUOQ2Ge
NDTpDhaIyATGAbdQTnGEMFRErAHN+EJ0cyo7jiHCwQZj/vhbLWCDBey26gUv
nnvu8+J5+QSfEh9NZjIYjPD/8n8H17RMud0rJO87/pGDDgoHgqLGoxuWCWvm
FsegOoq4veU+IxFLRKjgvajnJ+EQJStYNjlIjiU0dParDHDTTEujhYuE90y+
89l2Kcz7/ypbs2mBdF6vqOmmiyD1qMvXdNnIsTMxYXN3FPD9mqt8GDNP7HUL
ebEJSnzvmG06Z5klbXi4Z9dwA+r6h3Zd3PQ3mXCveb71ZDN4fjGiMv6fJLvQ
WmUYaMWJjYEhT/KniXdNKfsSTZB0tmL4mmWC1KWYFTOmLkRuKBl/6UkTXsiX
JZN1OoxeNVbviRsj81nnZydVety9I4wX0EYydEzBWj/Si/f7D0aGhQ0QSs4Z
zA3txzsKqyyW7iVD5mz967mDqPLeMOf5mY6kStr9Tu83gg7ctzl7rYZchX/H
gnoUvvHhghavYrLt7cssQckYLH77gn576xHW+finPZiyoFLE0M3wf0euzt91
X/MKcZGSTxKf9oDVmXw9kkGDna/PfCzsx/wj17uOolc42ZMhrakYgvCs0xmQ
bkGOutTesc2MTJ4tl5tnhlwTcEExYAEMlm+9rhihTeXWT7ePY0wm1vYJBrC7
+9y86ocpuIYnuAXJBtCJYplI8AcEVeWZ29P0aKudN3wTYgX3NamNw9Nhil36
E1JnEXWNzW/fqIXvj9HrnJo5eKgaEp43ayEsPvJx5gc2yEW1XrfVT1Fbdnt9
Uo4dv7S9vGgb0cPfyidv2BZwP0ejMwt7oUzcwtkZ7YDxhk+41WlAdHOr5HL1
P2j8+UErs6UPa2OLGit9l7HFk5l1ZUcfZjitxcGnV+AoEkQFSHoxvPW9AylG
J44rlV3MvXpMB0T40IdcEPPYbxY0aRHIvSV5cdONSu/O5YqmDtz7lZcgKGBQ
J2TnIwY2q2Fa4okMuz2oD099+rnefRdVygvdLpMHtTj4xaJUVY1xyZmwwgom
FX/vifKGrBTtsT7pPRSL4sgngw7TUsh74+1uN4s6/pG6XrySjvDspsd9lJ1k
cRqjxi6Vo0qzIyIlg0mtevU/q17dr/pfEHq+aA==
           "], {{
             {GrayLevel[0.85], EdgeForm[None], 
              GraphicsGroupBox[{PolygonBox[{{50, 54, 52, 48, 49}}], 
                PolygonBox[{{51, 53, 1, 2, 3, 4, 5, 6}}]}]}, 
             {GrayLevel[0.85], EdgeForm[None], 
              GraphicsGroupBox[
               PolygonBox[{{51, 52, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 
                37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 
                22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 
                7}}]]}, {}, {}}, {{}, {}, 
             {GrayLevel[0.55], AbsoluteThickness[1.5], Opacity[1.], 
              LineBox[{1, 2, 3, 4, 5, 6, 51, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
               16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
                32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 
               47, 52, 48, 49, 50}]}}}],
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{0, 0.02},
          Background->GrayLevel[0.93],
          BaseStyle->{FontFamily -> "Arial"},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          LabelStyle->{FontFamily -> "Arial"},
          Method->{"ScalingFunctions" -> None, "AxesInFront" -> True},
          PlotRange->{All, All},
          PlotRangeClipping->True,
          PlotRangePadding->{{0, 0}, {0, 0.1}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"SmoothKernel\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["151",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input dimension: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Domain: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              RowBox[{"{", 
               RowBox[{"0.9990016500603931`", ",", "1.2857837597387982`"}], 
               "}"}],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Bandwidth: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["0.013615008623788878`",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  DataDistribution["SmoothKernel", {CompressedData["
1:eJw1l3c0F270x0lWyPh8Pj7mZyg0kJKdz72SlRVFkYSyykhGQiWaFCKVIqMo
KyMiJSMpK6OEfGVnZkf2z+93zu/5532ee859znme597XPW+6vYeZAzPT+trA
xLTa8Ywzh5zMOMA3kHx+JIshY853ytI8j/GV5EgpdH/DMKqtjPjs+I4xk8mU
xVlQxpD06t381qKSoTV/MPdd4RfGhOTZ31wr9Yzl6paQLdubGZTxM0t2f1sY
hpmuJJerPxkpUQSp6MkuRtwt6fMUpT5GjE580zGBQUaG5tp90bRRhvkthz3N
3FMMlRm14Rt5swznqvqJ7sJ/jDe68TcT/FYYbTlZ3HKhzHCIbLVU2boRPgv0
9XdPcUBX6hch3hIeWP1cpcPezg+GBqMXy1xIcFnh0ub6F8KQ2HV05WU4BS71
n599IiQBZn12ZlQ3Sfj791DSY9Xt4H7Qi84TKwsaonakKIvdMMu1/YibyV54
uDfwEUetMixvMLU/PqQO0tKPnJm1ELKfVj84NbYfhPUsyT4bdMA5WITuGqEP
Y67q46nJRvB08HVpiqQpWHKkNIU3Hob24INjHt0WoCKX9kTUxgps1LwvOVjZ
gPGZ1sBkLzsouJPkXMNxGpLKhO2S5xyhZIrW+FP/DDzSPVX8gccdfO2nj0ps
8wQb//NFVyK8QMBwoZFD1xduqIw/GDe/CJybtcc1qwJBlsDg9zcNgqjY97Qd
gcHQ7qr6jXfkGgi8rv31IvkmXNhJ6x3MDIWYtS7jk/zhYC3CXT03FgnyUdco
mhzRsMWjkInPNgY8k/qLRBcfQsLXx0VMnY8hcMGP/Jr3KQS2BXi21yUCy6rj
0tPyZIiJaEuJGnkO7y88F9pv+AJ2zbvq3xhNA7eDrxsG6jPBvd3n49K/bPCI
Put+4W0u1B4boYsnvYbl/brU4TcFIHxIe8xntRAOO3zzSwwohuHCVr2gPSUw
8irE+A2hDBKEZxQDs8tBPvzVjk73j5C4/9seuyOfoIZ3JCPB/jNUXYs7rh9X
DfEZpl6KG+vgq8Zl+2PxX6H0cWClcUEjeFq5+z9Ubgazow2G4q3f4MHdX5U3
Ylogw0+XL9i7FazPD5SV+LTDseuvYPFxB4RYvJSdHuiEVKI9q6JMNxyxulJE
8O+BZrNi6oXOXuAbXD6hdrQfNNu2C6sPDYD4h1WDQ/cGIXLC2dTg8DBEN6Vx
zcuNwpTU72mi5B8oW5pUO6E0AQxFM76S3EmQ0zHRu/ZjClzOuOyr5ZyBfJlB
ziaDWXiYKTBeHfcX+G4TXHuW58DePzxK2fUfsL28V9A9sgAJSTJ5/X5L0LLx
QSNDcAXuSp5W7qhYhXvm6fGGwIRt5pj1bCsz/odK+of5NyB5b0WNAisLblrq
iSExbUR3Ty7WcmZWXBXdbD/HyYanfpWNuQmxo0frH442GQ5c+4/drFOHE91P
m8tQHDehzIWawr2hXDjNrqjyOo8bh3QSgyW7eNA0u9mdj5cXycMd/Is0PrQ8
YhWb8o4PP+SGF2sf5cf4bOUT0TP8yMn0vUg7UgAPZGdmCcgSMPJzlWp2NQHb
CLEJDQ5ENH5kNyvNTEJF5nxN1yckDPhp62u6VxCfbVk1ulsriBG3bTe12pJx
7Y+n0eAMGQf9hL/7XRPCgBjTd3oCwvi0RJJCjhfGecVprhdbRZAlqXL8w0sR
vDoie3HbdlFM0B0Ky00RRSNqvawMRQz/WciwuEeJ4S+nmgOmG8RRaTipLN9N
HO++XS+77+L4m1Mm4q4SBYtaqJM/oilYMaKiozdGwcVzH9J/ABW/vZ7aGBBO
xdGNrA172qg4sevTmyubabi96heLlxwNdX2eJ84b0DBK8UMEwYmGC4c0tb9e
oeFRk7Yw+Qc0lDw+GHIgnYYqTjssSO9pOGKxQM6upaEAd/EzSjsNJxMCPD37
1+NJO88V/KHh3J3ZqX+zNFSSVzA4uEhDl/RCpqIVGrIkpHgeWqPhhzDqB/q6
NmiGNKqux//E/aOnLtCQcWIkx2s9T7mWNPlq/ZybW+HtqQEa7l5I1IrvoGFu
uJ2cYyMNm9MMAr58pGHwzTjL+oL1/HTee5dSaXiA+3Vnd8z6fR5bp6yGrO8P
QU/nORpuU+GjXremIVOkafiiDg2dHu7bfUCehkWFYs+chGjInJuv07JKRXum
pM6UGiqSl3j+GN6nohrsz/1xnIpSTyoKTehUfMdtz1nVT8ETkkPGeqkU3PAj
b+63AwUjzl52fL2FgqGVR2bKusQxJ7nGfetjcWyeizg9ayaOb81jf+pvWv+3
QJf3jDIx9JihiU16i2H60Pu1gG1iGO+iKMfSIYriE9yCL++IYtz1jqpwDVGU
/sHm2PlHBO2Kl03fxYsgq4jcH1MjEUz3mrGtXRbGXLeOvYczhVGhjvkXyVoY
Tyb0MGtyC6OOcsZZ5pL1erPRF7zuLoTfLod3LdCE0D+w5NTd72RM+ljf6nqb
jLx7a+MqgYyacjXVpfOC2GKpUXUrVxBvrzz20XMTxHLtj1JSOwVxX+SKq+4o
CQMb6AsNWSR0c2P49Zwn4fJzruInaiQMC+j9LMpKwqA6sYzAZiJqJV22bU0m
YlrfDuv9vkS0CBEJazIk4s0PL70eShGxteGR/TMWIr7ViJrd0E/AoUSd7vLP
BEzYptAz/IqA/DKzk8GxBOw5EOUafZOAoW/U99EuElCj5+WyjDsBjynZb3/v
SMDgR0K6DfbrasvgcVrX6kDe8BAHAvpbqVlvdSXgzst2WXq+BPx5vMVmIoSA
/RldZ8kxBLRKtq8qTSOgWFg592A5ATtC0+rCOgm4onpoa9YyAcnUbdX6VCIe
9lj0stUmovQLUs+EOxGDSgM+zD0h4u3Kuwe86ohoGDbIfoqJhFJx0ls/KpPw
zanLNyLW38XXVPXkxxwSOqj37Do2TcI6k9+t2sqC2FstahJ8RRDLFjpdmdc5
4XKyzjtfmIxv/ZgbQs+S0fG+hb9HGRm928ZiDgoJ4cRC1yKTlxC2C1tEeDUK
Ybo3Ea/ICyPF43X0cpQwno/NyS6dF8Yac9X0RzYiaHqlOsHsswiOH1qSzd8t
im7HyiqvxIvi5w7G9PlNYnjfdLBQx08MExaU9uT8FsPMLy91bc3F8Z1tr/HG
SnF84e38UHsPBdVo9Zq1CRTMkaNLqXJTUbdcpV/+AhVT/Ue0zbqpKCk80B+/
hYb57lWJn8xpaCJn5+5xg4Z2PUbHzqz3o29LYNP1XhpOzXGYRfHQkVVD2tZO
iY7zW5bYqqzpuPRf2bf7QXQUU3F1f55ER5KGWmV9KR1FnDtUxn7SMeXS4lrn
NB0T2QS9r7FL4FUFVkqlkAT+YF2KviYlgTNObxi58hLo0e++pqIsgYl/H93a
rCaBUQHRRttUJZA1Y6IiaK8EEoTyxARlJFCqjMN+hCqBoT5u1ix8Eria+yvy
zDIdfWIfBMsO0PGlznSWdQ19nSf1UtyZdGxlE1I6HErHQifjRQMHOnYPsdgQ
NOj4cVbbqpqfjpY7VOIi+mjoNTOhHpq3zrV9Ikxdl9f5VYLHCvRoyGoQqq7E
t849q/JMwQwqyt9Qnfmwm4qqtV0R7/IpmPZIwePUXgqqTt7I5skVx5YitUT+
neJIU43b+ClZDMlVBUWBQmLITsscD1vnQSQEVWitiWD4hBffzDkRzN/hPjnQ
I4yvRNNqHMyEMcOA5VNRhRAa8DCi6ApCKO7aJ9f1jIz3V86ry5LIuFOVn6Z1
UxDzFGUvH1kk4X/e55Yi3UnYoBymvrWfiHU+rh8VjxMx5YmF5/A3Al46/6/F
xpiATH16knk1Aig+YnFySU8AizyHRE2q+bH5U8ClDwb8GBfpaXW0kQ8PWay5
bD3Kh8eYqoesynjRXNZ5fvzHZuQrM57nnOZB9tBbnzL5eTCnsGy1WZEbzwaX
nvax4cJOQpbE7bBNqCbOs5W5hBOZnnd9qZvmwPSry33t63N9qP9jBfEsO3It
cQQ5Z7Fhuojb6dIZVpzetUeThcGKbxpD4sXvbMRKqVue/zpZkO33K67LCiyY
YH23MvbOBmy0OimjPMyMeaM7dbT0mRGlTFgyM5mwtk7G1o7AhBoOz/XTFlfB
KMRSe+r7CsR2+F0PLlgGmwRiuF7cErDdYWPac3sRmOsIsbsDF0Dh9s4L6j7/
QFo2UUXHex7M2VZ3GV2cgwYkPDa89heiI+KE98fMguxqxQPZzBkInsy35Kue
BsGs7cujo1OgVE2RryROwS4RO6k4rUkIfqHkPzU5Dqm8I/S3jn9A8pPCVPTQ
KDwVXFi95jsC1KZN4Xf5hqH5ZoZfxptBcB3XDfzp/Bsao3FSQHoADJU6nHWn
+uAH7y4up8+9cDi02sM6rQcOXG2/wPOwGzr4uk69oXWBQD0pTmtHJ4Te2ODi
cbADfrwqpvQGtYOJm3y6Yn0rDHAVKa7I/YDQC4qWlSnf4dYmR3+u3d9Ayc57
m1FjE/zbUMy3EtwIv3eUHOe/9xUWSvZtyME62J/PSI0j1EC7n2FKFMcX4G+a
KNemVEF3RE+ex+FKuH97hO1tagU438lV6BMsBynXylw17VLgnEqMlLr3HlyI
E2ODm4vh5k97raF3hTBWYjsfFVMAa+IpyoGxr+HT0rnK7Z9y4arJiXOqgjmg
1ZPmlUbMgjxXPvHrjHQIatP41ZvyAhSz5rcE6qRA04Pbo55iz4Dz+eBg85Yk
0HYlSu3JewpVhl1NAZ5P4Jv2byrvlUdw26FQput7DISHJ1597RoNpcfqw3M0
7wGhzXxFNy4cNkWmhfqLhsHO5oHTR+dvAltAhdcN6esg0uu0/Px5MAStRhXs
dgqC4XImlrmmQNjErq91R+cirFJc59vovmBR1jV8xNILmGdD8k/0nYNAnyvt
ymfdwNyUr53toQtcKeCOGVB1BCPmzTmqOqfgTGqizUi2LYTzPz6s1moNrL/C
ncndx0AybnKnvLs5ZEY1nP/jbgYRYmmCD1+agHGnvZDKVgMgTzZPsKvrAvOa
mEFRuxYoZRmXSk8gGFs5WI7V7IPME7+50FsF5Fvm9Fsr9kIG7fhf3/u7gU39
3yItXxaWVZtNLIW2Q3exv5sctyTsu7h80ukVHXyvXV42eC8OSuLJogfnhMAi
+Um93ygRHHQERQuD+KFeMUORrsEDO2aWnO7ZcUAHu5LLgMFG4OLQ2bbzFxMU
F2/b4bKyxNC987Bt8655xgPLX57vd84wZCQUKX2pEwzuHRtfDJNGGD4kcVkz
3wFGrbv50GRiD+Ol9CbjI4U/GS29glXklmaG3P26KWJTPaP+732hHnol49Gt
7P/z8f/v69v+Xnj2vz7/i/Gf//P9/wNLcSq4
    "], CompressedData["
1:eJwN0gcjkO0CBmAkJT5UooxoEBEqpUS3CmVEQorKCCUlomSkQUpEKiUVKkqS
UqmoUCJFUVo0KCVRecZLIZxz/YZrgteW5T6iIv8nJiIyRKnL7uWfTnyebGnu
/68TzSeqVfaKENirhpx4LkZQck5llPJQgmlaFQnrhxGcvrJ52E1JAqmZCntF
pAnC75T8s5Uh+GG6PvSkHMHKcln2bRTB4yV3Ns0YQzD7ucf3KEWCbEdJr+px
BPINBR8UVQii17q6eI8nYC1iL6+pE3j6Xbbtn0hQ99vxsZUGAUL+LTg+hSC/
J+veF20C1V1LjfR1CRLEuwsi9Aj64tJ1qwwINsouvig/k6DhWOcEz1kES5RS
T18xIridYabYO5dAU+NHsqUJQUpusvTR+QTiBsb7m8wIggu/iOouIvhiHB+5
w4LAoWzmn0eLCcosPgSNtCbQr475ucaWIH3ZtPW5dgT/vXn9uXsZQaRb1OpF
jgQdzZpvk5wJXH1rHT64EDzpCK3RciWYE6S+eNtqgovdVQ8erCVQiAwykfEk
iBVVuu26jqAr9uH0iz4E3tL+eXw9QX3y6ClmGwkWKt47m7CJoOC0t0pDAIH6
xP9OaAQRJF0sHLk1mGBAd21CyTaCzdclhkntIPhgdHWPSziBzX2Xf+cjCYoX
ioSSKALtqhxqsocgdanDprhogmH1Pa2v9xFsX3nOc+IBgm8frT8EHCRwWsdX
3E0gKG879WJYEsGMAHNbp2SCs/xnZeZRArmwlAW/Ugh2DZjem5tK8Du6dXZs
GsEayaSCl6cJahKNdNUyCObJN1/wP0uQe/LAhDvnCcapTT8tfoHgQFaDgkMO
wR/tvclncgl8r06Vbs8jeG1YHzv7KoF5cYRodAHBDUyOrL1BMLGiplv5FkGy
9bagDXcIROpUf94sJtjiXOkrep/gU2PA56WlBEs9FFenPSC49630TWs5gY7/
BoeZlQRpRK5mVxXBiO1FljVPCcL6PB+MfUbQtnuEiU8tgYvEjVsFLwgq492m
D9QTzBopnmf9hiDreJ7miXcEo1Wcz7Y0Euw9269s8JGAal44HtlE4JFnN/LJ
Z4La6X/ix3wlmH87Q8KrleCKyZI9+W0EKg9JX287Qfzik9sX/yLorVlAj3YS
+C1v92+mBO/eHmnVFQgWr5nnGdZNcOtLy/uKvwQaGxJWjOojOPbL8MXafoIh
wR9tLg8SbP27r/KPKMXnnXoLzMUplg15e/ewBEXpgV2zPw6n0JPRKtCWojhz
tE5n+38U0uPCLjyUpYhInzBBdhRF+6Snp9zkKVZd2qqQo0BRpaecLIylMLpZ
LrVAmeLC3E2xh1QpxpTKizaqUcSY34/QnEjBn/h0b51M4WUvE1SqSfHi1a0O
KW0KM1d335U6FNeahn3OmkYx3ueaG9WnSGxf+cZ0BkX/FlGHg4YUm7ouVb+Z
TfE+fLnlpLkU1iJ9ZVvmURTtOz/vnimFlpTtreFmFCcOCwbOCykkFM5cPmtO
se2UheZvS4qv6r8zja0oHC8cV95vQ/FQB8frl1JML/gup76MInP24fhNyylk
782RKHKiiFrwefdQF4pflXF9DqsoVtvO2J7uRlH9opG0r6Ewdon2N/KguPRB
pzXai2Ks1yuPOm+K/d8j36usp+jepLHCz4/Chz2rK/SneBW63UYsgGJR//hK
u0CK63sfm53aSjFheODd7yEUhw+NnW0YSjE46sG13WEUAal+Os8iKD6qjrow
LorC9nyxuu9uirta605d30sxNV9KYTCG4uTMm4dt9lMML1otlRpHETp/aOzX
eIrW8isi0xMpnK1WROw8TPHo+UDXkyMUhk4XAxVSKM412Hd4naAY5f7X5+pJ
ij1fM5v7TlEQPyu3JekU7p309bFMiuchacs+n6Mw7V1YPS2bIm9Xh0X4RQrl
ocfKKi9RHDxoMm90HkWP7LdC93yKDSmHDPKuUbxVmn3573UKy8xPGhaFFIUa
+zOTb1NMvqyv/KmI4qjBu5Sp9yjEbu2WCy2hCJqnHV9eRtFc9mKoXDmFvWX4
7tUVFCXVE/tyHlNMc6je1vWE4vSbYLKghkJqtYp/4nOK8M+PvjXWUfzw3ewx
pZ5i5c8x74NfUzwOKnEue0sx+49vnXQjRXakrM2qDxTyYncqsj9RRO/3MGPN
FExa8u78FgrPIwWz4r9R1Cm6Xnv7nQJnxHQmt1PkT7ycHfiTQjXHUf3+b4qE
af/SJClF3/WsMSs4xcY5Sw+f66JouN81ovMPxZJF6fvm9VLcqbIUOfCPQtOu
M/zVAP1/thNd6qIMQ1eZBW4ewhDyqa29aChDy7pkH4nhDMt/zG1ePoLhQcAX
1wxpBgPh4OsOGYaMsJnL5oxkkBl8/zRmNMPOmBiLF2MYfkpOK1Mdy+CW9Np4
oxLDU/mowlsqDHPTNA2GqDHkqNXm2k9gUMwO1Tg9iSF2qnpmmwZD19UqpVla
DN6zglL2TGWoLx4n91yXYaHZw4NK+gwFFRuHrp/OoG4zeveNmQxJdXd7B2cx
DDh7b7Odw7D5vTRJNWb44FG48ZsJg03rmm/TwVDsL+ERtYBBm+Y3Pl3EkLrd
xVnRkmHYv8HadUsYtu/Jsb5mzfBNwqHiny2DU0IPrOwZykeeK05xYJhxwnrW
F0eGsyr8qt4KBrlzp6ZGrGTYNcU8+7Erw++8n2ryaxjWzkhJ83BnqLltOuaK
J4OJaWtSzzqG3IeJIyx9GZSWGO07soEh7lnT4KeNDH+XHwjX2cyw/p1BV+gW
hjdrGrY8CmKwaNnTLhfCcHPDVJ812xkm/X7ZdGkHw5HgCNfucAbRnkmvF+5k
CIyqsU/axdA0ZNvT93sY7OJULbRiGO7LVJaGxDLoHgswfnCA4dQ4xcL/4hlG
ZJTqux5iCJu8IfdCEkPbJTkNnszgol+UgWMMlTc9lRKOM8wyHpHyLpUhq/S6
rMYphtEWbgeDzjDsfTpkaEkGA7XP2zXiHIPHa6feFVkMta79IecvMMxvzu7s
zGG44mO30eQyg0pH99cDVxjiAzPcX19l6O1a3DjhOoNfBHEKuMnwTuRkbfEt
hsWxC6yHFTHckmp/5HiXQSP5CDLvMxxTmFf8s5RB/HSL4dyHDFsnJFzd94jh
ywXDqS8rGZbpfswa/4ShrGCfmn81g56RXtrtZwzp997Ii9cx/LdwV9KylwyR
j6eMOPOKocO2LubHGwbXlzsGZzUwPHGZEL73PcOcj0+E5x8ZLnpt3aLczKDQ
ptS+/gvDvs3l3je/MgjMv0nkO8O6HfKuS38wvOy/9+pkB8OCaB/71l8M14bL
PJ1BGNQSb5nvYgyJo91LqwWG/tRhxmP/MGwaf+2mdw/D+/Mr9Qv6GKy1RXP7
+xmK8i9Nthbh0DJcnnFcjONEUe+4FnEOCZw/pj+MY9sjG9lISY6vVkJclRSH
Y+1p8TEyHA+dLHZ5ynFMb/zVc2UUR6b78ZBeeQ7Zb/M7LRU5ojZ+9zs6juNX
Z9LXJmWO1dvmuOuO56jubW7Yoc5hvDvOqWIix6WhM2pHanCMjW+0WjuF44Bc
9KNcbY7uFB380eHwVX5VtEiP41VmpOFhAw5zTY2rH2Zw3Lj8TFt7FsfE6duz
thlxJN8ar/ZwLoeIyeOTMiYcWx5skXebz/HJcmzSRTOOpTVlksJCjnsOfjFm
Fhw6b0cOJizmSFtdHNZgxSH5xUvQsOXYsV5qy1Y7ju8/b/woWcaxYutqbylH
joo/4k0uzhyGO6+synLhOC+24hVZxTHqwICd6WqOPf9dfBK3loMcsTd/48Hh
PvZvycR1HM/PZM7d4sNhOsnq5t31HHk5VG/4Rg5lvbRLTps4Dt5YOPlsAEfP
nI70X4EcG0qOjjMO5ni7yORY7DYOyydfZepDOQrtDsWphXNMfjVLfFMkx9FV
n6LuRHGINcX2iO/hCPLWD3GI5mj+8fb3mX0c9lt2+7Xv5ygRtL7OPsgxLfzF
2ugEjtODYQ21iRzS+yY6qSRzhI+ofr7hKEd7UrBVYQrHyjEqj0RTOarSHs23
S+MwUt9clHaa40L2GMPv6RxjdEryZ57liLnmq737PAefJZtVk83hdff2+HE5
HC/MPE765HKYVQ6Xv57HcdWmIHEgn2P8i1WSNgUch1aIxZy4wfHvfe5ASyGH
v6djmMEdjsbWPh5ZzGG1KSvgyT2OO9T2x5hSjimhXeu8HnAc/3fmU345x9C9
lqv6KjhChnXWL67iaEk4YXfsKcfyUWZPmms4HpxoWzStlsNANbkk7AVHxrm5
cyvrOWS0vtwY9YZj55WDeu7vOH7OmHnpciOH2533k/5+4HhqGpNu3sQxt1x3
XPJnjpwlr49+bOFQfL5TZmorR6yjZtz2No6ud8+HlLdzeK8NjZL9xVHfotbj
1smx0K8qOIdyFPwO/C1wDvWQcX4LujkO9zxoOfSXYyBq49rGXo4A8dENmv0c
H+LuOgYPctjKej8vFRVQfEzaSlpcwFSlwvKVEgJOZqyZnz1cwHANiSI6QkBo
bv7M+f8JaNV3yT8oK8C5cFDr7UgBj4xzzk+SFzCzbNn4QAUB5yx6Uu+NFTCy
+uxoSWUBu5dZJzqrCuh8zYafUxOw1u1U9O8JAp41LxownizAxPfnjv2aAi53
HOP1WgKUgkwD1HUExHV/a9s0TcDfiMR1RfoC1osafRo6Q8Cb2KaVyw0FWEgf
qE+fLeBmsoFdxxwBkxQbqozmCThyes+iGFMBohOnltRBQODFl3NUFwpo0o24
4WcuwO76JL1blgLuG9XkiFkJ0L0fMsneRsCpharpp5YKGFFVMbbNXkDY0oCj
hssFtL1UkNnjJGDlytIDz1YIqPy4fojSKgGz18lF+boJyGq78/f6GgHyAZ7B
g+4C9nLJ3zZeAtiO6xtSvQV4DLi2fPUVUBc9ZO10PwHzJfPe7fQXkJ/o5Ph0
swBV+f5nCoECEk5mL1m3VUDfeLvyqyECNmZ1m/7bLqBBO+POkjABS64unpkS
IeC2IbnyeacAzeJULb3dAlKw4Hz4XgHiFT9UH8cICLY+kjp6v4AvtcajPeIE
ODi3HMqLF1DWGD+855AAfQ/DaIvDAtK/fehPPiLgf+egUdk=
    "], 0.013615008623788878`}, 1, 151],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.638104319928107*^9, 3.6381044132786703`*^9, 3.6381057024825354`*^9, 
   3.638105757160631*^9, 3.6381201076163845`*^9, 3.6381203287311726`*^9, 
   3.638120410444116*^9, 3.638129527915956*^9, 3.638129988907775*^9, {
   3.6381309916603365`*^9, 3.638131036510415*^9}, 3.6381316234558444`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{"edist", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "1.3"}], "}"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Probability density of the predicted value\>\""}], ",", " ", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.63810435012976*^9, 3.638104384995821*^9}, {
  3.638104432061104*^9, 3.638104438004714*^9}, {3.6381047380888414`*^9, 
  3.6381047986793475`*^9}, {3.6381057134025545`*^9, 3.6381057641494436`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
+7726RImJL5o4C8Kp6OvbpUdfpwkJOz9JhN5XBJx/7wR7SBLwq2K1ZFj58WQ
/88w8/CNJISnmQT/LqKhwW7OlnJLEpyueR98eJGGVr/MZvS5kXDCPUh48JMo
4uZIUvocTMKdFG/nV00SiKs3K3AV9pD1o6MiNnb4eppvzipjD+mcTxazm1VE
qlnrbGeHSKCbjzwp5VdCZfGVq2nYQysN3nkPBdLRj9VdP/adY8ERFwelIC42
pJ53IzjxJgs4MnRvOF3Gjl59crEuhwXay3ZGHjcYg4UlicyWWhYovBOY3Jfb
Dbktxk++fMF+GhVeuvNYHTwSlPHQ/M2CZ0HPf0V8z4f9f/18NwlTQE0tDFh1
x4LfcgkHSeyhW1Ypj/kXvKE3ehD0jSjo8xUISvaxAMSuNenpQMHAfL4WilGG
C8dyrl/xoyDbV/+FzdXfDCsdrzvnb1Dg2sFI5dxYxFiZsrtD5T8e0qF8Uxu4
CXjqf2nBsbGKceTB2T1nFQhQ7So8LVjwi9F5LilBCXvIk+dNiHyNLOwfOBBy
1JoAlZpWt/SrRjDdaef6w5MAxozJ+Oh1N2gnjrW5hRCwKXKz4JOzV+HZNtEz
G5IJqD7Ffmd4Twa0K+4ibEsIeJZWrxy/pRrEL+8LS2sjIIVo6Wuo+wBuCr/3
whh+PeUtWjsXxmC/V8TydFcmZCx8XC18RA7d1nJIfRLEBMpwkXA+TkcLFxes
v99mQqmv5DYx7KGTfBsM/J8yQf4GeUislI7GJBWT7cRJqHpn7JInK44ELWcD
2bCHPrz1vL5+iSjyy5kYvW9OQhyn+Dk9Nxpi3r7INuSM52V81/EKZ1FkTLyU
LKojYSrZXVOiQBFd7Lrz6XcfCW3+rFIDDSXUMMvzMfo3CQsohNd1mSK6erJS
YlclC7I2hTtydX4B9cdfy1s+ssBDVMZ2571G6Fe4lZxKsKDz7o14laBieCPW
Z1nLQ8GBtPeVZs8ToefmlJwo9lC1SdO+oMtnYdoybXXpVrz/L8K3RqXbgY3W
kSobOwoi1fX84z6qQ31GM8eNExRsLRseD13NCVYZXnrs2EPWHgL1LYKtDL99
Q8RHEezZoaF2Rt8Hhm6qmn3kWgIMy6R+MS8sgZI450Z7E+zZy2P6flqa0Dpm
etTFkYDTYoZ7TvLtgQWfkPlRf+zbd2eLy9+dgbHsvKTQaAK0zlTc3P4zAQ7d
uc3c85iAj3XLJNNiC0HAZVpWrwafnw96cg9ZNoFk8d64595MsDh+wNTmlAIa
9dzVc+06ng/7RMJFPtKRUyd39cgDJtzVbh71ZtKR0qu5yy5KJEyKCe4581MU
fYkUFRXCHmqsTTF3DKIhG27Zwk5bEjg7HmUU4f7vVrkXWlpGgkvowUCPXpxP
fFt7br4jgW/m1fH8lUqo8XR169w4CXlXjKrudiiiteSj+z+/saDJJPPJC75X
4L2Yql3zlwV7+c5vv8T1EH4M8SZmS+B+YX8i//p4BAgG696RxR6qEfZP6V7i
CdXtK+xqtlGwUT3mvPmwIaxtX5C/5EKB7tP7uq8SJUFL65po0Dn8fOPXk2+f
/2BYNRybn/rPz7ODHl00Gf7Pz7NHeiSaajkJaOFbGzR2uYzhvYI/YYMsAVm6
r2n5O0YZPcXu5mLYQ7e2rP6tWyIOFxTSI7wsCRiUtc4d4kLgl3c9KM+NgK/2
tjK2d1xg++XPDgcvEvA89uub4cUQiDjtK/kjkYBmESnPNNd0qLZWGZbBHmrk
3LnK26kCalxT2wPOM4HjYcnJCjM6UvUKnP4ej/vpk6b7t1k6YsWmz27MY8Jt
vROhaxrp6ECQ1u0KNRJ4+2iqB3RFUUX8wdO3THAeGDv79QL2kH+b3ti513h+
z26pNAlVRPknrGV/fyah3tFUZauuElpIj6u4tpQCbRn3sa3s94Dv09CCMPbQ
h9R+X3urIAhVD5b306OgUuhLq+7EAehtDFpptpuCxuGBwF5TbfAycKyMOUZB
sswj87+wDKw+/1hWG0KBKltA5n2LLsYKFC7bKUhAtuzTS9ukOhhG9KpbZqsJ
sC9Sc5hoZoPKZvUL2w0JuDx5oov/hxowVSNPue4n4DbHje7PR60hcEeZ2GNf
Agb8wkautPuCy1a5lRci8Xk6bjNt1BYHOm+m4/ixh4Q71QRNOJ8CLTmO1zac
CYqx70Gyho7CqkJdR9OYcHTwQeDEDB2fRxbqzbokKLw56JGSQEN3JqOhwZqE
6su2nl9u0dBTm+3ZB9rweaO12b2TpoRm+M8Iz42SsMy058hNUhHduPrF4twc
C/JTdiQKPMsGJe/qJd6iFEi/ePhyv2oUGNauPC+NPSRVWiUQsPQEWD7l3HHR
lILLTbkNz26ZQYmH5NXTBynIX77z4nd+BehulW6/dIaCQi2LamdPkmG1ONFY
FkOBeKYsXEnKYYTxt/s2LydAJ2q1G1ypZexXGhGrVCIg+atNxmZLitGMmgbX
Yw+9b+t2bP2jCJseiF/wsCWgQtCwTbfeDAL+KG5Xwx46cd+2/bnFMehKuJg3
docJz46LJGzCHqqRq3Yx1iJBbLpf0eUTDa19fWb/kx0kqDqeyYk4RUMiwobb
JhpISD/UbhfVrYh2M4ZuzQyQYPb8SPMmJSXkefLVhjmgoC3AQH0KbKAxaYe9
0z7sibz8Qzxpq0Bp2VazCG8KAppsWTbyCwyr4z88GddwnhN8/Sq4pppR64Pq
PosREPXMybtSuJexTj5RomM9AYFzfwZan/NC/t44iSPmBNw82vF3meFGKN/E
9/hVFBMuLt4NLRuhI53v4TIjWUxw1RjceW6UjmIdPs/uBhI6VxbmVh6noZ3x
NrzNH0goOH1wicAGJdSrt+25PPbQnm9LdkOHK2gxTQ5xYw9FG/eb+4gy4P6m
4ZLIIxREWW8ttL5IgxsJs3vPXaBAToJrm6rpCOPxutuLxo3/5gWj9ftXQw6c
985mv4s//YzR19GaHrWBgC2zgwXGyqLw4lC5+dGbTEg2vPj+2DQdOUdIbRUy
JkH7yYG/r3F/1r3IfenfQ0L58Qy+WJzH26dzT6ng3HKm6V7+N9ZnRqD2fi0b
AQJoBqt/HOFtZUg/qylxT2XCMfqz/HPzdLRrz9EtazaRwGYmyiecQUOMoW3c
hlYkiAS0iWhcx943XBZX1ULC8UBVRvVSJSS4/13h2RE8f7cU/xxnU0Jr5L7l
cfpTIGjrdvrRF4rRLp2rJR1Nwd/aJpmXuU8ZR69XLXok4f6JkE5QwPXSXqKp
uHo7Cd+umTxIOUpDR6+BbsBX3D/3vHrXrFFCfnZcKrynKFAfMdkZPckG7eG5
HanhFPweKLj/YUc9Q9ZN5PM+UQLGdzYtLP3QzSjqO1Sqro7PO0WLmyEey6Dw
9OypPlMCdjnmPXRW0YaO9jwD1RtMMJEcDNjVT0el1G/uQn0S9MoPxlifpqGh
ECHW+k4SqBsZbq3qSmiEkxzndqVAYkaF3WpCDCYOG011yeHzkz8+qi9qnBHn
r5/heYsJm/8c2Gj8h44k0zLzZc1ImL6k9bbhMA0lKk2fO/OFhAyOawOaG/F+
VK1Nd7lCgaf9mhdpTR2M5p0l3HbCBDi5P/z72Pk9g3xrIuJ+nwkrdsUIhk/R
kfjhyNe/20l4N2/39bQ8fv43tcP2cRTYLY6Yy5o8YKhLLzha8uJ8z86x/rBr
PcMwzeCARzITtvRfb67HeSm85eXNjRY4H3m3L7lzhoa2kuFTAd9I0FoyHBQh
iV/Pei3Hl+sUSPIksVtJljAeOrae8dUkwHWidxkVIAhHayt/TCFcD2PiH057
0FBxRryyx0cS6h7dlvmwSQnBqfu91H8878XQCHTGnndp6gyYUS5kpIjd3HoV
e14/Zbp/6fEBhnJJtHWWFgE86ip/hbYLg+uSJ+0C2PMOlhnC12P0gENxaQU3
9jxHxrfFxgZHYC2ZnZ8OxO9HnCPtWepF6A5byNuMPZ8Z+3uDkcQ9yDe7VXYe
e75EbHjjoW1lwOd9QVkfez7ksdWv25od4KQTwGaDPd/5QKmxiWcIuOr4tA5i
zxPF14m6xinw4KhteUZjwneBiYEjzznRpn59rXPY89FcMWnTx8QRw/IzW64j
E06uHbu5TVgW6fzlWfX5DBM8vmdJxEjQUbHotSfXsOdt8tTEluF8o9og+/gG
9rz63yKeGJxXfhlv+x2OPX9S4N2kMY2Osh0jSj9+ZgLnugqLgMdyyK7kQLsy
9rztVJLR/S3S6NqZC9sIQRKMFDS253aLo8LOwg1C2PON61zn+M+KIvX5S36r
sOcF0UB50hEacmv3lb+GPb+QEPPr2CwNzXmnbDiPPc9z9FNE9VJxNNjrkuqK
PX+mPe9VUYsUqvq2OTA9gwSN2LveykgeRa7JLPhcScILX5OBqe2KaPCTk9kt
7PmBC9n3tuH5sUZl7a4MgoSTssvT1UMUUYPezZxsHha0DtQqVvjIo67I/oxP
m1kg+AUuvhekof7hLWsLbFkQ52QkeuYuL+rtyVHp9WJB6J6nZWUlnEgj6Znv
YhgLNq892Zs4OgsM7kE1L+x599bygWd4bj8CMysP7PnCokPyD3kGwc3Q9K0D
9vx9svTX4ZvtIDmwtzjjO87be6onDpqVQ3nV39/fOSn4ZkZIIoN0GOEm7z6R
o2CFUJ3Y0M7LwDU+W9CwkYIlhwP2fk87BGdu3ZXt2UWBSfCYbGaULmQxDzI3
YM8fH+dYfahEEDSkHLUUsOeTIho9h54PMIR4qHr2/3i+s6yEufk/ns9+kNZy
Env+/gvNUxMlbxmnhE0Yd1QIkCrYGwhOs4wlrXZhnxkExJr85B8aUoFuvjul
3NjzDTFsL/+s3Ak8Vdq7ObDnxZaaeBpKnwLe6s1vRLHnO7bs22udFg1hHy+t
csCef/7zXPx2qRz4dVV/+CD2PKE5UqDYVgv7W/RCjLDn3/zkmnLM7AGD1f5C
DtjzYh/quj/L/YKZ9wqnr2PPh9mxdn1u/gvOMU080djzTiYL7N0eUuhPQnZE
7VGcb7JyQm4fl0ehGxZcSkKZUMszFP72IR3RPOLkwrHnkzZt2/gJe1660K0+
Cnt+U87xY73X6SjYkB7Kjz3f9/aiitV5SVSrYK/xR4YEruk/66KviKGLtNYm
Bex5n3a/SucyGuKzK2Tsx57XM16+3BXn/S7phjtB2PMK5pc2e3eIogWbDYd8
sefp54DpXiGB3M+sjKwqwPn/2I1XrhZ09CbvmW9FE/ZZfF9i2RTO+2dDtyZh
z2udX7WlSkgJLT9wk8r+S4KJw0cepTA6unVkyIh5lgUPj8tyn1RgQzPAWaeD
Pd/Wbeib8Bjvc/Lu9W7Y87OtjYqVZ8fgltccpxv2fE2ZhsSO2W5wvS7wNBB7
fkdO4MCPkjrIrXbZ0TDNghHXcpHf/k/ga5SaQbsQBa3lRc8z9OJAmtwgWbaa
AmKT4DfpIz7Qeiyor9OQgp/1Y6fLwBKsN2wMXIY9r9MZPEnJrwCRYDlOVez5
hLL5HoFdMwwNfQeKhj0fe/BDadfPIsblFqGe5//5/wd83mMrPLDn3zw6eo29
tZIRRvN6KYQ9X+lad1Ig8idD1JA1Ua1LQLnpiYQvpAzIR6yo5cGel9E8mS62
1Ai4T927Goo9vwJs3GOWusHioNTAEuz5+pgrX5ncV0FjPTrWdBf7XsDcRJP1
AFpHv7f+fEYAf2LTbYEfVbAh9cBuhD3fbx+uePXsB2hbf2bZx1ECPrybTArP
HwNZ0tBEF3veVjPzC2kth3oTQ+vMsec37WIEC3jS0WFGlFsE9vz2XxIl73A9
0V8a6Apgz5ecSlSIek5HWTvGt06LkVCZRfIprxRHkn6ILVEde/5JsZUrryi6
t+rOPgPseXiyMGaL51/K1D2HUOz53TmFO+f3iaI1XnkiO7Hnh5k1J9tyFFHY
Y+ar29jzjcZtkemaSkiquj99Jfa8yTb36JtCiojeRV8z+pIF1fX9p6vX9sGI
W3aFF/Z8h3Kcr/xsIwy2fwnWwZ5PXpXiMtJdDBYP42UdsecNzqyvuKmfBBcD
aT1FyhTsbf1i+Uv8HIyt2dpgiT1/33pox7y+Pbge8djJ3EOBIb1A4GvlenAo
Y5xbhz3vnHvDhqOMEzRyHG4mhVHAnD1YmO3dxtjetdf/DPa87hWx5E+MD4z9
gvJVytjzSzpWT22r54Lf+17Qp40JWMp5hYp7owFxMYI5HNjzzzIm9g5H2oKA
QKP8Rex5DoWgqijzMyBx70COMva83rmHIQnBCdAbXDP84xEBn/d/X7i5uRD4
VsXOd7zGHrihIOo92Ag9eiKtVtjzU+va5G1cFNDa9jNsK7DnIz+aHH7eifN9
7K3OMOx5jpsWdpEkHX1l1ShzYM/772yLezUlikYKD9x+uIWE9t4giV8Xaeh8
SKOyL/b8MraNdwqf0NCWV3LxltjzEz/7LBzx67lOvuxciz2vmmP1IV8F5xFz
idI72PMrTsUW/fmgiIae+DyIxJ5vMXrjNWDxCvyejorvx56XWyvCWDz1EHz9
Xx8xwp73tFnaVTcXASXudnYV6ymAknLHkjhPKMytpvZjzy9R/qRS7GkE+pwc
uQrY84ekqy9q2khBvcmf6/LY8xMup2zl038yNNoO7In6j+e7P+pbnv2P5yvs
I61csefRhELTgcJSRlz84p8mGQIsfqyr+xU3wpAJfJVStJGAv1FHpubZxcGw
3rORD3v+hmTa7qvbAELN36WbYM8nxgkUPFBxgbN+EScWggk4lZBp7Z8UAlwH
UvlCsOdvXZiI2cqbDpUS1TXFhTivt14+mz1UDsua6qeFsefDfR0rbhrS0fXV
fLzXsOeZviaXl2DPZxg+IVpymTAjWXX+SDO+vxlnpW2x50POM0tWgCgaFhYY
3YA9z7+/cGU09oLDjtWDNOz5z8vrT+0KUkTFBo+4bmPPR/ttLFnAng/V3nZN
GXs+V/egl9HNe1D4iqO8gE7BKtO/Ssa/g8CfR+YlL/Z8ceKGR2apDvDz76Xi
YRsKyk99fFPaog3se9o2amLPf+8tjQvhXA4aOJA4YM9/PU/fK1PwkTFX8Sfd
F3v+vv7bvsPx7QzXmIKFvlUEtG1057W1YIOFm+HvxwwIUBbJHjXRUoOSVtsC
Lux5OfF1JwXZrSFyZEHXAHved6frs2MOvhCr3qQriz3fNyBff9I/Dp7mKF3N
yCTg14kfxlF+T2AvR7nmz6tM8O/zYDhV09FEoOjZq9jzHcmDP17g+6f1Lb7g
MPa8TAT9YUsiDdV4MQrcsOf3Bhk4ld2koVutehlUKwnFxlMObfi8WfjaMpuE
PZ90+VO707QiitFV0RTGnh8IERB+rZMDjznOvF+OPf/02zElmYYoGMs12fRi
LQXeD5SKyZcnAEWmfpfAnt+8O9F0h7k51N+VERXFnj81Zkfz+6MAXoORZkrY
84cXRuwOUyRDg7t3hTX2/BWB7MDU/DyGwzXj2WPY8zkLkve/DdUwAuO6L+zB
npfOsEo1fcRi8C9T0WvdQsCOVipf+ooi/Nne/3IZ9rx/eW69rbYZhN/2OF7j
RcC86Qm9uw+OwpbdQq/DseeTWXWagH3WbLR05LMmCdnzK93c+mhoD6g2W2DP
v5VbYvT5BA3NRGoahWLP+785R7S+V0R7hbcEJ2LPe/q4x2xYoYT273B8H4s9
Tz/rHjFVbQOfmy2H/uzF75+fw6DcZjWUyORXrvb+3/k3wy/Hv8jQ8Out6Yqg
YDriyZfQPa8ZdyaLt5/HubDlOSWZs+4zwzLqWrAH9nzi26WZBf08MKnw4zgn
9vzjrOZxofwNwJayoW0/9nyDrTMlNUxHd7MkNcKw5xV1lZw7x+jozmWlCxMM
ElJlyYOBJ2lIS8hwyRHs+XSn/n3ftZTQZSX305VaFDzI7H7du/MIrGgZWLy3
k8I+izP+MceAoqNjRmrY880pKZlrhUVB6fGxdmns+aiKcJEd3KMMLkfbZZ/+
8+89RXc4uQ2yEzDsHdx47W0xQyFp1cxa7PnGxlr/pus0UFDY4ciDPf+h9+av
G9h7EdwNeflGJFicbju8iPuz8QZnljj2fA5XTUYJzuNP/yY3vryEz49zEens
p78wbJ62ljL5CbCynfz0Rq2FEeyzu2kp9nxqutWkIPbo3vMFla90SHDalvP5
y0Macj80c+brLhLmTz+etQ+nIfXK39f3Ys8fU++6rs6lhETXrb4rhT3fXonk
5fG6SmOPSsZpCmZPu388ETrFeKqYHFkYRUHkk2ddk8YFjDbzXaLLsef/ckpz
fMHenNX+Gle/Dfvk8ezeK540dMrxFl0Se76bz1lPaS3OZ0f9k3NOUmDT87OI
L4gdnkYnq+lizzOSi34Fsb1lkINhzrM0An7yTyRpinczOi1tFd6sI4A0ZVvT
n7cUWFt31wdizwe4MK/IPNQC8U1d7lWRTFgUFemy/UJH1dJwbRv2vDShvsMI
e7dxcfFHw3sSAsaOeXCvU0IzOlNnMg/j66ks2ZV7Sxz4Ojc6nsCeN7zdf1Kk
8jvjt3ZL2XLseaaqvsqzeToykLOll5uSEC6XVGl8+H95Y+dhCex5L6mzPhT2
/NM3svNzoRTo0d+vjw58x7j/dk3klBAB4su6G4xfvWPYX/2guhR7flr7w7jz
NB396TtfEYM9z+uVH8Uvi58/LvNyMpaCNx5+YTr7Mxlct32+/eTBfh5q2non
9w32eMfJZdjzb17ttJXA/Viw3WtJ506cf2Rah+JP05BhXf8XSez57i/KSEkG
v95eWYfT2PNHjFifv0qXMRpaqvt5sOfPHVk3N+opAH7jS07dwJ6nSv/yNOD9
uUMPlWPHnm+M4ZSww56/k3pwOPw/nv+edDRsexwTntJNjd1YdPSZTSV2Avvz
yf7u6J2uOL9rF/jbfcL3R4vtA/tmJbTtpw9llsKEyz71KptxvkuqOaG/LZEJ
K2Yle+1xfexQ1/fnwvXhNnyo1sadhs5xGjPt+0nofCTxbUBdCZ26F9jvcRX3
l1BpWIdnM6PTrSUmYCsJtbmVZ5vP01Di776vczgvhN+bO+a/Wgm9yv8xsC0B
eyZwkev2HB3dlCjgnMHnW4q/QZIX7p9Hd+e07XtJWDS1jz+LP9+pzj/5ani/
vELbyNXjnQzLGtrtDXi/CudvrVif0sFQ5JjaZZaOvfPXKV1kho4au/Y/fd1G
wg2FYO9P4vj5M/On6Hi/srZEsx8Lfczw7iYSze8yoWXUaWY93h9Ok7djQnh/
QpO/03R9cP27/RHMukbBY7XHO6ZcKhl8+ZlP9DQIcFYj5X/c5INwnXj/CiCh
177J38sLe17ysLB2FwmvI/ufauH62sR3rNHbmIRAfeWSAvx5qkf3fOjC86C5
64rfMTwPskqGcwsF8Pm4OK2pKdbGePZb+3497n/dVKkTw/h+ELSK7kvRFJzs
GXC+JvoUe3T9RAPuV6/Ftccs8ft9qBfy5Np2Ekq9Yn+WHqOhhaWKs7c6SfDW
/uJ6S0MJNbKsboA8dnmIeV72wQnGuud50W9xf4R2nDN5j+fLpNLvrUFmJBwe
aXr/v3qI25Ua9xH3R9XXMJ1DG5QQUbbVrPEKdlbUJeNC6Q6Gzx3Bmv99/6o5
Tk1ivdEDxpfBAtMGXN9P/jQaB+D6cLISVLptQcJQqa7Dl7M0RGzf+sg4Euez
8xzfAw8+YzinnPF0MsD9I6mRqozrp3VV5uo2XL/V1Wp0W5xXhtDwe+f//H6C
Ro1s3ea4f+uU4d6/sXgds/p/17/J+L/f7/F/X/+/9/d/6/8HMqGOOw==
   "], {{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1: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
8v5B
        "]]]}, {}, {}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
+j8+1P22
       "]], 
      LineBox[{182, 928, 675, 466, 324, 48, 833, 580, 371, 229, 143, 96, 49, 
       834, 581, 372, 230, 144, 97, 873, 620, 411, 269, 183, 929, 676, 467, 
       325, 996, 743, 534, 1040, 787, 1084, 50}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], 
      LineBox[{1086, 1085}]}}, {{}, {}, {}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
    "AxesInFront" -> True},
  PlotLabel->FormBox[
   "\"Probability density of the predicted value\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.638104801331352*^9, {3.6381057055089407`*^9, 3.638105766349047*^9}, 
   3.638120112623993*^9, 3.638120331679578*^9, 3.6381204132053213`*^9, 
   3.6381295305679607`*^9, 3.6381299914505796`*^9, {3.638130994062741*^9, 
   3.6381310388660192`*^9}, 3.638131625749048*^9}]
}, Open  ]],

Cell["\<\
This is the estimated probability density from the predicted data.\
\>", "Text",
 CellChangeTimes->{{3.638105798001503*^9, 3.6381058319471626`*^9}, {
  3.6381300061770053`*^9, 3.638130041791868*^9}}],

Cell["Descriptive statistics", "Item",
 CellChangeTimes->{{3.6381048365562143`*^9, 3.638104842546625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"stats", "=", 
   RowBox[{"{", 
    RowBox[{
    "Mean", ",", "Median", ",", "Variance", ",", "Min", ",", "Max", ",", 
     "Skewness", ",", "Kurtosis"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Through", "[", 
    RowBox[{"stats", "[", "newdata", "]"}], "]"}], ",", 
   RowBox[{"TableHeadings", "->", 
    RowBox[{"{", 
     RowBox[{"stats", ",", "None"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.638105279955793*^9, 3.638105472366531*^9}, {
  3.638105503909786*^9, 3.6381055205394154`*^9}, {3.638119522054156*^9, 
  3.6381196909244523`*^9}, {3.6381197257437134`*^9, 3.638119751639759*^9}, {
  3.6381202741934767`*^9, 3.638120306953534*^9}, {3.6381300065046062`*^9, 
  3.6381300069726067`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["Mean",
       HoldForm], "1.1408063910583233`"},
     {
      TagBox["Median",
       HoldForm], "1.1402665308696616`"},
     {
      TagBox["Variance",
       HoldForm], "0.0017027135870436012`"},
     {
      TagBox["Min",
       HoldForm], "1.0670766931793376`"},
     {
      TagBox["Max",
       HoldForm], "1.2177087166198537`"},
     {
      TagBox["Skewness",
       HoldForm], "0.03246792147965709`"},
     {
      TagBox["Kurtosis",
       HoldForm], "1.6322051041562868`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   OutputFormsDump`HeadedColumn],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{Mean, Median, Variance, Min, Max, Skewness, Kurtosis}, 
      None}]]]], "Output",
 CellChangeTimes->{
  3.638105473364933*^9, {3.6381055070141916`*^9, 3.63810552308222*^9}, {
   3.6381196693808146`*^9, 3.638119693935258*^9}, {3.6381197319837246`*^9, 
   3.638119752731761*^9}, 3.6381201261960173`*^9, {3.638120289653104*^9, 
   3.638120336671587*^9}, 3.6381204182129297`*^9, 3.6381295342339673`*^9, 
   3.6381300455982747`*^9, {3.6381310149511776`*^9, 3.63813104470043*^9}, 
   3.6381316312714577`*^9}]
}, Open  ]],

Cell["Histogram", "Item",
 CellChangeTimes->{{3.638105559305484*^9, 3.6381055609278865`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"newdata", ",", "25", ",", 
   RowBox[{"ChartStyle", "\[Rule]", "\"\<Rainbow\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.638105604483163*^9, 3.63810566532327*^9}, {
  3.638120380039663*^9, 3.6381203804608636`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.48299999999999993`], Thickness[Small]}], 
     {RGBColor[0.471412, 0.108766, 0.527016], RectangleBox[{1.065, 0}, {1.07, 1},
       RoundingRadius->0]}, 
     {RGBColor[
      0.30703786666666666`, 0.12476706666666668`, 0.6714478666666667], 
      RectangleBox[{1.075, 0}, {1.08, 2},
       RoundingRadius->0]}, 
     {RGBColor[0.2748608, 0.1822636, 0.7272788], RectangleBox[{1.08, 0}, {1.085, 9},
       RoundingRadius->0]}, 
     {RGBColor[0.2498416, 0.24350013333333334`, 0.7754095999999999], 
      RectangleBox[{1.085, 0}, {1.09, 8},
       RoundingRadius->0]}, 
     {RGBColor[0.246296, 0.31595666666666666`, 0.80044], 
      RectangleBox[{1.09, 0}, {1.095, 8},
       RoundingRadius->0]}, 
     {RGBColor[0.2484884, 0.3863264, 0.813373], RectangleBox[{1.095, 0}, {1.1, 6},
       RoundingRadius->0]}, 
     {RGBColor[
      0.26024413333333335`, 0.45321813333333333`, 0.8061436666666667], 
      RectangleBox[{1.1, 0}, {1.105, 6},
       RoundingRadius->0]}, 
     {RGBColor[0.27673453333333337`, 0.5130402666666667, 0.7857655333333334], 
      RectangleBox[{1.105, 0}, {1.11, 6},
       RoundingRadius->0]}, 
     {RGBColor[0.2979596, 0.5657928, 0.7522386000000001], 
      RectangleBox[{1.11, 0}, {1.115, 7},
       RoundingRadius->0]}, 
     {RGBColor[0.324106, 0.6089696666666666, 0.7083413333333334], 
      RectangleBox[{1.115, 0}, {1.12, 8},
       RoundingRadius->0]}, 
     {RGBColor[0.3532052, 0.6464011333333333, 0.6582218666666667], 
      RectangleBox[{1.12, 0}, {1.125, 6},
       RoundingRadius->0]}, 
     {RGBColor[0.38822480000000004`, 0.674195, 0.6035436000000001], 
      RectangleBox[{1.125, 0}, {1.13, 3},
       RoundingRadius->0]}, 
     {RGBColor[0.42521786666666667`, 0.6987763333333333, 0.5473457333333334], 
      RectangleBox[{1.13, 0}, {1.135, 2},
       RoundingRadius->0]}, 
     {RGBColor[0.46884366666666666`, 0.7149487999999999, 0.4938228], 
      RectangleBox[{1.135, 0}, {1.14, 3},
       RoundingRadius->0]}, 
     {RGBColor[0.513417, 0.72992, 0.440682], RectangleBox[{1.14, 0}, {1.145, 2},
       RoundingRadius->0]}, 
     {RGBColor[0.5636751333333334, 0.7372789333333334, 0.39689853333333336`], 
      RectangleBox[{1.145, 0}, {1.15, 5},
       RoundingRadius->0]}, 
     {RGBColor[0.6141434666666667, 0.7436428666666667, 0.3546266], 
      RectangleBox[{1.15, 0}, {1.155, 3},
       RoundingRadius->0]}, 
     {RGBColor[0.6660832000000001, 0.7430418, 0.32293540000000004`], 
      RectangleBox[{1.155, 0}, {1.16, 6},
       RoundingRadius->0]}, 
     {RGBColor[0.7169728000000001, 0.7397332666666666, 0.2940552666666667], 
      RectangleBox[{1.16, 0}, {1.165, 1},
       RoundingRadius->0]}, 
     {RGBColor[0.764712, 0.7283023333333333, 0.27360833333333334`], 
      RectangleBox[{1.165, 0}, {1.17, 2},
       RoundingRadius->0]}, 
     {RGBColor[0.8083416, 0.7110806, 0.255976], RectangleBox[{1.17, 0}, {1.175, 16},
       RoundingRadius->0]}, 
     {RGBColor[0.8451218666666667, 0.6842075333333333, 0.24303466666666665`], 
      RectangleBox[{1.175, 0}, {1.18, 9},
       RoundingRadius->0]}, 
     {RGBColor[0.8735125333333333, 0.647319, 0.2312248], 
      RectangleBox[{1.18, 0}, {1.185, 6},
       RoundingRadius->0]}, 
     {RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
      RectangleBox[{1.185, 0}, {1.19, 9},
       RoundingRadius->0]}, 
     {RGBColor[0.901627, 0.5398719999999999, 0.208366], 
      RectangleBox[{1.19, 0}, {1.195, 5},
       RoundingRadius->0]}, 
     {RGBColor[0.9026078, 0.47114559999999994`, 0.1952844], 
      RectangleBox[{1.195, 0}, {1.2, 2},
       RoundingRadius->0]}, 
     {RGBColor[0.8929546, 0.3896616, 0.1794008], 
      RectangleBox[{1.2, 0}, {1.205, 5},
       RoundingRadius->0]}, 
     {RGBColor[0.8684246, 0.21756040000000001`, 0.1472496], 
      RectangleBox[{1.21, 0}, {1.215, 3},
       RoundingRadius->0]}, 
     {RGBColor[0.857359, 0.131106, 0.132128], RectangleBox[{1.215, 0}, {1.22, 2},
       RoundingRadius->
        0]}}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.0618999999999998`, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{1.065, 1.22}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.638105634060815*^9, 3.638105667616474*^9}, 
   3.6381058448951855`*^9, {3.638120371818448*^9, 3.638120382442067*^9}, 
   3.6381204435161743`*^9, 3.638129537463173*^9, 3.6381300491394806`*^9, 
   3.638131017525182*^9, 3.638131047758035*^9, 3.638131634578664*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Alternative prediction methods", "Section",
 CellChangeTimes->{{3.6381206897002068`*^9, 3.6381206963770185`*^9}}],

Cell["\<\
We can test other prediction methods available in Predict command:\
\>", "Text",
 CellChangeTimes->{{3.638120708077039*^9, 3.638120738980693*^9}, {
  3.638120972247903*^9, 3.638120985523526*^9}}],

Cell["Linear regression", "Item",
 CellChangeTimes->{{3.6381209937603407`*^9, 3.63812100458076*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plinreg", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainset", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "validset"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<LinearRegression\>\""}], ",", 
    RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6381210402736225`*^9, 3.638121083735299*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["600", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.638121089522909*^9, 3.6381295419091806`*^9, 
  3.638130062430704*^9, 3.6381310532024446`*^9, 3.6381316400074735`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pmlin", "=", 
   RowBox[{"PredictorMeasurements", "[", 
    RowBox[{"plinreg", ",", "testset"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"pmlin", "[", "\"\<ResidualPlot\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.6381211558698254`*^9, 3.6381212275363517`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
F8BWx1V7le5i/SdNKx2mFsMx5tDt4X38vb2Lrr/SKwbmEpAxHdfzJumdk5JP
XIZ1K/UKq5Dte/9dLTX8Mujk+30wuI3lhTeKskZcgZhTrMHzDvZf8OduqeAK
nFtiPD8O+eDjeuUqs8vg4muRuxi/N0/l6F9XWHcZLO8pfnksef9dIfBuCiuG
+uvSbX+82tiADSE3BkEB2K+PTByG759Fu1cuNRcWQvvs7aVDJN9rfqIpp6Xz
QTPbefMavN5HOU/eeGlhEVw+eCgnrqqNKZ39WlE2qQjaDuw9/kJyf1gGbO3X
vwBWXHP7Zl6K44tMn6b7ogByWg8absf3A7t25TmW2wtBd+e1PqmS9bnKoDRj
bAHEzb0VYYn32yiX6tlPU7G+cbPf/sHn96nRj5SH7SqE9PtB2h/x++Xx8urN
00T5kPVCm52WfK95Gu0MH1QEwzRkVQvxe66mUkFj9PUCEAtf2eXg/SMa3X/r
wJJCiGmJSDXH+9EwMUHuzpEiKDevTJ2M9WnXeo737ZUHPWNfNDzA9WHx8LcW
lsPy4PZe05syOF/nxb4zVNpy4V/ZQ/U67F9bf++r3a/kwZP4oGNTcDwypiHK
z4blQ+7aI18PfMbx7b064fOGXAh0KM0zxuev8xsNBWOLHOjx79dgraHIH+2z
VhnlgXtvJ/OrfZF99EqKeufBn+y0nw/xuP3Ox87d6gtgkBpr/foLx2fqUWN3
B/uvE/z0z1ucD5lhuZFOBdBysH6kDrYnM/K6V4hUHvyQ9dyc2V3MLMtfpo5I
zwGDQX/uKf7E/pgUud0rygNRe2Z/a/w+tg94FzbgXC4Msl01UH+wmCU7OqZY
PM2B1VM/ZU4aI2ZFmqctPnzKAT+9n8LehpK/D0Y7rfXLh7OPhliNHy1mP7ea
tfRMy4f13goyhtheckOP1qDCHDDtedwr9y/2N/zQbRPPLFgzS83oi5yYNTk9
9rjzpQCurcxacm+4mLW8MH2vc6oYKjw3HLyuLmYBPcf0W9u/BCb3l0kLk/z/
pXBa3M67pSB/tmlM60Qs/zvzSNErgLE5L2PXjhezdXOf5dyTEcGBANlt0QvF
zNQhc/ZVnQpoPT1n0/sZYpYVs2L+OuTALYXDNEzE7I11eW8wL4dGrzV/5+uK
2bf9WeKjk8tBr/Z5mNw8yf9vbUnp2FYO2+c1XzBHdnF0StHvLIdRPeb33rBc
zJQLfG9/EZaDpZt2xIiNYjZ/q+db6VMiuP+4t8N0KzGr617TfqIR4KVDeeel
dWIWMqtGezrW92WeRt9/28Us/unaWafwfAOVrcWqznjcW0/XfWs53Fo0YmSd
rZgt9i30ucIqoCTI31G4Atv/Uv+792IRFPVQEcasFrPx80+9XPVTBLtSz879
gcd3zj/Ta/GWcshY3Tli5VYxe7Yhdc6SbSJQ3b9G/vZaMYtxcR1VEyyCeNn6
OKlD2H+vd7t79iqHPXd9evZHPjVeTU95kQiSZ1/29DmB7ScxlX1hZWB2Rv+8
8Wa8ftS/bTkrKIN1Kfrxrthfw+aBE/J2lMLSB2sO3twt+f/VOYsqG8ugyti3
7ecOMau5NHBBoa0I1g57sl4e+9M2/ovcaKNSuGt8XtfyKM6v4/yO1ZtFsElz
UfJJnI+Dsmd0848B9HitzT56iplS6WXT5mclYF5mXRmNLPhy4qYgtAQOx3rM
UIjG+2Net8RBUwCKjR1f3ziF11+xtWzlA4CEOsOgt0ewvq81BepPKsBW50mx
8Umc338ynrI/KmBR67J797G+xRpV9ZqHK0A6YNdR5RBsb4qz1/K35fDuybg7
20/jfFdekz1+qBxOvnewGn1ezAacmz9s/MhKKDYr+RCTgtfr62ER8z9XwNl0
WfXeMdiem02EVW052B5f37vuBl5/RSWNESYV4GPnvfTiVTGTibaZKptXDmYr
ulcEPMXrLVjO9tTiSuhMDF0okypmS32eJ7/YVwU2O9W1D5SIWc99NwcOPVoN
X7UjJt19gOWb5FxPjakCRfOWS9NviZnizvSs8APV8E2ld5VsvZj5TRlXr1lb
DX22PBq74qGYjR1qleUz+Sp4FI8fdPeemLl3xiw0nF4Fky1j1GVfSP5/ZqRc
9e8qWDLbaf2E/8QsT6Eh5ZWwCpKZxscNiu34vmBWlBFdBRtsDA/l9G5ndeEn
9a8EVkGH8XnjsA94vx1amFnavxrMagun237C+W1RDfG2uwqlGk3/Al/h/XW/
vnLTqmqo7RvXqNOO16t3slZLH+xPn60zb7zB80ufOo/XroYex/yPXbktZtMC
ekyOuFcJYYfUZyReE7Oj4t5KRR5VIP1zs3J5PvbPvMd6NVYNI1KiXgxJFrPN
59vidv5XDb/s+1e/EeH1uWtu2qc6nI9xddunv8Pfb+GOuoE/quFm8o0xgpe4
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
Yt7H4kI+FjH5WMTkYxGTj0VMPhYx72NxIR+LmHwsYvKxiMnHIiYfi5h8LGLy
sYjJx+Lb43wsYvKx+PY4H4uYfCx+Pjkfi5h8LGLysYjJxyImH4uYfCxi8rGI
ycciJh+LmHwsYvKxiMnHIiYfix8P52MRk49FTD4W3x/OxyImH4uYfCxi8rGI
ycciJh+Lnw/OxyImH4uYfCxi8rGIycciJh+LmPexuJCPRUw+FjH5WMTkYxGT
j0VMPhYx+VjE5GPx4yUfiwv5WMTkYxGTj0VMPhZ/PudjEZOPRUw+FjH5WMS8
j8WFfCxi8rGIycciJh+LmHwsYvKxiMnHIiYfi5j3sbiQj0VMPhY/Hs7HIiYf
i5h8LGLysYjJxyImH4ufH87HIiYfi5h8LGLysYjJxyImH4uYfCxi8rH49jgf
i5h8LGLysYjJxyImH4uYfCxi8rGIycciJh+LmHwsYvKxiMnH4uvnfCxi8rGI
eR+LC/lYxORjEZOPRdy1P1bX/lhd+2N17Y/VtT9W1/5YXftjde2P1bU/Vtf+
WF37Y3Xtj9W1P1bX/lhd+2N17Y/VtT9W1/5YXftjde2P1bU/Vtf+WF37Y3Xt
j9W1P1bX/lhd+2N17Y/VtT9W1/5YXftjde2P1bU/Vtf+WF37Y3Xtj9W1P9b/
Z3+s/wEzhKQF
    "], {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{602, 1}], LineBox[{603, 2}], LineBox[{604, 3}], 
       LineBox[{605, 4}], LineBox[{606, 5}], LineBox[{607, 6}], 
       LineBox[{608, 7}], LineBox[{609, 8}], LineBox[{610, 9}], 
       LineBox[{611, 10}], LineBox[{612, 11}], LineBox[{613, 12}], 
       LineBox[{614, 13}], LineBox[{617, 16}], LineBox[{618, 17}], 
       LineBox[{619, 18}], LineBox[{620, 19}], LineBox[{621, 20}], 
       LineBox[{622, 21}], LineBox[{623, 22}], LineBox[{624, 23}], 
       LineBox[{625, 24}], LineBox[{631, 30}], LineBox[{632, 31}], 
       LineBox[{633, 32}], LineBox[{634, 33}], LineBox[{635, 34}], 
       LineBox[{636, 35}], LineBox[{637, 36}], LineBox[{638, 37}], 
       LineBox[{639, 38}], LineBox[{640, 39}], LineBox[{641, 40}], 
       LineBox[{642, 41}], LineBox[{643, 42}], LineBox[{644, 43}], 
       LineBox[{645, 44}], LineBox[{646, 45}], LineBox[{647, 46}], 
       LineBox[{648, 47}], LineBox[{649, 48}], LineBox[{650, 49}], 
       LineBox[{651, 50}], LineBox[{652, 51}], LineBox[{653, 52}], 
       LineBox[{654, 53}], LineBox[{655, 54}], LineBox[{656, 55}], 
       LineBox[{657, 56}], LineBox[{658, 57}], LineBox[{659, 58}], 
       LineBox[{660, 59}], LineBox[{661, 60}], LineBox[{662, 61}], 
       LineBox[{663, 62}], LineBox[{664, 63}], LineBox[{665, 64}], 
       LineBox[{666, 65}], LineBox[{667, 66}], LineBox[{668, 67}], 
       LineBox[{669, 68}], LineBox[{670, 69}], LineBox[{671, 70}], 
       LineBox[{672, 71}], LineBox[{673, 72}], LineBox[{674, 73}], 
       LineBox[{675, 74}], LineBox[{676, 75}], LineBox[{677, 76}], 
       LineBox[{678, 77}], LineBox[{679, 78}], LineBox[{680, 79}], 
       LineBox[{681, 80}], LineBox[{682, 81}], LineBox[{683, 82}], 
       LineBox[{684, 83}], LineBox[{685, 84}], LineBox[{686, 85}], 
       LineBox[{687, 86}], LineBox[{688, 87}], LineBox[{689, 88}], 
       LineBox[{690, 89}], LineBox[{691, 90}], LineBox[{692, 91}], 
       LineBox[{693, 92}], LineBox[{694, 93}], LineBox[{695, 94}], 
       LineBox[{696, 95}], LineBox[{697, 96}], LineBox[{698, 97}], 
       LineBox[{699, 98}], LineBox[{700, 99}], LineBox[{701, 100}], 
       LineBox[{702, 101}], LineBox[{703, 102}], LineBox[{704, 103}], 
       LineBox[{705, 104}], LineBox[{706, 105}], LineBox[{707, 106}], 
       LineBox[{708, 107}], LineBox[{709, 108}], LineBox[{710, 109}], 
       LineBox[{711, 110}], LineBox[{712, 111}], LineBox[{713, 112}], 
       LineBox[{714, 113}], LineBox[{715, 114}], LineBox[{716, 115}], 
       LineBox[{717, 116}], LineBox[{718, 117}], LineBox[{719, 118}], 
       LineBox[{720, 119}], LineBox[{721, 120}], LineBox[{722, 121}], 
       LineBox[{723, 122}], LineBox[{724, 123}], LineBox[{725, 124}], 
       LineBox[{726, 125}], LineBox[{727, 126}], LineBox[{728, 127}], 
       LineBox[{729, 128}], LineBox[{730, 129}], LineBox[{731, 130}], 
       LineBox[{732, 131}], LineBox[{733, 132}], LineBox[{734, 133}], 
       LineBox[{735, 134}], LineBox[{736, 135}], LineBox[{737, 136}], 
       LineBox[{738, 137}], LineBox[{739, 138}], LineBox[{740, 139}], 
       LineBox[{741, 140}], LineBox[{742, 141}], LineBox[{743, 142}], 
       LineBox[{744, 143}], LineBox[{745, 144}], LineBox[{746, 145}], 
       LineBox[{747, 146}], LineBox[{748, 147}], LineBox[{749, 148}], 
       LineBox[{750, 149}], LineBox[{751, 150}], LineBox[{752, 151}], 
       LineBox[{753, 152}], LineBox[{755, 154}], LineBox[{756, 155}], 
       LineBox[{757, 156}], LineBox[{758, 157}], LineBox[{759, 158}], 
       LineBox[{760, 159}], LineBox[{761, 160}], LineBox[{762, 161}], 
       LineBox[{763, 162}], LineBox[{851, 250}], LineBox[{852, 251}], 
       LineBox[{853, 252}], LineBox[{854, 253}], LineBox[{855, 254}], 
       LineBox[{856, 255}], LineBox[{857, 256}], LineBox[{858, 257}], 
       LineBox[{862, 261}], LineBox[{863, 262}], LineBox[{864, 263}], 
       LineBox[{865, 264}], LineBox[{867, 266}], LineBox[{868, 267}], 
       LineBox[{870, 269}], LineBox[{871, 270}], LineBox[{872, 271}], 
       LineBox[{873, 272}], LineBox[{874, 273}], LineBox[{875, 274}], 
       LineBox[{876, 275}], LineBox[{877, 276}], LineBox[{878, 277}], 
       LineBox[{879, 278}], LineBox[{880, 279}], LineBox[{881, 280}], 
       LineBox[{882, 281}], LineBox[{883, 282}], LineBox[{884, 283}], 
       LineBox[{885, 284}], LineBox[{886, 285}], LineBox[{887, 286}], 
       LineBox[{888, 287}], LineBox[{889, 288}], LineBox[{890, 289}], 
       LineBox[{891, 290}], LineBox[{892, 291}], LineBox[{893, 292}], 
       LineBox[{894, 293}], LineBox[{895, 294}], LineBox[{896, 295}], 
       LineBox[{897, 296}], LineBox[{898, 297}], LineBox[{899, 298}], 
       LineBox[{900, 299}], LineBox[{901, 300}], LineBox[{902, 301}], 
       LineBox[{903, 302}], LineBox[{904, 303}], LineBox[{905, 304}], 
       LineBox[{906, 305}], LineBox[{909, 308}], LineBox[{910, 309}], 
       LineBox[{911, 310}], LineBox[{912, 311}], LineBox[{913, 312}], 
       LineBox[{916, 315}], LineBox[{920, 319}], LineBox[{922, 321}], 
       LineBox[{925, 324}], LineBox[{926, 325}], LineBox[{927, 326}], 
       LineBox[{928, 327}], LineBox[{929, 328}], LineBox[{930, 329}], 
       LineBox[{931, 330}], LineBox[{932, 331}], LineBox[{933, 332}], 
       LineBox[{934, 333}], LineBox[{935, 334}], LineBox[{936, 335}], 
       LineBox[{937, 336}], LineBox[{938, 337}], LineBox[{939, 338}], 
       LineBox[{940, 339}], LineBox[{941, 340}], LineBox[{942, 341}], 
       LineBox[{943, 342}], LineBox[{944, 343}], LineBox[{945, 344}], 
       LineBox[{946, 345}], LineBox[{947, 346}], LineBox[{948, 347}], 
       LineBox[{949, 348}], LineBox[{950, 349}], LineBox[{951, 350}], 
       LineBox[{952, 351}], LineBox[{954, 353}], LineBox[{955, 354}], 
       LineBox[{956, 355}], LineBox[{957, 356}], LineBox[{958, 357}], 
       LineBox[{959, 358}], LineBox[{960, 359}], LineBox[{961, 360}], 
       LineBox[{962, 361}], LineBox[{963, 362}], LineBox[{964, 363}], 
       LineBox[{965, 364}], LineBox[{966, 365}], LineBox[{967, 366}], 
       LineBox[{968, 367}], LineBox[{969, 368}], LineBox[{970, 369}], 
       LineBox[{971, 370}], LineBox[{972, 371}], LineBox[{973, 372}], 
       LineBox[{974, 373}], LineBox[{975, 374}], LineBox[{976, 375}], 
       LineBox[{977, 376}], LineBox[{978, 377}], LineBox[{979, 378}], 
       LineBox[{980, 379}], LineBox[{981, 380}], LineBox[{982, 381}], 
       LineBox[{983, 382}], LineBox[{984, 383}], LineBox[{985, 384}], 
       LineBox[{986, 385}], LineBox[{987, 386}], LineBox[{988, 387}], 
       LineBox[{989, 388}], LineBox[{990, 389}], LineBox[{991, 390}], 
       LineBox[{992, 391}], LineBox[{993, 392}], LineBox[{994, 393}], 
       LineBox[{995, 394}], LineBox[{996, 395}], LineBox[{997, 396}], 
       LineBox[{998, 397}], LineBox[{999, 398}], LineBox[{1000, 399}], 
       LineBox[{1001, 400}], LineBox[{1002, 401}], LineBox[{1003, 402}], 
       LineBox[{1004, 403}], LineBox[{1005, 404}], LineBox[{1006, 405}], 
       LineBox[{1007, 406}], LineBox[{1008, 407}], LineBox[{1009, 408}], 
       LineBox[{1010, 409}], LineBox[{1011, 410}], LineBox[{1012, 411}], 
       LineBox[{1013, 412}], LineBox[{1014, 413}], LineBox[{1015, 414}], 
       LineBox[{1016, 415}], LineBox[{1017, 416}], LineBox[{1018, 417}], 
       LineBox[{1019, 418}], LineBox[{1020, 419}], LineBox[{1021, 420}], 
       LineBox[{1022, 421}], LineBox[{1023, 422}], LineBox[{1024, 423}], 
       LineBox[{1025, 424}], LineBox[{1026, 425}], LineBox[{1027, 426}], 
       LineBox[{1028, 427}], LineBox[{1029, 428}], LineBox[{1030, 429}], 
       LineBox[{1031, 430}], LineBox[{1032, 431}], LineBox[{1033, 432}], 
       LineBox[{1034, 433}], LineBox[{1035, 434}], LineBox[{1036, 435}], 
       LineBox[{1037, 436}], LineBox[{1038, 437}], LineBox[{1039, 438}], 
       LineBox[{1040, 439}], LineBox[{1041, 440}], LineBox[{1042, 441}], 
       LineBox[{1043, 442}], LineBox[{1044, 443}], LineBox[{1045, 444}], 
       LineBox[{1046, 445}], LineBox[{1047, 446}], LineBox[{1048, 447}], 
       LineBox[{1049, 448}], LineBox[{1050, 449}], LineBox[{1051, 450}], 
       LineBox[{1052, 451}], LineBox[{1053, 452}], LineBox[{1054, 453}], 
       LineBox[{1055, 454}], LineBox[{1056, 455}], LineBox[{1057, 456}], 
       LineBox[{1058, 457}], LineBox[{1059, 458}], LineBox[{1060, 459}], 
       LineBox[{1061, 460}], LineBox[{1062, 461}], LineBox[{1063, 462}], 
       LineBox[{1064, 463}], LineBox[{1065, 464}], LineBox[{1066, 465}], 
       LineBox[{1067, 466}], LineBox[{1068, 467}], LineBox[{1069, 468}], 
       LineBox[{1070, 469}], LineBox[{1071, 470}], LineBox[{1072, 471}], 
       LineBox[{1073, 472}], LineBox[{1074, 473}], LineBox[{1075, 474}], 
       LineBox[{1076, 475}], LineBox[{1077, 476}], LineBox[{1078, 477}], 
       LineBox[{1079, 478}], LineBox[{1080, 479}], LineBox[{1081, 480}], 
       LineBox[{1082, 481}], LineBox[{1083, 482}], LineBox[{1084, 483}], 
       LineBox[{1085, 484}], LineBox[{1086, 485}], LineBox[{1087, 486}], 
       LineBox[{1088, 487}], LineBox[{1089, 488}], LineBox[{1090, 489}], 
       LineBox[{1091, 490}], LineBox[{1092, 491}], LineBox[{1093, 492}], 
       LineBox[{1094, 493}], LineBox[{1095, 494}], LineBox[{1096, 495}], 
       LineBox[{1097, 496}], LineBox[{1098, 497}], LineBox[{1099, 498}], 
       LineBox[{1100, 499}], LineBox[{1101, 500}], LineBox[{1102, 501}], 
       LineBox[{1103, 502}], LineBox[{1104, 503}], LineBox[{1105, 504}], 
       LineBox[{1106, 505}], LineBox[{1107, 506}], LineBox[{1108, 507}], 
       LineBox[{1109, 508}], LineBox[{1110, 509}], LineBox[{1111, 510}], 
       LineBox[{1112, 511}], LineBox[{1113, 512}], LineBox[{1114, 513}], 
       LineBox[{1115, 514}], LineBox[{1116, 515}], LineBox[{1117, 516}], 
       LineBox[{1118, 517}], LineBox[{1119, 518}], LineBox[{1120, 519}], 
       LineBox[{1121, 520}], LineBox[{1122, 521}], LineBox[{1123, 522}], 
       LineBox[{1124, 523}], LineBox[{1125, 524}], LineBox[{1126, 525}], 
       LineBox[{1127, 526}], LineBox[{1128, 527}], LineBox[{1129, 528}], 
       LineBox[{1130, 529}], LineBox[{1131, 530}], LineBox[{1132, 531}], 
       LineBox[{1133, 532}], LineBox[{1134, 533}], LineBox[{1135, 534}], 
       LineBox[{1136, 535}], LineBox[{1137, 536}], LineBox[{1138, 537}], 
       LineBox[{1139, 538}], LineBox[{1140, 539}], LineBox[{1141, 540}], 
       LineBox[{1142, 541}], LineBox[{1143, 542}], LineBox[{1144, 543}], 
       LineBox[{1145, 544}], LineBox[{1146, 545}], LineBox[{1147, 546}], 
       LineBox[{1148, 547}], LineBox[{1149, 548}], LineBox[{1150, 549}], 
       LineBox[{1151, 550}], LineBox[{1152, 551}], LineBox[{1153, 552}], 
       LineBox[{1154, 553}], LineBox[{1155, 554}], LineBox[{1156, 555}], 
       LineBox[{1157, 556}], LineBox[{1158, 557}], LineBox[{1159, 558}], 
       LineBox[{1160, 559}], LineBox[{1161, 560}], LineBox[{1162, 561}], 
       LineBox[{1163, 562}], LineBox[{1164, 563}], LineBox[{1165, 564}], 
       LineBox[{1166, 565}], LineBox[{1167, 566}], LineBox[{1168, 567}], 
       LineBox[{1169, 568}], LineBox[{1170, 569}], LineBox[{1171, 570}], 
       LineBox[{1172, 571}], LineBox[{1173, 572}], LineBox[{1174, 573}], 
       LineBox[{1175, 574}], LineBox[{1176, 575}], LineBox[{1177, 576}], 
       LineBox[{1178, 577}], LineBox[{1179, 578}], LineBox[{1180, 579}], 
       LineBox[{1181, 580}], LineBox[{1182, 581}], LineBox[{1183, 582}], 
       LineBox[{1184, 583}], LineBox[{1185, 584}], LineBox[{1186, 585}], 
       LineBox[{1187, 586}], LineBox[{1188, 587}], LineBox[{1189, 588}], 
       LineBox[{1190, 589}], LineBox[{1191, 590}], LineBox[{1192, 591}], 
       LineBox[{1193, 592}], LineBox[{1194, 593}], LineBox[{1195, 594}], 
       LineBox[{1196, 595}], LineBox[{1197, 596}], LineBox[{1198, 597}], 
       LineBox[{1199, 598}], LineBox[{1200, 599}], LineBox[{1201, 600}], 
       LineBox[{1202, 601}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{615, 14}], LineBox[{616, 15}], LineBox[{626, 25}], 
       LineBox[{627, 26}], LineBox[{628, 27}], LineBox[{629, 28}], 
       LineBox[{630, 29}], LineBox[{754, 153}], LineBox[{764, 163}], 
       LineBox[{765, 164}], LineBox[{766, 165}], LineBox[{767, 166}], 
       LineBox[{768, 167}], LineBox[{769, 168}], LineBox[{770, 169}], 
       LineBox[{771, 170}], LineBox[{772, 171}], LineBox[{773, 172}], 
       LineBox[{774, 173}], LineBox[{775, 174}], LineBox[{776, 175}], 
       LineBox[{777, 176}], LineBox[{778, 177}], LineBox[{779, 178}], 
       LineBox[{780, 179}], LineBox[{781, 180}], LineBox[{782, 181}], 
       LineBox[{783, 182}], LineBox[{784, 183}], LineBox[{785, 184}], 
       LineBox[{786, 185}], LineBox[{787, 186}], LineBox[{788, 187}], 
       LineBox[{789, 188}], LineBox[{790, 189}], LineBox[{791, 190}], 
       LineBox[{792, 191}], LineBox[{793, 192}], LineBox[{794, 193}], 
       LineBox[{795, 194}], LineBox[{796, 195}], LineBox[{797, 196}], 
       LineBox[{798, 197}], LineBox[{799, 198}], LineBox[{800, 199}], 
       LineBox[{801, 200}], LineBox[{802, 201}], LineBox[{803, 202}], 
       LineBox[{804, 203}], LineBox[{805, 204}], LineBox[{806, 205}], 
       LineBox[{807, 206}], LineBox[{808, 207}], LineBox[{809, 208}], 
       LineBox[{810, 209}], LineBox[{811, 210}], LineBox[{812, 211}], 
       LineBox[{813, 212}], LineBox[{814, 213}], LineBox[{815, 214}], 
       LineBox[{816, 215}], LineBox[{817, 216}], LineBox[{818, 217}], 
       LineBox[{819, 218}], LineBox[{820, 219}], LineBox[{821, 220}], 
       LineBox[{822, 221}], LineBox[{823, 222}], LineBox[{824, 223}], 
       LineBox[{825, 224}], LineBox[{826, 225}], LineBox[{827, 226}], 
       LineBox[{828, 227}], LineBox[{829, 228}], LineBox[{830, 229}], 
       LineBox[{831, 230}], LineBox[{832, 231}], LineBox[{833, 232}], 
       LineBox[{834, 233}], LineBox[{835, 234}], LineBox[{836, 235}], 
       LineBox[{837, 236}], LineBox[{838, 237}], LineBox[{839, 238}], 
       LineBox[{840, 239}], LineBox[{841, 240}], LineBox[{842, 241}], 
       LineBox[{843, 242}], LineBox[{844, 243}], LineBox[{845, 244}], 
       LineBox[{846, 245}], LineBox[{847, 246}], LineBox[{848, 247}], 
       LineBox[{849, 248}], LineBox[{850, 249}], LineBox[{859, 258}], 
       LineBox[{860, 259}], LineBox[{861, 260}], LineBox[{866, 265}], 
       LineBox[{869, 268}], LineBox[{907, 306}], LineBox[{908, 307}], 
       LineBox[{914, 313}], LineBox[{915, 314}], LineBox[{917, 316}], 
       LineBox[{918, 317}], LineBox[{919, 318}], LineBox[{921, 320}], 
       LineBox[{923, 322}], LineBox[{924, 323}], LineBox[{953, 352}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.008333333333333333], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwN02PDHgQAAMBnfMdmW81sttmabTfbtu2Gmm3btm3bVvfhfsIladi2Yptg
gUCgRvBAYF3IQGA9G9jIJjazha1sYzs72MkudrOHvexjPwc4yCEOc4SjHOM4
JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1uc4e73OM+D3jIIx7zhKc84zkv
eMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJLwKhAoFgBCcEIQlFaIIIQ1jCEZ4I
ROQ3IhGZKEQlGtGJQUxiEZs4xCUe8UlAQhKRmCQkJRnJScHvpCQVqUlDWtKR
ngxkJBOZycIfZCUb2clBTnKRmzzkJR/5KUBBClGYIhSlGMUpQUlKUZoy/ElZ
/qIc5alARSpRmSpUpRrVqUFNalGbOtSlHvVpQEMa0ZgmNKUZf9OcFrSkFa1p
Q1va0Z4OdKQTnelCV7rRnR70pBe96UNf+tGfAQxkEIMZwlCGMZwRjGQUoxnD
WMYxnglMZBKTmcJUpjGdf5jBTGYxm3/5jznMZR7zWcBCFrGYJSxlGctZwUpW
sZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgjHOUYxznBSU5x
mjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc85RnPecFLXvGa
N7zlHe/5wEc+8ZkvfOUb3/nBT34RCO0/wQlBSEIRmiDCEJZwhCcCEfmNSEQm
ClGJRnRiEJNYxCYOcYlHfBKQkEQkJglJSUZyUvA7KUlFatKQlnSkJwMZyURm
svAHWclGdnKQk1zkJg95yUd+ClCQQhSmCEUpRnFKUJJSlKYMf1KWvyhHeSpQ
kUpUpgpVqUZ1alCTWtSmDnWpR30a0JBGNKYJTWnG3zSnBS1pRWva0JZ2tKcD
HelEZ7rQlW50pwc96UVv+tCXfvRnAAMZxGCGMJRhDGcEIxnFaMYwlnGMZwIT
mcRkpjCVaUznH2Ywk1nM5l/+Yw5zmcd8FrCQRSxmCUtZxnJWsJJVrGYNa1nH
ejawkU1sZgtb2cZ2drCTXexmD3vZx34OcJBDHOYIRznGcU5wklOc5gxnOcd5
LnCRS1zmCle5xnVucJNb3OYOd7nHfR7wkEc85glPecZzXvCSV7zmDW95x3s+
8JFPfOYLX/nGd37wk18EgvwnOCEISShCE0QYwhKO8PwPe4pPLQ==
        "]]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.9867857318894185, 0},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"actual value - predicted value\"", TraditionalForm], None}, {
     FormBox["\"predicted value\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0.9892689698288821, 1.1481961979545603`}, {-0.1835621425598291,
    0.1835621425598291}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.638121229002754*^9, 3.6381295444831853`*^9, 
  3.638130065254309*^9, 3.6381310560104494`*^9, 3.6381316428622785`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plinreg", "[", 
  RowBox[{
   RowBox[{"Drop", "[", 
    RowBox[{"init", ",", 
     RowBox[{"-", "1"}]}], "]"}], ",", "\"\<Distribution\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.638121308609694*^9, 3.638121354348974*^9}}],

Cell[BoxData[
 RowBox[{"NormalDistribution", "[", 
  RowBox[{"1.0992521176807417`", ",", "0.07690713013207398`"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.638121355503376*^9, 3.638129548757593*^9, 
  3.638130069310316*^9, 3.638131646029084*^9}]
}, Open  ]],

Cell["\<\
We observe higher predicted value and higher volatility relative to Random \
Forest\
\>", "Text",
 CellChangeTimes->{{3.6381213955798464`*^9, 3.638121423706696*^9}, 
   3.6381303488628073`*^9}],

Cell["NearestNeighbors", "Item",
 CellChangeTimes->{{3.6381214319123106`*^9, 3.6381214575275555`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pnn", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainset", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "validset"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<NearestNeighbors\>\""}], ",", 
    RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.638121473158783*^9, 3.6381215736041594`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["600", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6381215751485624`*^9, 3.638129558991211*^9, 
  3.6381300750667267`*^9, 3.6381310604096575`*^9, 3.638131650116291*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pnntest", "=", 
   RowBox[{"PredictorMeasurements", "[", 
    RowBox[{"pnn", ",", "testset"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"pnntest", "[", "\"\<ResidualPlot\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.638121593650195*^9, 3.638121640855878*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
DmYgiWFjNvpWk/qrTZu8cxPR5jDbpQaEWZ1fA4ys41FsaYHV20oy3+28yU/b
o9DiHeW/9GsF+31TlRXqIXS+LO9qlfH6B5FMwsUiqRrCKezsphUOmP3Hy7Xl
gv3Xa4sPBttWIOXt+5xqBO3/uHxYb50lXV+cS3f6+o/0x8CsIYGF51+dxs3j
VNJ8Be0rHNnQsu8ok+cf8ftkZETrs1hFsjojVZg82/r9w2kzmLyW7F0Pn83M
+uabnm8v3UbXH0tn3hRPx4NMfmNJ7dsbhzDNv/Fb2OhghzNYGas1Bc/Lg73q
Oyt34uc5yQ8asgg/t5jnG+eCoT679uSip4tDsd/N60duFpHr167hq+0chB0X
+AVHCvZL05enLD98FCsb5XnpCNbro9/7TAy30/qsIwanC6eFYvp87j1UP8vD
EydOLn25JoDw5bbJpTt8kNKSKy+1BPsfg2Vd9Vu90NrHxmkbBc+D8u7ae/UW
aM5ufvfCDDIe1zXLb64NwcDNnOLgoLtc2j471m713fHReJb5RvcrgvbnmOuM
nuiEK+svBoYInpfhxxdE3HBBgWbXRj0RPJ8fpw97ePIYnQ9rR9nyp7xgHDl1
VlctJjzb4GDlwSB6P9i1UR/SxkVR5u0gG9zQWKa8nC7/xFIuc/+CHs4udU3E
W29cXdHvOlm/A+e7yK9JonnlaYHTFw5Ko3m+/Khf3t8zKLODJhx0SM6i5dVy
g5JnL8yjbOGQbn3UNpvyifUuL2JKC+h608DH7tqeP0fzQxR+pY4/Wkg5fXVp
w/luJs/+YWV+w59h/a9jXs9+zLB11VnDXxIFzPh/OM+MnMr0X7tX0mL/wwx6
f+xClsxZdCuL3h9Oo6HJFod0mue+/WuRnU0q/qKkEReZSPJD2i+9OZGOD6gP
i9hM3mesyhAH5+pYys0rQ9w4Cgk48d0c1fgo0n65C+KmpjD3N3zS+5JJERju
L7vqxX5Frzjs3+hbonOS3K+6d0U1xmewMvfNsXnBpPyUlv56auF4a3jYjodk
P8yS+T1lkWoAnrXpTN4AD8H3ocHkj/mWCNrnBK/coKB5GjtqWJZEeJO8+aNV
Z7f44vr5Afk/7AX3u+Loj+hFSOXYwyWppD5HHvukDj6GB95ILHIl+yUO53ne
6W0nUfebx5cF+yteUNfWvfrBlFn6sou8/OPRpTfSh88akvKf3VIrSqKR/PqB
v/42Ifnmbc+1/ANRetu6AklzktdsXfL0ji+C9lnNTk6q0geRteyE5Tpkv8xy
03xy5ow1Wn7up4bHXsH1VBw59ZAvclaReq6qT+7f3sc+j7qTkXZWfrzOKnJ9
x8lWJbO5aLmQeTPrdlaMT0TW/R7MrSf7f2VfW4cFU5OQ/pK5T/rpkv5LLtq+
n5aCfgwyLe1aQ3jr7ZNmGglo+t6hV8yWk/XZdFzCqCoZWRa5zWgj5ZulrO/d
bU1E/OdcyeXjSHtq/Q6bvM5Eaq0zN+XPJeV9rnne2p6GIgZ/N1ScT8Z7ds/2
OsMElG63LPwTEvx9r7JhLycUeSmcRX9pkv5u4rdHlp5Eytp7rl39k+TXxL2J
WXMWjYu9naAkR/jJ+92KJWnIv23Hjc1k/8y7dr07qjCR5i3i2upkl6eg3yn3
LIYuI/mvv54/KY1Dn3fLsT3Xk/VzXKts1qBw5B40RkNSgfDhtMcXJkSivLjP
DnVTCD+retNHPQLVpE2Vx4pkPLNvGLleiqJ5nnz4oBMS4ejTqrcFt5aS8dzY
UDP9hQPaWjlEcu0CUr/g06wHX0LQhOBdv9erkPJbqme8aglDdWp+Hv7zSJ7d
91TA6RD0R0fKlkjB76dnrnbKbc7oFe+e2SYyXk71YvZyEz+m/M/Xxqtqw1Ha
r77j+OR68KJ8t6nMCkILWjePN2MLvnfyoaq5jtgoyd9gkimpr6bU/O1+EO7j
0mL0fiNh9XWxzVeDsUbYyIodZL/O/1CjJ6WfgFVzL6/aQvb3+rxRhzIbU2g+
/37y2plqKXhadUvlEMH6+77e0HFaMpYwfpDeKSif3tX4MTAJ15bXWkRuEfw9
ztJPbmYSrtPvrjluRK6/vX5cWmQClle5rHCTjEdfLatz1Jwkypxf3enV/dJo
/aAD1WztlgzsEvv3YZ3NhF2G/LhZmUyZ/aGfbdmrFPxVM8DiEZmPxecFUl3P
E/HAGZU/XpLnib2uUi97RQxeuHx4aL8N5P1hcqdyjHwyLrilndlK7rfya49s
pXHZePSibDsZst7sFnXPinqQjO0PZ5alaZG8X6eh26QEbHB60jijYYK/H69O
rOvrjX+p83+vHSB4/lu9fKTJz0u3vzKNJAgryrC3R9vgzbaeM/Y0kd+XvyzN
ZEINUWSUaqLHU8LbOaaVjxxRk0rkgEbC7D9qPDyv+aDYrnffi5vbEcdK87Xv
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
6Sit/FZTRvn1lZD92oolWKKtoqqa9KfGK7ZpGVqC/a7L7c9vI/1lvdNTf1SC
R5eu5n55S/aPrtwr6enF+M59/wfqsh3I4lKV1aUtpdjm1LaXb807UKcbJ2B1
Jg/b2S6xlVjdgRwHmljE6JXj4SEDBhU/I+2NmbN5QEQZVhg1JzFQ8P9x95ee
8FctwxtnuqWMJ/1ppI/0qrhehq2tnY+53CT354ZPdP+lJfjZ2wteuk185PJV
5XuoTxlOaujmTL1DyvuE9i3svIhbFmtOso0m7B6doDfhIpb61pXaEUHGW2Pu
lCZfiqXOtzfevk+uj8edKyc/l+HEFTGhJwLIfHcen+NyuxDXL/109kaS4P8X
vprMri7Gl6YvVMXkeuhrJb/MHlmET25cl/ZHPh+Z9vHqsphzDh+U7zS5+46M
b+zmO8/Hn8Orkt1qPjWT+ejLvc11zMQ7NxdpTHlK1ndiYX5UaB4O0XuwTp/8
HlUurck17ROO5d2DTP1UyfeEFzt/XooXdmj0fJa2lqyny+sePesOxid5x8ay
yPeHZXf+3sWXm/EL48mDn7IIt+CCKywL9Nn5nYJ3X/J8PV9zIPS+N17yY2z5
yn4kL+udGjvkENZE8VhLwFUFy8t9bRl2kz3z52oTVD7pGGsleV5Y+e+tvrQu
x9UbXLxTLQm/nNGc1d8Kn9NeMmW+QQdq1rw71dExG9dG7DI5d4es152pZzcq
lJLxbZLNVexA7PaHcmnP03BGsspt9tGPyFTuQcAApXIsm3xee+SLDlSbXT1d
WesSXuH1aung9x1I2eBnc3b4Jfxx4ci5V3EHyj800oc36yIe05pk6Xymg3xf
DAofLSjFetJWM144k/6d3o8zbL5Ay/Pkqr6UjcI4ZEdLiMqCj2jaGLPXw25f
xU8m134YySPrUfG78UAJHpbJ65S5Sd5HzSrntSSbM7GOaozyY6MONO2A3c3k
gEvY3ue37/tbpP3MhT89mnk0f9O9uLph/0X8+F57lHsKae/uneDhujxsr7P1
ZH+tDvQtS9vjSXUJvl6ppmBZKXh/nbpVsjsH2zT08w94Ifh7iyNrr3oeljLd
dve3F1k/TRHrZbOTaHkOWnzopWIK3v9X3d4mTXI9fmqP75tdgD31pq97Q/Ls
jnH9X8dmYn9pK9e8drI+g7Utmwbm4W9VkjmuLh1I7cDQVYatxbg44rfPimkd
yC6m6AXSOY81DVwv6Pwg9cMuWRj3KcDjlE8GPPYkPOBUg+2uSDxp2bolGYvI
eO/tSe7OPoEjmx5vvU++VyzZx5WSUVtRUd/yt9avCJ8e3GoavRnJ4KwVjoLv
1aenCfd0nTHlE/OL1YY7o93u0rtvCP6+0K3u1XHcAW9KkbNtJvsNjtTmK4mJ
jmhC54s5914Stphwm99xCle3GQ5lkd9nvM7sYR+Px+B+uSXmBeT3icXJPX/e
KOTSPLtrxbwAgxTc3CpZOZzsb7g7sMqOx5k0z8n48tqMlY75ei/lbpHx145/
P9tGIxl7FE7nlfYT/L7VnWg+KRFvq5/sIkl+byp7WiYo+Ydg/xIT20/keeIk
l9iHFgThA26taw6Q77lFRk1Kq2oI7jstaYZjOxmfrsynorIYrL8qL89e8H1c
V6vB1o9lfAJh/F9zgwhTH0sY1McQw+Bb/VPuqb1/y6LzoT7RP6xP/Yr/0Hj+
bf+i5f/t/aM+lpj2euKerh/1l/4/mfpXYpj6UP+Qe+rvf1u+p/qiedH5iK6n
f8ui7fe0Xnvi//Tz1tPz97/lf/v8/Kfbpz6UGBa9vqL3H3wsYOpjCQN8JGDR
+y3an+j6E82Ljv/frnfR8fQ0XvCxgMHHElf/3/YHPhYw+FPA4GMBU/9KDIvW
F2XwsYDBxwIGHwuY+ljCoD6WMMDHAqY+ljCojyUM6mMJg/pYMB7wsYQBPhYw
+FjA1McSBvhYwOBj0fELfSxg8LGAqY8lDPCvxDH4WMDgYwGDfyWOwccCBh8L
GHwsyuBjCQN8LGDwsYDBxwKmPpYwwMcCBh8LGHwsYOpfiWHqYwkDfCxx/YOP
BQw+FjD4WHS8Qv9KHFMfSwyDjwVM/SsxDP4TMPhYwB4iedHyovme+hMt31P7
ovWpjyWGeypPfSwx5cHHAgbf6p8y+FjA4GMBg18ljsHHEpenvocwqA8iDMZ3
+e+gPpYwwAcCBh8LGHwsYPCxgKnvIgzqY4lh8LGAqY8lDOpjCQN8LNoe+FjC
AB8LGHws2r7QxwIGPwoYfCxg6icJA3wsYPCxgMG/Esei/YGPBSx6/cHHAgYf
i/Yv9LGAwccCpj6WMMDHAqY+lpj5Uh9LGNTHEgb1sYQhur5EmfpY/7B8Tyy6
vkXXX0956mMJg/pYYuqDjwVM/SW4HuBjiakv+nxSH0sY4GMBUx9LGODviGPR
9qmPJQzq6wiD+lhi5kP9KmH0dD96Kg9+1T/N91T+/3q9/Vvu6f6I5sHHAqY+
lhgGHwu4p/sLPhYw9bGEQX0sYVAfS0z71McSBvWxhAE+FjD1pYRB/SsxDD4W
MPWxhAE+lrj2qY8lDOpjCQN8LGDwsWh5EQYfCxh8LGDwsYDBxwIGHwsYfCxg
8LGAqY8F8wUfSxjgYwFTH0sY1McSBvhY4vLgYwGDjwUMPhYw+FbA4GOJy1Mf
SxjgYwGDjwUMfhUw9bGEAT6WuPLgYwFTH0sY4GMBg48FDL4VMPhY4vLUxxIG
+FjA1MeC8Qp9LGDwr8SxaH3wr8Qx+FjA4GMBg48FDD4WMPhYwOBjAVMfSxjU
xxIG9bGEQX0sYVAfSxjgYwGDjwVMfR4xTH0sYVC/QEx56huIYepjCYP6WMKg
PpaY+j2NF/wgcUz9KzH8b+fT0/XIEJkv+FfiWLQ8+Fji8j1dD9Hy/7Y++FDA
ovdL9PqCjwUMPhQw+FjA4GMBg48lrn/wsYDBxxI3ftH+wccSNx/R+qL5ntZD
T+tddH2LMvhY4vrv6fkQXY+iefCJgMHHEpcXZfCxgMHHAgYfCxh8LFpe6GMB
Ux9LGOBj/dP5UB9LGNRfEgb4WMDgYwGDjwVMfSwx/YteD9H+RMv3NH7RPPhY
/7R90Tz4WMDgYwGDDwUMPpa4PPhYwOBXAYOPBQw+lrjyou2DjwVMfSxhgC8l
jsHHovMV2a+BjwUMPpa49sDHAgYfCxj8JWDwsYDBxwIGHwsYfCxg8KuAwccC
pj6WmPLgYwGDj0XHJ/SxgMHHEjcf8LGAwccCBh8LGHwsYPCx6HiEPhYw+FjA
4GMBg48FDD4WMPhYwOBjAYOPRccr9LGAwccCBh8LGPwrcQw+FjD4WMDgYwGD
jwUMPhYw+FjA4GMBg48FDD4WMPhYwOBjAYOPBQw+FjD4WJSFPhYw+FjA4GMB
g48FDD4WMPhYwOBjAVMfSxjgYwGDjwUMPhbtD3wsYVAfSxjgYwFTH0sY1L8S
w9THEgb1sYQBPhYw+FjM+P7bxwIGHwsYfCxg8LGAwa8Cpj6WMMDHElcefCxg
8LGAwccCBt8KGHwscXnwsWh5oY8FTH0sYYCPBQw+lrjy4GMBg48FDD4WMPhY
wOBjAYOPBQw+FjD1sYRBfSxhUB8Lrh/4V2KY+ljCAB8LGHwsYPCpgMHHEpcH
H0tcHnwsYPCxgMHHotdT6GMBg48FDD4WMPhYwL3nY/Wej9V7Pha/93ys3vOx
es/H6j0fq/d8rN7zsXrPx+o9H6v3fKze87F6z8fqPR+r93ys3vOxes/H6j0f
q/d8rN7zsXrPx+o9H6v3fKze87F6z8fqPR+r93ys3vOxes/H6j0fq/d8rN7z
sXrPx+o9H6v3fKze87H+I+dj/RcpJuVU
    "], {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{602, 1}], LineBox[{603, 2}], LineBox[{604, 3}], 
       LineBox[{605, 4}], LineBox[{606, 5}], LineBox[{607, 6}], 
       LineBox[{619, 18}], LineBox[{622, 21}], LineBox[{631, 30}], 
       LineBox[{635, 34}], LineBox[{636, 35}], LineBox[{637, 36}], 
       LineBox[{643, 42}], LineBox[{644, 43}], LineBox[{645, 44}], 
       LineBox[{646, 45}], LineBox[{647, 46}], LineBox[{648, 47}], 
       LineBox[{649, 48}], LineBox[{650, 49}], LineBox[{651, 50}], 
       LineBox[{652, 51}], LineBox[{653, 52}], LineBox[{654, 53}], 
       LineBox[{655, 54}], LineBox[{656, 55}], LineBox[{657, 56}], 
       LineBox[{658, 57}], LineBox[{659, 58}], LineBox[{660, 59}], 
       LineBox[{661, 60}], LineBox[{662, 61}], LineBox[{663, 62}], 
       LineBox[{664, 63}], LineBox[{665, 64}], LineBox[{666, 65}], 
       LineBox[{667, 66}], LineBox[{668, 67}], LineBox[{669, 68}], 
       LineBox[{670, 69}], LineBox[{671, 70}], LineBox[{672, 71}], 
       LineBox[{673, 72}], LineBox[{674, 73}], LineBox[{675, 74}], 
       LineBox[{676, 75}], LineBox[{677, 76}], LineBox[{678, 77}], 
       LineBox[{679, 78}], LineBox[{680, 79}], LineBox[{681, 80}], 
       LineBox[{682, 81}], LineBox[{683, 82}], LineBox[{684, 83}], 
       LineBox[{685, 84}], LineBox[{686, 85}], LineBox[{687, 86}], 
       LineBox[{688, 87}], LineBox[{689, 88}], LineBox[{690, 89}], 
       LineBox[{691, 90}], LineBox[{692, 91}], LineBox[{693, 92}], 
       LineBox[{694, 93}], LineBox[{695, 94}], LineBox[{696, 95}], 
       LineBox[{697, 96}], LineBox[{698, 97}], LineBox[{699, 98}], 
       LineBox[{700, 99}], LineBox[{701, 100}], LineBox[{702, 101}], 
       LineBox[{703, 102}], LineBox[{704, 103}], LineBox[{705, 104}], 
       LineBox[{706, 105}], LineBox[{707, 106}], LineBox[{708, 107}], 
       LineBox[{709, 108}], LineBox[{710, 109}], LineBox[{711, 110}], 
       LineBox[{712, 111}], LineBox[{713, 112}], LineBox[{714, 113}], 
       LineBox[{715, 114}], LineBox[{716, 115}], LineBox[{717, 116}], 
       LineBox[{718, 117}], LineBox[{719, 118}], LineBox[{720, 119}], 
       LineBox[{721, 120}], LineBox[{722, 121}], LineBox[{723, 122}], 
       LineBox[{724, 123}], LineBox[{725, 124}], LineBox[{726, 125}], 
       LineBox[{727, 126}], LineBox[{728, 127}], LineBox[{729, 128}], 
       LineBox[{730, 129}], LineBox[{731, 130}], LineBox[{732, 131}], 
       LineBox[{733, 132}], LineBox[{734, 133}], LineBox[{837, 236}], 
       LineBox[{840, 239}], LineBox[{841, 240}], LineBox[{842, 241}], 
       LineBox[{844, 243}], LineBox[{849, 248}], LineBox[{850, 249}], 
       LineBox[{851, 250}], LineBox[{852, 251}], LineBox[{853, 252}], 
       LineBox[{854, 253}], LineBox[{855, 254}], LineBox[{856, 255}], 
       LineBox[{857, 256}], LineBox[{858, 257}], LineBox[{862, 261}], 
       LineBox[{863, 262}], LineBox[{864, 263}], LineBox[{865, 264}], 
       LineBox[{867, 266}], LineBox[{868, 267}], LineBox[{869, 268}], 
       LineBox[{870, 269}], LineBox[{871, 270}], LineBox[{872, 271}], 
       LineBox[{873, 272}], LineBox[{874, 273}], LineBox[{875, 274}], 
       LineBox[{876, 275}], LineBox[{877, 276}], LineBox[{878, 277}], 
       LineBox[{879, 278}], LineBox[{880, 279}], LineBox[{881, 280}], 
       LineBox[{882, 281}], LineBox[{883, 282}], LineBox[{884, 283}], 
       LineBox[{885, 284}], LineBox[{886, 285}], LineBox[{887, 286}], 
       LineBox[{888, 287}], LineBox[{889, 288}], LineBox[{890, 289}], 
       LineBox[{891, 290}], LineBox[{892, 291}], LineBox[{893, 292}], 
       LineBox[{894, 293}], LineBox[{895, 294}], LineBox[{896, 295}], 
       LineBox[{897, 296}], LineBox[{898, 297}], LineBox[{899, 298}], 
       LineBox[{900, 299}], LineBox[{902, 301}], LineBox[{903, 302}], 
       LineBox[{905, 304}], LineBox[{946, 345}], LineBox[{947, 346}], 
       LineBox[{948, 347}], LineBox[{949, 348}], LineBox[{950, 349}], 
       LineBox[{951, 350}], LineBox[{952, 351}], LineBox[{953, 352}], 
       LineBox[{954, 353}], LineBox[{955, 354}], LineBox[{956, 355}], 
       LineBox[{957, 356}], LineBox[{958, 357}], LineBox[{959, 358}], 
       LineBox[{960, 359}], LineBox[{961, 360}], LineBox[{962, 361}], 
       LineBox[{963, 362}], LineBox[{964, 363}], LineBox[{965, 364}], 
       LineBox[{966, 365}], LineBox[{967, 366}], LineBox[{969, 368}], 
       LineBox[{976, 375}], LineBox[{979, 378}], LineBox[{980, 379}], 
       LineBox[{981, 380}], LineBox[{982, 381}], LineBox[{983, 382}], 
       LineBox[{984, 383}], LineBox[{985, 384}], LineBox[{986, 385}], 
       LineBox[{987, 386}], LineBox[{988, 387}], LineBox[{989, 388}], 
       LineBox[{990, 389}], LineBox[{991, 390}], LineBox[{992, 391}], 
       LineBox[{993, 392}], LineBox[{994, 393}], LineBox[{995, 394}], 
       LineBox[{996, 395}], LineBox[{997, 396}], LineBox[{998, 397}], 
       LineBox[{999, 398}], LineBox[{1000, 399}], LineBox[{1001, 400}], 
       LineBox[{1002, 401}], LineBox[{1003, 402}], LineBox[{1004, 403}], 
       LineBox[{1005, 404}], LineBox[{1006, 405}], LineBox[{1007, 406}], 
       LineBox[{1008, 407}], LineBox[{1009, 408}], LineBox[{1010, 409}], 
       LineBox[{1011, 410}], LineBox[{1012, 411}], LineBox[{1013, 412}], 
       LineBox[{1014, 413}], LineBox[{1015, 414}], LineBox[{1016, 415}], 
       LineBox[{1017, 416}], LineBox[{1018, 417}], LineBox[{1019, 418}], 
       LineBox[{1020, 419}], LineBox[{1021, 420}], LineBox[{1022, 421}], 
       LineBox[{1023, 422}], LineBox[{1024, 423}], LineBox[{1025, 424}], 
       LineBox[{1026, 425}], LineBox[{1027, 426}], LineBox[{1028, 427}], 
       LineBox[{1029, 428}], LineBox[{1030, 429}], LineBox[{1031, 430}], 
       LineBox[{1032, 431}], LineBox[{1033, 432}], LineBox[{1034, 433}], 
       LineBox[{1035, 434}], LineBox[{1036, 435}], LineBox[{1037, 436}], 
       LineBox[{1038, 437}], LineBox[{1039, 438}], LineBox[{1040, 439}], 
       LineBox[{1041, 440}], LineBox[{1042, 441}], LineBox[{1043, 442}], 
       LineBox[{1044, 443}], LineBox[{1045, 444}], LineBox[{1046, 445}], 
       LineBox[{1047, 446}], LineBox[{1048, 447}], LineBox[{1050, 449}], 
       LineBox[{1051, 450}], LineBox[{1052, 451}], LineBox[{1053, 452}], 
       LineBox[{1054, 453}], LineBox[{1055, 454}], LineBox[{1056, 455}], 
       LineBox[{1057, 456}], LineBox[{1058, 457}], LineBox[{1059, 458}], 
       LineBox[{1061, 460}], LineBox[{1062, 461}], LineBox[{1063, 462}], 
       LineBox[{1065, 464}], LineBox[{1066, 465}], LineBox[{1067, 466}], 
       LineBox[{1068, 467}], LineBox[{1069, 468}], LineBox[{1070, 469}], 
       LineBox[{1071, 470}], LineBox[{1072, 471}], LineBox[{1073, 472}], 
       LineBox[{1074, 473}], LineBox[{1075, 474}], LineBox[{1076, 475}], 
       LineBox[{1077, 476}], LineBox[{1078, 477}], LineBox[{1079, 478}], 
       LineBox[{1080, 479}], LineBox[{1081, 480}], LineBox[{1082, 481}], 
       LineBox[{1083, 482}], LineBox[{1084, 483}], LineBox[{1085, 484}], 
       LineBox[{1086, 485}], LineBox[{1087, 486}], LineBox[{1088, 487}], 
       LineBox[{1089, 488}], LineBox[{1090, 489}], LineBox[{1091, 490}], 
       LineBox[{1092, 491}], LineBox[{1093, 492}], LineBox[{1094, 493}], 
       LineBox[{1095, 494}], LineBox[{1096, 495}], LineBox[{1097, 496}], 
       LineBox[{1098, 497}], LineBox[{1099, 498}], LineBox[{1100, 499}], 
       LineBox[{1101, 500}], LineBox[{1102, 501}], LineBox[{1103, 502}], 
       LineBox[{1104, 503}], LineBox[{1105, 504}], LineBox[{1106, 505}], 
       LineBox[{1107, 506}], LineBox[{1108, 507}], LineBox[{1109, 508}], 
       LineBox[{1110, 509}], LineBox[{1111, 510}], LineBox[{1112, 511}], 
       LineBox[{1113, 512}], LineBox[{1114, 513}], LineBox[{1115, 514}], 
       LineBox[{1116, 515}], LineBox[{1117, 516}], LineBox[{1118, 517}], 
       LineBox[{1119, 518}], LineBox[{1120, 519}], LineBox[{1121, 520}], 
       LineBox[{1122, 521}], LineBox[{1123, 522}], LineBox[{1124, 523}], 
       LineBox[{1125, 524}], LineBox[{1126, 525}], LineBox[{1127, 526}], 
       LineBox[{1128, 527}], LineBox[{1129, 528}], LineBox[{1130, 529}], 
       LineBox[{1131, 530}], LineBox[{1132, 531}], LineBox[{1133, 532}], 
       LineBox[{1134, 533}], LineBox[{1135, 534}], LineBox[{1136, 535}], 
       LineBox[{1137, 536}], LineBox[{1138, 537}], LineBox[{1139, 538}], 
       LineBox[{1140, 539}], LineBox[{1141, 540}], LineBox[{1142, 541}], 
       LineBox[{1143, 542}], LineBox[{1144, 543}], LineBox[{1145, 544}], 
       LineBox[{1146, 545}], LineBox[{1148, 547}], LineBox[{1149, 548}], 
       LineBox[{1150, 549}], LineBox[{1152, 551}], LineBox[{1153, 552}], 
       LineBox[{1154, 553}], LineBox[{1155, 554}], LineBox[{1156, 555}], 
       LineBox[{1157, 556}], LineBox[{1158, 557}], LineBox[{1159, 558}], 
       LineBox[{1160, 559}], LineBox[{1161, 560}], LineBox[{1162, 561}], 
       LineBox[{1163, 562}], LineBox[{1164, 563}], LineBox[{1165, 564}], 
       LineBox[{1166, 565}], LineBox[{1167, 566}], LineBox[{1168, 567}], 
       LineBox[{1169, 568}], LineBox[{1170, 569}], LineBox[{1171, 570}], 
       LineBox[{1172, 571}], LineBox[{1173, 572}], LineBox[{1174, 573}], 
       LineBox[{1175, 574}], LineBox[{1176, 575}], LineBox[{1177, 576}], 
       LineBox[{1178, 577}], LineBox[{1179, 578}], LineBox[{1180, 579}], 
       LineBox[{1181, 580}], LineBox[{1182, 581}], LineBox[{1183, 582}], 
       LineBox[{1186, 585}], LineBox[{1188, 587}], LineBox[{1190, 589}], 
       LineBox[{1191, 590}], LineBox[{1192, 591}], LineBox[{1193, 592}], 
       LineBox[{1194, 593}], LineBox[{1195, 594}], LineBox[{1196, 595}], 
       LineBox[{1197, 596}], LineBox[{1198, 597}], LineBox[{1199, 598}], 
       LineBox[{1200, 599}], LineBox[{1201, 600}], LineBox[{1202, 601}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{608, 7}], LineBox[{609, 8}], LineBox[{610, 9}], 
       LineBox[{611, 10}], LineBox[{612, 11}], LineBox[{613, 12}], 
       LineBox[{614, 13}], LineBox[{615, 14}], LineBox[{616, 15}], 
       LineBox[{617, 16}], LineBox[{618, 17}], LineBox[{620, 19}], 
       LineBox[{621, 20}], LineBox[{623, 22}], LineBox[{624, 23}], 
       LineBox[{625, 24}], LineBox[{626, 25}], LineBox[{627, 26}], 
       LineBox[{628, 27}], LineBox[{629, 28}], LineBox[{630, 29}], 
       LineBox[{632, 31}], LineBox[{633, 32}], LineBox[{634, 33}], 
       LineBox[{638, 37}], LineBox[{639, 38}], LineBox[{640, 39}], 
       LineBox[{641, 40}], LineBox[{642, 41}], LineBox[{735, 134}], 
       LineBox[{736, 135}], LineBox[{737, 136}], LineBox[{738, 137}], 
       LineBox[{739, 138}], LineBox[{740, 139}], LineBox[{741, 140}], 
       LineBox[{742, 141}], LineBox[{743, 142}], LineBox[{744, 143}], 
       LineBox[{745, 144}], LineBox[{746, 145}], LineBox[{747, 146}], 
       LineBox[{748, 147}], LineBox[{749, 148}], LineBox[{750, 149}], 
       LineBox[{751, 150}], LineBox[{752, 151}], LineBox[{753, 152}], 
       LineBox[{754, 153}], LineBox[{755, 154}], LineBox[{756, 155}], 
       LineBox[{757, 156}], LineBox[{758, 157}], LineBox[{759, 158}], 
       LineBox[{760, 159}], LineBox[{761, 160}], LineBox[{762, 161}], 
       LineBox[{763, 162}], LineBox[{764, 163}], LineBox[{765, 164}], 
       LineBox[{766, 165}], LineBox[{767, 166}], LineBox[{768, 167}], 
       LineBox[{769, 168}], LineBox[{770, 169}], LineBox[{771, 170}], 
       LineBox[{772, 171}], LineBox[{773, 172}], LineBox[{774, 173}], 
       LineBox[{775, 174}], LineBox[{776, 175}], LineBox[{777, 176}], 
       LineBox[{778, 177}], LineBox[{779, 178}], LineBox[{780, 179}], 
       LineBox[{781, 180}], LineBox[{782, 181}], LineBox[{783, 182}], 
       LineBox[{784, 183}], LineBox[{785, 184}], LineBox[{786, 185}], 
       LineBox[{787, 186}], LineBox[{788, 187}], LineBox[{789, 188}], 
       LineBox[{790, 189}], LineBox[{791, 190}], LineBox[{792, 191}], 
       LineBox[{793, 192}], LineBox[{794, 193}], LineBox[{795, 194}], 
       LineBox[{796, 195}], LineBox[{797, 196}], LineBox[{798, 197}], 
       LineBox[{799, 198}], LineBox[{800, 199}], LineBox[{801, 200}], 
       LineBox[{802, 201}], LineBox[{803, 202}], LineBox[{804, 203}], 
       LineBox[{805, 204}], LineBox[{806, 205}], LineBox[{807, 206}], 
       LineBox[{808, 207}], LineBox[{809, 208}], LineBox[{810, 209}], 
       LineBox[{811, 210}], LineBox[{812, 211}], LineBox[{813, 212}], 
       LineBox[{814, 213}], LineBox[{815, 214}], LineBox[{816, 215}], 
       LineBox[{817, 216}], LineBox[{818, 217}], LineBox[{819, 218}], 
       LineBox[{820, 219}], LineBox[{821, 220}], LineBox[{822, 221}], 
       LineBox[{823, 222}], LineBox[{824, 223}], LineBox[{825, 224}], 
       LineBox[{826, 225}], LineBox[{827, 226}], LineBox[{828, 227}], 
       LineBox[{829, 228}], LineBox[{830, 229}], LineBox[{831, 230}], 
       LineBox[{832, 231}], LineBox[{833, 232}], LineBox[{834, 233}], 
       LineBox[{835, 234}], LineBox[{836, 235}], LineBox[{838, 237}], 
       LineBox[{839, 238}], LineBox[{843, 242}], LineBox[{845, 244}], 
       LineBox[{846, 245}], LineBox[{847, 246}], LineBox[{848, 247}], 
       LineBox[{859, 258}], LineBox[{860, 259}], LineBox[{861, 260}], 
       LineBox[{866, 265}], LineBox[{901, 300}], LineBox[{904, 303}], 
       LineBox[{906, 305}], LineBox[{907, 306}], LineBox[{908, 307}], 
       LineBox[{909, 308}], LineBox[{910, 309}], LineBox[{911, 310}], 
       LineBox[{912, 311}], LineBox[{913, 312}], LineBox[{914, 313}], 
       LineBox[{915, 314}], LineBox[{916, 315}], LineBox[{917, 316}], 
       LineBox[{918, 317}], LineBox[{919, 318}], LineBox[{920, 319}], 
       LineBox[{921, 320}], LineBox[{922, 321}], LineBox[{923, 322}], 
       LineBox[{924, 323}], LineBox[{925, 324}], LineBox[{926, 325}], 
       LineBox[{927, 326}], LineBox[{928, 327}], LineBox[{929, 328}], 
       LineBox[{930, 329}], LineBox[{931, 330}], LineBox[{932, 331}], 
       LineBox[{933, 332}], LineBox[{934, 333}], LineBox[{935, 334}], 
       LineBox[{936, 335}], LineBox[{937, 336}], LineBox[{938, 337}], 
       LineBox[{939, 338}], LineBox[{940, 339}], LineBox[{941, 340}], 
       LineBox[{942, 341}], LineBox[{943, 342}], LineBox[{944, 343}], 
       LineBox[{945, 344}], LineBox[{968, 367}], LineBox[{970, 369}], 
       LineBox[{971, 370}], LineBox[{972, 371}], LineBox[{973, 372}], 
       LineBox[{974, 373}], LineBox[{975, 374}], LineBox[{977, 376}], 
       LineBox[{978, 377}], LineBox[{1049, 448}], LineBox[{1060, 459}], 
       LineBox[{1064, 463}], LineBox[{1147, 546}], LineBox[{1151, 550}], 
       LineBox[{1184, 583}], LineBox[{1185, 584}], LineBox[{1187, 586}], 
       LineBox[{1189, 588}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.008333333333333333], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwN02PDHgQAAMBnfMdmW81sttmabTfbtu2Gmm3btm3bVvfhfsIladi2Yptg
gUCgRvBAYF3IQGA9G9jIJjazha1sYzs72MkudrOHvexjPwc4yCEOc4SjHOM4
JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1uc4e73OM+D3jIIx7zhKc84zkv
eMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJLwKhAoFgBCcEIQlFaIIIQ1jCEZ4I
ROQ3IhGZKEQlGtGJQUxiEZs4xCUe8UlAQhKRmCQkJRnJScHvpCQVqUlDWtKR
ngxkJBOZycIfZCUb2clBTnKRmzzkJR/5KUBBClGYIhSlGMUpQUlKUZoy/ElZ
/qIc5alARSpRmSpUpRrVqUFNalGbOtSlHvVpQEMa0ZgmNKUZf9OcFrSkFa1p
Q1va0Z4OdKQTnelCV7rRnR70pBe96UNf+tGfAQxkEIMZwlCGMZwRjGQUoxnD
WMYxnglMZBKTmcJUpjGdf5jBTGYxm3/5jznMZR7zWcBCFrGYJSxlGctZwUpW
sZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgjHOUYxznBSU5x
mjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc85RnPecFLXvGa
N7zlHe/5wEc+8ZkvfOUb3/nBT34RCO0/wQlBSEIRmiDCEJZwhCcCEfmNSEQm
ClGJRnRiEJNYxCYOcYlHfBKQkEQkJglJSUZyUvA7KUlFatKQlnSkJwMZyURm
svAHWclGdnKQk1zkJg95yUd+ClCQQhSmCEUpRnFKUJJSlKYMf1KWvyhHeSpQ
kUpUpgpVqUZ1alCTWtSmDnWpR30a0JBGNKYJTWnG3zSnBS1pRWva0JZ2tKcD
HelEZ7rQlW50pwc96UVv+tCXfvRnAAMZxGCGMJRhDGcEIxnFaMYwlnGMZwIT
mcRkpjCVaUznH2Ywk1nM5l/+Yw5zmcd8FrCQRSxmCUtZxnJWsJJVrGYNa1nH
ejawkU1sZgtb2cZ2drCTXexmD3vZx34OcJBDHOYIRznGcU5wklOc5gxnOcd5
LnCRS1zmCle5xnVucJNb3OYOd7nHfR7wkEc85glPecZzXvCSV7zmDW95x3s+
8JFPfOYLX/nGd37wk18EgvwnOCEISShCE0QYwhKO8PwPe4pPLQ==
        "]]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.9906385808314865, 0},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"actual value - predicted value\"", TraditionalForm], None}, {
     FormBox["\"predicted value\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0.9931911554750763, 
   1.1565559326648247`}, {-0.16236706412295387`, 0.16236706412295387`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6381216435390825`*^9, 3.6381295663544235`*^9, 
  3.6381300781087317`*^9, 3.6381310638416634`*^9, 3.638131654219098*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pnn", "[", 
  RowBox[{
   RowBox[{"Drop", "[", 
    RowBox[{"init", ",", 
     RowBox[{"-", "1"}]}], "]"}], ",", "\"\<Distribution\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.63812165937311*^9, 3.6381216860179567`*^9}}],

Cell[BoxData[
 RowBox[{"NormalDistribution", "[", 
  RowBox[{"0.9826060048940265`", ",", "0.030478358753260288`"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.638121686626358*^9, 3.638129570332431*^9, 
  3.6381300814939375`*^9, 3.638131066462468*^9}]
}, Open  ]],

Cell["\<\
NearestNeighbors produces excellent fit to the data, but significantly higher \
volatility\
\>", "Text",
 CellChangeTimes->{{3.6381217423652563`*^9, 3.638121786872134*^9}, 
   3.6381303529968147`*^9}],

Cell["Neural network", "Item",
 CellChangeTimes->{{3.6381217944693475`*^9, 3.638121798275754*^9}, 
   3.6381218443894353`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pneural", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainset", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "validset"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}], ",", 
    RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.638121822518197*^9, 3.638121838617425*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NeuralNetwork\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NeuralNetwork\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["600", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.638121849069443*^9, 3.638129576728442*^9, 
  3.63813008860755*^9, 3.6381310716260767`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pneuraltest", "=", 
   RowBox[{"PredictorMeasurements", "[", 
    RowBox[{"pneural", ",", "testset"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"pneuraltest", "[", "\"\<ResidualPlot\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.6381218643418703`*^9, 3.6381219176627636`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
sl33k2hhvULUY55/cz0NXF4aiWn0w6kP2/D62XvToZ4TDqZRcbdhwwtnScf7
ga91pklUt/hn30+8Hzkl6iiYbE4iv3eePZ8s5/f5tdi2dEA8haptjFEz4/nS
LtU7cW8ipXuZf/+7iMfL4ifjHPwSaWG/U4U7eT/xvt1Xd+ZhMenW581+xuer
kDPhbklvY0m0T0viyukrxt0fFPMtgR6363/zJaevqGha7f8snsIGbtD4j8sz
q77lMio5iZJnmO1SNpQIDavO6aVze/fW8vhszfXzm56wfOyeVNpo8mtpyFLu
v3s1o3ZOSKe7M+K2aHP9/EYqPZ65M5X0Vx4UIq0kgluRw/yVlcmkdrpq2U0T
iXDw2971TunJtHaPQ5H0fOhkvX16SM8Esnf3PVgsrd/RL88sTydQ7fdhwba8
/ysqeoSsj+PxEziz32qO1/CdJDb+nUqXnobU3OH9VdRfZ9O+WRl0+cWfAYu5
vSVZA3YuOp1O7/S6iLJ5vDq2fT7fOyKbvF4eejqvs0R4tCShvLdOLnnbr5q9
jeeX/uxbUcqhudRmrb3d+g78viddCk95ZFNtTqeXo5iLZtvaFRZkUZzVv7g3
itzfHto+jT7Z9PjL4Kvavbm8hysCDYsyaa7ijwuTeH0JGaz2y9Qgkzaq3/dc
2p7Tb/rjdHBZGhWZDza+zeVfsqpcUfMvnQzSNodP4vkm+RW289juFOq0JyhQ
jePnbj6VnPE8mUwsfMP+4/X5/e9DbjUDk2mW6X8V83i8akU8WfkrJ5V+5428
24bPu4/K8iXrXyTTW5vVFwu4vcweXph5cJuYOpunlbhIzx8FuQeMlyXRyj73
K635vKW7KEB3B+dvkPz6eB73t5t5rvLWnkmkr7j9+E1Or6Fpd6WFZhKpx2qY
dpovza+ppVatmIaFiNcEcX9LTvRxPl6bSq8C9kx4yvuXUwcdp8iwDFqhl5Y0
lc+/DfnG643+ptDKocr1vrz/SVxHzexzKp2U1RrSA7i+ymkRP90uZ5ChfY3t
Kh7/VTXG+6a2ziStGrO87Tz/Mn+nr1VcmkXG8RFlo5k1dghbN7TOok9FmxfE
8Pr6/s9H5ePtM6j6X5RkN89/VY0aJc1jadRnZHnZVZ7vwRfVb/wMT6dihRNX
bnF8npNN5J2MNPIo8Zhyn+e/7rSfBpEr08i9rvZXLJ9/VQcG9cjTSKXqITNu
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
HBJPQ/tVOsdzvDi7bfqUfpdoaP7itXuk34+dP+cu3hVJ69MP5rVaLs1/f4Xz
8UgaenDCg0Tuv7yTBvlLWkVTdqs7Uf7S9lH4vretTzSZj1LNHW/J8e4HvD+/
iSav4t7iVOn38afaU5O5P9NnHXPot5LH393hj4vbi+ljK7NbRdY8Hz7Nf3k+
NolepEx7K+LnvcsmXYrskkQBj1p2f24q/d7vGHdlXQI98Rv08gmvV26pCw4E
OojpuGKPoK3cft79uy94vY7PRz5lf225fsGrdStOqYtpz3xLnSLpeaHiS+SN
OUnUovOLqHvcP3kLukVf4/ao+Os+YiXnL1H1MJjY8TK5xhyP2yMdnxM2RJZy
/56e4ttXRVpeyZ3Wh+PEVHpG1G45x5utsFCRlPD5PXJu0idT6e9J4x7sfp5E
M82U+hyUjsfnvuXvT/P5+u6tD90XS3+PCtzbhs/P+zIc+n/k9cG7xa2jF6Zm
UIGnt1GvJdL/L3y0ihrI+5HiF8e7PN96H9actOFaOtl5/bT04/QNNcddunfI
oGtb3vfzYJYcmxK543wWTbbNVrXl+ee4zDqm4X02Ze+1XHOCuer46z63n+RQ
caByD3vp/1Nq6y2qFHJpov+ZQj/O3/CHjdcv3Ry6M0ClY39eL/ImBBrO73uF
LL02NmRLedXU+a7bidZOmT1bldcPiaPGQZWLeTRlTOncXszfsxz0zk+4RpLC
AoVTvF55/I66c33mdeqnuFmvM3/vlB16mpFvd51OfbwyaYQgET5v/zJjSGM+
3VjXQustp992wtvj/cNrVFk/rJUZ1+eSdtzlPinXac/f1Nw7vL65meql2uTd
IMVV6n8qON7bcml+WtVNOvewp40V169/i7MdXZcXkM/OgcPGc3l/uuxsmbOx
kM4vDd/fir/HQkLHVCh+KCCRSaD5G+ays7vtJxoW0IUe7osD+fs39ZVQ0aRy
k94lbFR9wdwxclKGy/AC+vZso+sNfj8t+67j/F4WkJtWN8+uXH5DnJ+DSXAB
ZU5t12ktl38waWFtF+cCasht7O/M62FVwfe05WEF5Lzi3XJp/0kWlQpOWwrp
+b03lec5v71F0x8/1y+gjqXL9hdw/Oed05dOViuge0qzVfR4PzD6lqYdlHaD
Wm3qnPuV+8vNxrDpvM9NGv6qRhzF81n0MmrREfsC8njWVusE93/q+1L3u98K
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
mQT6aEq/Jxwv/kt7OKyU0jN/Ru6Tnl/v33v+yruYBIvqU1d4vdV/9Op82P5C
ynO39W/D/Khu6useoUV0yEHx1ixeH0Uzg1WWzikmgyu7gkONpetnTH3ig2Ka
9WGg9zDeX40s32/6+LmY1Dvdvr2b6x8w1GPV34Ml1FfN4dgG6ffvxaftux0r
IfhYIlmAjwWGjwWW+1iyAB8LDB8LLPexZEHuY8kCfCwwfCwwfCwwfCwwfCww
fCwwfCwwfCwwfCwwfCwwfCyw3MeSBbmPJQvwseT5yXwsMHwsMHwsMHwsMHws
sNzHkgX4WGD4WGD4WGD4WGD4WGD4WGD4WGD4WGD4WPL6yHwsMHwsMHwsMHws
MHwsMHwsMHwsMHwsef1kPhYYPhYYPhYYPhYYPhYYPhZY7mPJgtzHkgX4WGD4
WGD4WGD4WGD4WGD4WGD4WGD4WGD4WGD4WGD4WGC5jyUL8LHA8LHA8LHA8LHA
8LHk8TIfCwwfCwwfCwwfS/68zMcCy30sWYCPBYaPBYaPJW8PmY8Fho8Fho8F
ho8Fho8lr5/Mx5KXDx9LFuBjgeFjgeU+lizAxwLDxwLLfSxZgI8F/l8f6/8H
uY8lC3IfSxbkPpYsyH0sWZD7WLIg97FkAT4WGD4WWO5jyYLcx0L9ZD4WGD4W
WO5jyQJ8LDnLfCwwfCyw3MeSBbmPJQtyH0sW5D6WLMDHAst9LFmQ+1iyIPex
ZAE+Fhg+FljuY8mC3MeSBfhYYLmPJQvwscDwseT1kflYYPhYYPhYYPhYYPhY
YPhYYPhYYPhYYPhYYPhYYPhYYPhYYPhYYPhY8vaR+Vhg+Fhg+Fhg+Fhg+Fhg
+Fhg+Fhg+Fhg+Fhg+Fhg+FhguY8lC/CxwHIfSxbgY4HhY4HhY4HhY4HhY4Hh
Y4HhY4HhY4HhY4HhY4HhY4HhY4HhY4HhY4HhY4HhY4HhY4HhY4HhY4HhY4Hh
Y4HhY4HhY8nfV+ZjgeFjycuT+Vhg+Fhg+FhA+Fhg+Fhg+Fhg+Fhg+Fhg+Fhg
+Fhg+Fhg+Fhg+Fhg+Fhg+FhguY8lC/CxwPCxwPCxwPCxwPCx5OXLfCwwfCx5
+8l8LDB8LHn7yHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsefkyHwsM
HwsMHwsMHwsMHwsMH0tenszHAsPHAsPHAsPHAsPHAsPHAsPHAsPHAsPHAsPH
AsPHkucn87HA8LHA8LHAch9LFuBjgeFjgeFjgeFjydPLfCyw3MeSBfhYYPhY
YPhYYPhYYPhYYPhYYPhY8vrJfCwwfCwwfCwwfCz5+8h8LDB8LDB8LDB8LDB8
LDB8LDB8LDB8LDB8LDB8LHn7yHwsMHwssNzHkgX4WPL6yXwsMHwsMHwsMHws
MHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwseXvJfCwwfCwwfCyw3MeS
BfhYYPhYYPhYYPhYYPhYYPhYYPhYYPhYYPhYYPhYYPhYYPhYYPhYYPhYYPhY
YPhYYPhYYPhYYPhYYLmPJQvwscDwscDwscDwscByH0sW4GOB4WOB4WOB4WPJ
6yPzscByH0sW4GOB4WOB4WOB4WOB4WOB4WPJWeZjgeFjgeFjgeFjgeFjgeFj
geFjgeFjydtH5mOB4WOB4WOB4WOB4WOB4WOB4WOB4WOB4WOB4WOB4WOB4WOB
4WOB4WOB4WOB4WPJy5f5WGD4WPL6ynwsMHwsMHwsMHwssNzHkgX4WGD4WGD4
WGD4WGC5jyUL8LHA8LHA8LHkz8t8LDB8LDB8LDB8LDB8LDB8LHn7yHwssNzH
kgX4WGD4WGD4WGD4WGD4WGD4WGD4WGD4WHKW+Vhg+Fhg+Fhg+Fhg+Fjy95f5
WGD4WGD4WGD4WGC5jyUL8LHAch9LFuBjgeFjgeU+lizAxwLDxwLDxwLDxwLL
fSxZgI8Fho8Fho8Fho8Fho8Fho8lfx+ZjwWGjwWGjwWGjwWGjyVvL5mPBYaP
BYaPBYaPBYaPBYaPBYaPJWeZjwWGjyWPl/lYYPhYYPhYYPhYYPhYYPhYYPhY
YPhYYPhYYPhYYPhYYPhYYPhYYPhY8vaR+Vhg+Fhg+Fhg+Fhg+Fhg+Fhg+Fhg
+Fhg+Fhg+Fhg+Fhg+Fhg+Fhg+Fhg+Fhg+Fhg+Fhg+Fhg+Fhg+Fhg+Fhg+Fhg
+Fhg+Fhg+Fhg+Fhg+Fhg+Fhg+Fhg+FhA+Fhg+Fhg+Fhg+Fhg+Fhg+Fhg+Fhg
+Fhg+Fhg+Fhg+FhguY8lC/CxwPCxwPCxwPCxwPCxwPCxwPCxwPCxwPCxwPCx
wPCxwPCxwPCxwPCx5OllPhZY7mPJAnwsMHwsMHwsMHwsMHwsMHwsMHwsMHws
MHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHws
MHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHws
MHwsMHwsefvIfCwwfCwwfCwwfCwwfCwwfCwwfCwwfCwwfCwwfCwwfCwwfCx5
e8p8LDB8LDB8LDB8LHn5Mh8LDB8LDB8LDB8LDB8LDB9Lnp/MxwLDx5LHy3ws
MHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHws
MHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsMHws
MHwsMHwsMHwsMHwsMHwsMHwsMHwsMHwsefvJfCwwfCwwfCwwfCwwfCyw3MeS
BfhYYPhYYPhYYPhY4Ob7sZrvx2q+H6v5fqzm+7Ga78dqvh+r+X6s5vuxmu/H
ar4fq/l+rOb7sZrvx2q+H6v5fqzm+7Ga78dqvh+r+X6s5vuxmu/Har4fq/l+
rOb7sZrvx2q+H6v5fqzm+7Ga78dqvh+r+X6s5vuxmu/Har4fq/l+rOb7sf5v
7sf6f7HCRxg=
    "], {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{695, 94}], LineBox[{696, 95}], LineBox[{697, 96}], 
       LineBox[{720, 119}], LineBox[{721, 120}], LineBox[{722, 121}], 
       LineBox[{723, 122}], LineBox[{724, 123}], LineBox[{725, 124}], 
       LineBox[{726, 125}], LineBox[{727, 126}], LineBox[{728, 127}], 
       LineBox[{729, 128}], LineBox[{730, 129}], LineBox[{731, 130}], 
       LineBox[{732, 131}], LineBox[{733, 132}], LineBox[{734, 133}], 
       LineBox[{735, 134}], LineBox[{736, 135}], LineBox[{737, 136}], 
       LineBox[{738, 137}], LineBox[{739, 138}], LineBox[{740, 139}], 
       LineBox[{741, 140}], LineBox[{742, 141}], LineBox[{743, 142}], 
       LineBox[{744, 143}], LineBox[{745, 144}], LineBox[{746, 145}], 
       LineBox[{747, 146}], LineBox[{748, 147}], LineBox[{749, 148}], 
       LineBox[{750, 149}], LineBox[{751, 150}], LineBox[{752, 151}], 
       LineBox[{753, 152}], LineBox[{754, 153}], LineBox[{755, 154}], 
       LineBox[{756, 155}], LineBox[{757, 156}], LineBox[{758, 157}], 
       LineBox[{759, 158}], LineBox[{760, 159}], LineBox[{761, 160}], 
       LineBox[{762, 161}], LineBox[{763, 162}], LineBox[{764, 163}], 
       LineBox[{765, 164}], LineBox[{766, 165}], LineBox[{767, 166}], 
       LineBox[{768, 167}], LineBox[{769, 168}], LineBox[{770, 169}], 
       LineBox[{771, 170}], LineBox[{772, 171}], LineBox[{773, 172}], 
       LineBox[{774, 173}], LineBox[{775, 174}], LineBox[{776, 175}], 
       LineBox[{777, 176}], LineBox[{778, 177}], LineBox[{779, 178}], 
       LineBox[{780, 179}], LineBox[{781, 180}], LineBox[{782, 181}], 
       LineBox[{783, 182}], LineBox[{784, 183}], LineBox[{785, 184}], 
       LineBox[{786, 185}], LineBox[{787, 186}], LineBox[{788, 187}], 
       LineBox[{789, 188}], LineBox[{790, 189}], LineBox[{791, 190}], 
       LineBox[{792, 191}], LineBox[{793, 192}], LineBox[{794, 193}], 
       LineBox[{795, 194}], LineBox[{796, 195}], LineBox[{797, 196}], 
       LineBox[{798, 197}], LineBox[{799, 198}], LineBox[{800, 199}], 
       LineBox[{801, 200}], LineBox[{802, 201}], LineBox[{803, 202}], 
       LineBox[{804, 203}], LineBox[{805, 204}], LineBox[{806, 205}], 
       LineBox[{807, 206}], LineBox[{808, 207}], LineBox[{809, 208}], 
       LineBox[{810, 209}], LineBox[{811, 210}], LineBox[{812, 211}], 
       LineBox[{813, 212}], LineBox[{814, 213}], LineBox[{815, 214}], 
       LineBox[{816, 215}], LineBox[{817, 216}], LineBox[{818, 217}], 
       LineBox[{819, 218}], LineBox[{820, 219}], LineBox[{821, 220}], 
       LineBox[{822, 221}], LineBox[{823, 222}], LineBox[{824, 223}], 
       LineBox[{825, 224}], LineBox[{826, 225}], LineBox[{827, 226}], 
       LineBox[{828, 227}], LineBox[{829, 228}], LineBox[{830, 229}], 
       LineBox[{831, 230}], LineBox[{832, 231}], LineBox[{833, 232}], 
       LineBox[{834, 233}], LineBox[{835, 234}], LineBox[{836, 235}], 
       LineBox[{837, 236}], LineBox[{838, 237}], LineBox[{839, 238}], 
       LineBox[{840, 239}], LineBox[{841, 240}], LineBox[{842, 241}], 
       LineBox[{843, 242}], LineBox[{844, 243}], LineBox[{845, 244}], 
       LineBox[{846, 245}], LineBox[{847, 246}], LineBox[{848, 247}], 
       LineBox[{849, 248}], LineBox[{850, 249}], LineBox[{851, 250}], 
       LineBox[{852, 251}], LineBox[{853, 252}], LineBox[{854, 253}], 
       LineBox[{855, 254}], LineBox[{856, 255}], LineBox[{857, 256}], 
       LineBox[{858, 257}], LineBox[{859, 258}], LineBox[{860, 259}], 
       LineBox[{861, 260}], LineBox[{862, 261}], LineBox[{863, 262}], 
       LineBox[{864, 263}], LineBox[{865, 264}], LineBox[{866, 265}], 
       LineBox[{867, 266}], LineBox[{868, 267}], LineBox[{869, 268}], 
       LineBox[{870, 269}], LineBox[{871, 270}], LineBox[{872, 271}], 
       LineBox[{873, 272}], LineBox[{874, 273}], LineBox[{875, 274}], 
       LineBox[{876, 275}], LineBox[{877, 276}], LineBox[{878, 277}], 
       LineBox[{879, 278}], LineBox[{880, 279}], LineBox[{881, 280}], 
       LineBox[{882, 281}], LineBox[{883, 282}], LineBox[{884, 283}], 
       LineBox[{885, 284}], LineBox[{886, 285}], LineBox[{887, 286}], 
       LineBox[{888, 287}], LineBox[{889, 288}], LineBox[{890, 289}], 
       LineBox[{891, 290}], LineBox[{892, 291}], LineBox[{893, 292}], 
       LineBox[{894, 293}], LineBox[{895, 294}], LineBox[{896, 295}], 
       LineBox[{897, 296}], LineBox[{898, 297}], LineBox[{899, 298}], 
       LineBox[{900, 299}], LineBox[{901, 300}], LineBox[{902, 301}], 
       LineBox[{903, 302}], LineBox[{904, 303}], LineBox[{905, 304}], 
       LineBox[{906, 305}], LineBox[{907, 306}], LineBox[{908, 307}], 
       LineBox[{909, 308}], LineBox[{910, 309}], LineBox[{911, 310}], 
       LineBox[{912, 311}], LineBox[{913, 312}], LineBox[{914, 313}], 
       LineBox[{915, 314}], LineBox[{916, 315}], LineBox[{917, 316}], 
       LineBox[{918, 317}], LineBox[{919, 318}], LineBox[{920, 319}], 
       LineBox[{921, 320}], LineBox[{922, 321}], LineBox[{923, 322}], 
       LineBox[{924, 323}], LineBox[{925, 324}], LineBox[{926, 325}], 
       LineBox[{927, 326}], LineBox[{928, 327}], LineBox[{929, 328}], 
       LineBox[{930, 329}], LineBox[{931, 330}], LineBox[{932, 331}], 
       LineBox[{933, 332}], LineBox[{934, 333}], LineBox[{935, 334}], 
       LineBox[{936, 335}], LineBox[{937, 336}], LineBox[{938, 337}], 
       LineBox[{939, 338}], LineBox[{940, 339}], LineBox[{941, 340}], 
       LineBox[{942, 341}], LineBox[{943, 342}], LineBox[{944, 343}], 
       LineBox[{945, 344}], LineBox[{946, 345}], LineBox[{947, 346}], 
       LineBox[{948, 347}], LineBox[{949, 348}], LineBox[{950, 349}], 
       LineBox[{951, 350}], LineBox[{952, 351}], LineBox[{953, 352}], 
       LineBox[{954, 353}], LineBox[{955, 354}], LineBox[{956, 355}], 
       LineBox[{957, 356}], LineBox[{958, 357}], LineBox[{959, 358}], 
       LineBox[{960, 359}], LineBox[{961, 360}], LineBox[{962, 361}], 
       LineBox[{963, 362}], LineBox[{964, 363}], LineBox[{965, 364}], 
       LineBox[{966, 365}], LineBox[{967, 366}], LineBox[{968, 367}], 
       LineBox[{969, 368}], LineBox[{970, 369}], LineBox[{971, 370}], 
       LineBox[{972, 371}], LineBox[{973, 372}], LineBox[{974, 373}], 
       LineBox[{975, 374}], LineBox[{976, 375}], LineBox[{977, 376}], 
       LineBox[{978, 377}], LineBox[{979, 378}], LineBox[{980, 379}], 
       LineBox[{981, 380}], LineBox[{982, 381}], LineBox[{983, 382}], 
       LineBox[{984, 383}], LineBox[{985, 384}], LineBox[{986, 385}], 
       LineBox[{987, 386}], LineBox[{988, 387}], LineBox[{989, 388}], 
       LineBox[{990, 389}], LineBox[{991, 390}], LineBox[{992, 391}], 
       LineBox[{993, 392}], LineBox[{994, 393}], LineBox[{995, 394}], 
       LineBox[{996, 395}], LineBox[{997, 396}], LineBox[{998, 397}], 
       LineBox[{999, 398}], LineBox[{1000, 399}], LineBox[{1001, 400}], 
       LineBox[{1002, 401}], LineBox[{1003, 402}], LineBox[{1004, 403}], 
       LineBox[{1005, 404}], LineBox[{1006, 405}], LineBox[{1007, 406}], 
       LineBox[{1008, 407}], LineBox[{1009, 408}], LineBox[{1010, 409}], 
       LineBox[{1011, 410}], LineBox[{1012, 411}], LineBox[{1013, 412}], 
       LineBox[{1014, 413}], LineBox[{1015, 414}], LineBox[{1016, 415}], 
       LineBox[{1017, 416}], LineBox[{1018, 417}], LineBox[{1019, 418}], 
       LineBox[{1020, 419}], LineBox[{1021, 420}], LineBox[{1022, 421}], 
       LineBox[{1023, 422}], LineBox[{1024, 423}], LineBox[{1025, 424}], 
       LineBox[{1026, 425}], LineBox[{1027, 426}], LineBox[{1028, 427}], 
       LineBox[{1029, 428}], LineBox[{1030, 429}], LineBox[{1031, 430}], 
       LineBox[{1032, 431}], LineBox[{1033, 432}], LineBox[{1034, 433}], 
       LineBox[{1035, 434}], LineBox[{1036, 435}], LineBox[{1037, 436}], 
       LineBox[{1038, 437}], LineBox[{1039, 438}], LineBox[{1040, 439}], 
       LineBox[{1041, 440}], LineBox[{1042, 441}], LineBox[{1043, 442}], 
       LineBox[{1044, 443}], LineBox[{1045, 444}], LineBox[{1046, 445}], 
       LineBox[{1047, 446}], LineBox[{1048, 447}], LineBox[{1049, 448}], 
       LineBox[{1050, 449}], LineBox[{1051, 450}], LineBox[{1052, 451}], 
       LineBox[{1053, 452}], LineBox[{1054, 453}], LineBox[{1055, 454}], 
       LineBox[{1056, 455}], LineBox[{1057, 456}], LineBox[{1058, 457}], 
       LineBox[{1059, 458}], LineBox[{1060, 459}], LineBox[{1061, 460}], 
       LineBox[{1062, 461}], LineBox[{1063, 462}], LineBox[{1064, 463}], 
       LineBox[{1065, 464}], LineBox[{1066, 465}], LineBox[{1067, 466}], 
       LineBox[{1068, 467}], LineBox[{1069, 468}], LineBox[{1070, 469}], 
       LineBox[{1071, 470}], LineBox[{1072, 471}], LineBox[{1073, 472}], 
       LineBox[{1074, 473}], LineBox[{1075, 474}], LineBox[{1076, 475}], 
       LineBox[{1077, 476}], LineBox[{1078, 477}], LineBox[{1079, 478}], 
       LineBox[{1080, 479}], LineBox[{1081, 480}], LineBox[{1082, 481}], 
       LineBox[{1083, 482}], LineBox[{1084, 483}], LineBox[{1085, 484}], 
       LineBox[{1086, 485}], LineBox[{1087, 486}], LineBox[{1088, 487}], 
       LineBox[{1089, 488}], LineBox[{1090, 489}], LineBox[{1091, 490}], 
       LineBox[{1092, 491}], LineBox[{1093, 492}], LineBox[{1094, 493}], 
       LineBox[{1095, 494}], LineBox[{1096, 495}], LineBox[{1097, 496}], 
       LineBox[{1098, 497}], LineBox[{1099, 498}], LineBox[{1100, 499}], 
       LineBox[{1101, 500}], LineBox[{1102, 501}], LineBox[{1103, 502}], 
       LineBox[{1104, 503}], LineBox[{1105, 504}], LineBox[{1106, 505}], 
       LineBox[{1107, 506}], LineBox[{1108, 507}], LineBox[{1109, 508}], 
       LineBox[{1110, 509}], LineBox[{1111, 510}], LineBox[{1112, 511}], 
       LineBox[{1113, 512}], LineBox[{1114, 513}], LineBox[{1115, 514}], 
       LineBox[{1116, 515}], LineBox[{1117, 516}], LineBox[{1118, 517}], 
       LineBox[{1119, 518}], LineBox[{1120, 519}], LineBox[{1121, 520}], 
       LineBox[{1122, 521}], LineBox[{1123, 522}], LineBox[{1124, 523}], 
       LineBox[{1125, 524}], LineBox[{1126, 525}], LineBox[{1127, 526}], 
       LineBox[{1128, 527}], LineBox[{1129, 528}], LineBox[{1130, 529}], 
       LineBox[{1131, 530}], LineBox[{1132, 531}], LineBox[{1133, 532}], 
       LineBox[{1134, 533}], LineBox[{1135, 534}], LineBox[{1136, 535}], 
       LineBox[{1137, 536}], LineBox[{1138, 537}], LineBox[{1139, 538}], 
       LineBox[{1140, 539}], LineBox[{1141, 540}], LineBox[{1142, 541}], 
       LineBox[{1143, 542}], LineBox[{1144, 543}], LineBox[{1145, 544}], 
       LineBox[{1146, 545}], LineBox[{1147, 546}], LineBox[{1148, 547}], 
       LineBox[{1149, 548}], LineBox[{1150, 549}], LineBox[{1151, 550}], 
       LineBox[{1152, 551}], LineBox[{1153, 552}], LineBox[{1154, 553}], 
       LineBox[{1155, 554}], LineBox[{1156, 555}], LineBox[{1157, 556}], 
       LineBox[{1158, 557}], LineBox[{1159, 558}], LineBox[{1160, 559}], 
       LineBox[{1161, 560}], LineBox[{1162, 561}], LineBox[{1163, 562}], 
       LineBox[{1164, 563}], LineBox[{1165, 564}], LineBox[{1166, 565}], 
       LineBox[{1167, 566}], LineBox[{1168, 567}], LineBox[{1169, 568}], 
       LineBox[{1170, 569}], LineBox[{1171, 570}], LineBox[{1172, 571}], 
       LineBox[{1173, 572}], LineBox[{1174, 573}], LineBox[{1175, 574}], 
       LineBox[{1176, 575}], LineBox[{1177, 576}], LineBox[{1178, 577}], 
       LineBox[{1179, 578}], LineBox[{1180, 579}], LineBox[{1181, 580}], 
       LineBox[{1182, 581}], LineBox[{1183, 582}], LineBox[{1184, 583}], 
       LineBox[{1185, 584}], LineBox[{1186, 585}], LineBox[{1187, 586}], 
       LineBox[{1188, 587}], LineBox[{1189, 588}], LineBox[{1190, 589}], 
       LineBox[{1191, 590}], LineBox[{1192, 591}], LineBox[{1193, 592}], 
       LineBox[{1194, 593}], LineBox[{1195, 594}], LineBox[{1196, 595}], 
       LineBox[{1197, 596}], LineBox[{1198, 597}], LineBox[{1199, 598}], 
       LineBox[{1200, 599}], LineBox[{1201, 600}], LineBox[{1202, 601}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{602, 1}], LineBox[{603, 2}], LineBox[{604, 3}], 
       LineBox[{605, 4}], LineBox[{606, 5}], LineBox[{607, 6}], 
       LineBox[{608, 7}], LineBox[{609, 8}], LineBox[{610, 9}], 
       LineBox[{611, 10}], LineBox[{612, 11}], LineBox[{613, 12}], 
       LineBox[{614, 13}], LineBox[{615, 14}], LineBox[{616, 15}], 
       LineBox[{617, 16}], LineBox[{618, 17}], LineBox[{619, 18}], 
       LineBox[{620, 19}], LineBox[{621, 20}], LineBox[{622, 21}], 
       LineBox[{623, 22}], LineBox[{624, 23}], LineBox[{625, 24}], 
       LineBox[{626, 25}], LineBox[{627, 26}], LineBox[{628, 27}], 
       LineBox[{629, 28}], LineBox[{630, 29}], LineBox[{631, 30}], 
       LineBox[{632, 31}], LineBox[{633, 32}], LineBox[{634, 33}], 
       LineBox[{635, 34}], LineBox[{636, 35}], LineBox[{637, 36}], 
       LineBox[{638, 37}], LineBox[{639, 38}], LineBox[{640, 39}], 
       LineBox[{641, 40}], LineBox[{642, 41}], LineBox[{643, 42}], 
       LineBox[{644, 43}], LineBox[{645, 44}], LineBox[{646, 45}], 
       LineBox[{647, 46}], LineBox[{648, 47}], LineBox[{649, 48}], 
       LineBox[{650, 49}], LineBox[{651, 50}], LineBox[{652, 51}], 
       LineBox[{653, 52}], LineBox[{654, 53}], LineBox[{655, 54}], 
       LineBox[{656, 55}], LineBox[{657, 56}], LineBox[{658, 57}], 
       LineBox[{659, 58}], LineBox[{660, 59}], LineBox[{661, 60}], 
       LineBox[{662, 61}], LineBox[{663, 62}], LineBox[{664, 63}], 
       LineBox[{665, 64}], LineBox[{666, 65}], LineBox[{667, 66}], 
       LineBox[{668, 67}], LineBox[{669, 68}], LineBox[{670, 69}], 
       LineBox[{671, 70}], LineBox[{672, 71}], LineBox[{673, 72}], 
       LineBox[{674, 73}], LineBox[{675, 74}], LineBox[{676, 75}], 
       LineBox[{677, 76}], LineBox[{678, 77}], LineBox[{679, 78}], 
       LineBox[{680, 79}], LineBox[{681, 80}], LineBox[{682, 81}], 
       LineBox[{683, 82}], LineBox[{684, 83}], LineBox[{685, 84}], 
       LineBox[{686, 85}], LineBox[{687, 86}], LineBox[{688, 87}], 
       LineBox[{689, 88}], LineBox[{690, 89}], LineBox[{691, 90}], 
       LineBox[{692, 91}], LineBox[{693, 92}], LineBox[{694, 93}], 
       LineBox[{698, 97}], LineBox[{699, 98}], LineBox[{700, 99}], 
       LineBox[{701, 100}], LineBox[{702, 101}], LineBox[{703, 102}], 
       LineBox[{704, 103}], LineBox[{705, 104}], LineBox[{706, 105}], 
       LineBox[{707, 106}], LineBox[{708, 107}], LineBox[{709, 108}], 
       LineBox[{710, 109}], LineBox[{711, 110}], LineBox[{712, 111}], 
       LineBox[{713, 112}], LineBox[{714, 113}], LineBox[{715, 114}], 
       LineBox[{716, 115}], LineBox[{717, 116}], LineBox[{718, 117}], 
       LineBox[{719, 118}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.008333333333333333], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwN02PDHgQAAMBnfMdmW81sttmabTfbtu2Gmm3btm3bVvfhfsIladi2Yptg
gUCgRvBAYF3IQGA9G9jIJjazha1sYzs72MkudrOHvexjPwc4yCEOc4SjHOM4
JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1uc4e73OM+D3jIIx7zhKc84zkv
eMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJLwKhAoFgBCcEIQlFaIIIQ1jCEZ4I
ROQ3IhGZKEQlGtGJQUxiEZs4xCUe8UlAQhKRmCQkJRnJScHvpCQVqUlDWtKR
ngxkJBOZycIfZCUb2clBTnKRmzzkJR/5KUBBClGYIhSlGMUpQUlKUZoy/ElZ
/qIc5alARSpRmSpUpRrVqUFNalGbOtSlHvVpQEMa0ZgmNKUZf9OcFrSkFa1p
Q1va0Z4OdKQTnelCV7rRnR70pBe96UNf+tGfAQxkEIMZwlCGMZwRjGQUoxnD
WMYxnglMZBKTmcJUpjGdf5jBTGYxm3/5jznMZR7zWcBCFrGYJSxlGctZwUpW
sZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgjHOUYxznBSU5x
mjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc85RnPecFLXvGa
N7zlHe/5wEc+8ZkvfOUb3/nBT34RCO0/wQlBSEIRmiDCEJZwhCcCEfmNSEQm
ClGJRnRiEJNYxCYOcYlHfBKQkEQkJglJSUZyUvA7KUlFatKQlnSkJwMZyURm
svAHWclGdnKQk1zkJg95yUd+ClCQQhSmCEUpRnFKUJJSlKYMf1KWvyhHeSpQ
kUpUpgpVqUZ1alCTWtSmDnWpR30a0JBGNKYJTWnG3zSnBS1pRWva0JZ2tKcD
HelEZ7rQlW50pwc96UVv+tCXfvRnAAMZxGCGMJRhDGcEIxnFaMYwlnGMZwIT
mcRkpjCVaUznH2Ywk1nM5l/+Yw5zmcd8FrCQRSxmCUtZxnJWsJJVrGYNa1nH
ejawkU1sZgtb2cZ2drCTXexmD3vZx34OcJBDHOYIRznGcU5wklOc5gxnOcd5
LnCRS1zmCle5xnVucJNb3OYOd7nHfR7wkEc85glPecZzXvCSV7zmDW95x3s+
8JFPfOYLX/nGd37wk18EgvwnOCEISShCE0QYwhKO8PwPe4pPLQ==
        "]]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.9890929933342393, 0},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"actual value - predicted value\"", TraditionalForm], None}, {
     FormBox["\"predicted value\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0.9897381145906995, 1.0310258750041585`}, {-0.2518419416652123,
    0.2518419416652123}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.638121918286765*^9, 3.638129579162046*^9, 
  3.638130091945956*^9, 3.638131073794481*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pneural", "[", 
  RowBox[{
   RowBox[{"Drop", "[", 
    RowBox[{"init", ",", 
     RowBox[{"-", "1"}]}], "]"}], ",", "\"\<Distribution\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.638121933184791*^9, 3.638121954619229*^9}}],

Cell[BoxData[
 RowBox[{"NormalDistribution", "[", 
  RowBox[{"0.9740009153078927`", ",", "0.046119624759607694`"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.63812195536803*^9, 3.6381295825160522`*^9, 
  3.638130096485564*^9, 3.6381310769768867`*^9}]
}, Open  ]],

Cell["\<\
Reasonable fit to the data but with higher volatility than Random Forest.\
\>", "Text",
 CellChangeTimes->{{3.638121991731694*^9, 3.6381220132753315`*^9}, 
   3.6381220653170233`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusion", "Section",
 CellChangeTimes->{{3.63502568176198*^9, 3.6350256839147835`*^9}, {
  3.636143790114644*^9, 3.6361437951222525`*^9}}],

Cell["\<\
Prediction is useful technique for finding relationship in data, especially \
if we have at our disposal larger set of data. Machine learning comes \
particularly handy in detecting patterns better than traditional linear \
model. The tools and methods such as decision trees, neutral networks or \
nearest neighborhood offer more flexibility to find complex relationship \
\>", "Text",
 CellChangeTimes->{{3.6350256936336007`*^9, 3.6350258070926*^9}, 
   3.6350258764035215`*^9, {3.6350641014272857`*^9, 3.6350641091472964`*^9}, {
   3.635065889262333*^9, 3.6350658920723367`*^9}, {3.6361920239921656`*^9, 
   3.6361920908382826`*^9}, {3.6361922398965445`*^9, 3.636192341452723*^9}, {
   3.636192375523183*^9, 3.636192462181335*^9}, {3.636192520369437*^9, 
   3.636192566436318*^9}, {3.6362001371665754`*^9, 3.6362001487965918`*^9}, {
   3.638122214921286*^9, 3.638122347522519*^9}, {3.6381224424282866`*^9, 
   3.6381224455170918`*^9}, {3.6381225120668087`*^9, 
   3.6381227001407394`*^9}, {3.6381303573804226`*^9, 
   3.6381303599856267`*^9}, {3.6381311014377294`*^9, 3.6381311029665318`*^9}}],

Cell["\<\
Prediction as a method to estimate outcome from supporting features naturally \
offers practical solutions to finance and economics where the estimation can \
be quite valuable. Market data generation, growth rates forecast, marketing \
campaign model testing or inflation prediction are just few examples where \
machine learning with prediction focus becomes essential tool for decision \
making.Richer contents and better prediction ability makes machine learning \
more powerful than traditional regression techniques.\
\>", "Text",
 CellChangeTimes->{{3.6350252634940453`*^9, 3.63502530605092*^9}, {
   3.635025347640593*^9, 3.6350254760132184`*^9}, 3.6350256866915884`*^9, {
   3.6350258796327276`*^9, 3.635026103617921*^9}, {3.635064113697303*^9, 
   3.63506411862731*^9}, {3.63619257309753*^9, 3.6361927425762277`*^9}, {
   3.636200179296634*^9, 3.6362002506067343`*^9}, {3.6362008627575912`*^9, 
   3.6362008671875973`*^9}, {3.6381231234382925`*^9, 
   3.6381232421389008`*^9}, {3.638123286130978*^9, 3.638123354989499*^9}, {
   3.638123395986371*^9, 3.6381234555628757`*^9}, {3.6381234970745487`*^9, 
   3.6381236194411635`*^9}, {3.6381303703908453`*^9, 3.638130377301657*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.638122312141657*^9, 3.6381223181164675`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6381231610811586`*^9, 3.6381231643571644`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1206, 693},
WindowMargins->{{38, Automatic}, {-139, Automatic}},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (December 4, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 337, 6, 133, "Title"],
Cell[920, 30, 477, 8, 75, "Subtitle"],
Cell[1400, 40, 310, 9, 64, "Text"],
Cell[1713, 51, 143, 2, 38, "Text"],
Cell[CellGroupData[{
Cell[1881, 57, 125, 2, 86, "Section"],
Cell[2009, 61, 4536, 90, 363, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6582, 156, 279, 4, 86, "Section"],
Cell[6864, 162, 3284, 52, 362, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10185, 219, 164, 2, 86, "Section"],
Cell[10352, 223, 644, 10, 88, "Text"],
Cell[CellGroupData[{
Cell[11021, 237, 138, 1, 37, "Item"],
Cell[11162, 240, 185, 2, 37, "Item"],
Cell[11350, 244, 225, 3, 37, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11624, 253, 345, 4, 86, "Section"],
Cell[11972, 259, 1350, 23, 286, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13359, 287, 108, 1, 86, "Section"],
Cell[13470, 290, 773, 12, 113, "Text"],
Cell[CellGroupData[{
Cell[14268, 306, 214, 3, 59, "Subsection"],
Cell[14485, 311, 794, 12, 88, "Text"],
Cell[CellGroupData[{
Cell[15304, 327, 294, 4, 37, "Item"],
Cell[15601, 333, 276, 6, 37, "Item"],
Cell[15880, 341, 314, 6, 37, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16243, 353, 103, 1, 59, "Subsection"],
Cell[CellGroupData[{
Cell[16371, 358, 1605, 38, 152, "Input"],
Cell[17979, 398, 1049, 25, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19065, 428, 3383, 64, 129, "Input"],
Cell[22451, 494, 101335, 1738, 327, "Output"]
}, Open  ]],
Cell[123801, 2235, 1588, 31, 83, "Input"],
Cell[125392, 2268, 2039, 61, 152, "Input"],
Cell[CellGroupData[{
Cell[127456, 2333, 1484, 38, 152, "Input"],
Cell[128943, 2373, 137648, 2501, 189, "Output"]
}, Open  ]],
Cell[266606, 4877, 235, 5, 38, "Text"],
Cell[266844, 4884, 327, 8, 36, "Input"],
Cell[CellGroupData[{
Cell[267196, 4896, 1023, 24, 83, "Input"],
Cell[268222, 4922, 31879, 825, 183, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[300150, 5753, 235, 3, 59, "Subsection"],
Cell[300388, 5758, 468, 8, 38, "Text"],
Cell[CellGroupData[{
Cell[300881, 5770, 158, 3, 36, "Input"],
Cell[301042, 5775, 2491, 61, 129, "Output"]
}, Open  ]],
Cell[303548, 5839, 262, 7, 38, "Text"],
Cell[CellGroupData[{
Cell[303835, 5850, 683, 13, 36, "Input"],
Cell[304521, 5865, 9662, 184, 86, "Output"]
}, Open  ]],
Cell[314198, 6052, 375, 5, 38, "Text"],
Cell[CellGroupData[{
Cell[314598, 6061, 627, 9, 36, "Input"],
Cell[315228, 6072, 5988, 149, 225, "Output"]
}, Open  ]],
Cell[321231, 6224, 537, 9, 38, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321805, 6238, 112, 1, 59, "Subsection"],
Cell[321920, 6241, 168, 3, 38, "Text"],
Cell[CellGroupData[{
Cell[322113, 6248, 382, 10, 36, "Input"],
Cell[322498, 6260, 1892, 27, 36, "Output"]
}, Open  ]],
Cell[324405, 6290, 461, 8, 38, "Text"],
Cell[CellGroupData[{
Cell[324891, 6302, 760, 19, 83, "Input"],
Cell[325654, 6323, 1062, 20, 42, "Output"],
Cell[326719, 6345, 35801, 601, 319, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[362569, 6952, 169, 2, 59, "Subsection"],
Cell[362741, 6956, 189, 4, 38, "Text"],
Cell[CellGroupData[{
Cell[362955, 6964, 1546, 41, 129, "Input"],
Cell[364504, 7007, 27906, 507, 330, "Output"]
}, Open  ]],
Cell[392425, 7517, 160, 3, 38, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392622, 7525, 221, 3, 59, "Subsection"],
Cell[392846, 7530, 365, 8, 63, "Text"],
Cell[CellGroupData[{
Cell[393236, 7542, 155, 3, 36, "Input"],
Cell[393394, 7547, 2468, 61, 129, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395899, 7613, 480, 8, 36, "Input"],
Cell[396382, 7623, 9250, 177, 86, "Output"]
}, Open  ]],
Cell[405647, 7803, 257, 5, 38, "Text"],
Cell[405907, 7810, 104, 1, 37, "Item"],
Cell[CellGroupData[{
Cell[406036, 7815, 142, 2, 36, "Input"],
Cell[406181, 7819, 33234, 517, 306, "Output"]
}, Open  ]],
Cell[439430, 8339, 158, 2, 37, "Item"],
Cell[CellGroupData[{
Cell[439613, 8345, 76, 1, 36, "Input"],
Cell[439692, 8348, 26498, 495, 461, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[466251, 8850, 211, 2, 86, "Section"],
Cell[466465, 8854, 221, 5, 38, "Text"],
Cell[CellGroupData[{
Cell[466711, 8863, 2512, 55, 152, "Input"],
Cell[469226, 8920, 61816, 1057, 177, "Output"]
}, Open  ]],
Cell[531057, 9980, 215, 4, 38, "Text"],
Cell[CellGroupData[{
Cell[531297, 9988, 204, 5, 37, "Item"],
Cell[531504, 9995, 190, 4, 37, "Item"],
Cell[531697, 10001, 219, 5, 37, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[531965, 10012, 266, 3, 86, "Section"],
Cell[532234, 10017, 607, 10, 38, "Text"],
Cell[532844, 10029, 112, 1, 37, "Item"],
Cell[CellGroupData[{
Cell[532981, 10034, 1491, 37, 126, "Input"],
Cell[534475, 10073, 579, 14, 36, "Output"]
}, Open  ]],
Cell[535069, 10090, 124, 1, 37, "Item"],
Cell[CellGroupData[{
Cell[535218, 10095, 2035, 45, 129, "Input"],
Cell[537256, 10142, 21680, 422, 327, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[558973, 10569, 863, 22, 106, "Input"],
Cell[559839, 10593, 6187, 134, 322, "Output"]
}, Open  ]],
Cell[566041, 10730, 165, 3, 38, "Text"],
Cell[566209, 10735, 103, 1, 37, "Item"],
Cell[CellGroupData[{
Cell[566337, 10740, 176, 3, 36, "Input"],
Cell[566516, 10745, 21794, 432, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[588347, 11182, 628, 14, 60, "Input"],
Cell[588978, 11198, 29604, 500, 316, "Output"]
}, Open  ]],
Cell[618597, 11701, 209, 4, 38, "Text"],
Cell[618809, 11707, 106, 1, 37, "Item"],
Cell[CellGroupData[{
Cell[618940, 11712, 792, 18, 60, "Input"],
Cell[619735, 11732, 1719, 50, 174, "Output"]
}, Open  ]],
Cell[621469, 11785, 93, 1, 37, "Item"],
Cell[CellGroupData[{
Cell[621587, 11790, 271, 5, 36, "Input"],
Cell[621861, 11797, 5141, 110, 300, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[627051, 11913, 119, 1, 86, "Section"],
Cell[627173, 11916, 205, 4, 38, "Text"],
Cell[627381, 11922, 100, 1, 37, "Item"],
Cell[CellGroupData[{
Cell[627506, 11927, 380, 8, 60, "Input"],
Cell[627889, 11937, 7782, 157, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[635708, 12099, 310, 7, 60, "Input"],
Cell[636021, 12108, 32175, 503, 297, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[668233, 12616, 252, 7, 36, "Input"],
Cell[668488, 12625, 246, 5, 36, "Output"]
}, Open  ]],
Cell[668749, 12633, 203, 5, 38, "Text"],
Cell[668955, 12640, 102, 1, 37, "Item"],
Cell[CellGroupData[{
Cell[669082, 12645, 376, 8, 36, "Input"],
Cell[669461, 12655, 7782, 157, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[677280, 12817, 303, 6, 60, "Input"],
Cell[677586, 12825, 29273, 455, 302, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[706896, 13285, 249, 7, 36, "Input"],
Cell[707148, 13294, 249, 5, 36, "Output"]
}, Open  ]],
Cell[707412, 13302, 210, 5, 38, "Text"],
Cell[707625, 13309, 126, 2, 37, "Item"],
Cell[CellGroupData[{
Cell[707776, 13315, 375, 8, 36, "Input"],
Cell[708154, 13325, 7749, 157, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[715940, 13487, 322, 7, 60, "Input"],
Cell[716265, 13496, 32025, 501, 306, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[748327, 14002, 252, 7, 36, "Input"],
Cell[748582, 14011, 250, 5, 36, "Output"]
}, Open  ]],
Cell[748847, 14019, 193, 4, 38, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[749077, 14028, 147, 2, 86, "Section"],
Cell[749227, 14032, 1106, 16, 88, "Text"],
Cell[750336, 14050, 1197, 17, 113, "Text"],
Cell[751536, 14069, 94, 1, 36, "Input"],
Cell[751633, 14072, 96, 1, 36, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
